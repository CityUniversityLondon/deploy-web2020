{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/how-to-apply--pgt.js","webpack:///./src/patterns/how-to-apply/buttons/apply.js","webpack:///./src/patterns/how-to-apply/how-to-apply--pgt.js","webpack:///./src/patterns/how-to-apply/pgt-data.js","webpack:///./src/util.js"],"names":["document","addEventListener","test","navigator","userAgent","howToApplyCTAs","querySelectorAll","Array","from","forEach","howToApply","howToApplyConfig","dataset","config","then","render","edn","ApplyLinks","props","data","map","d","index","text","HowToApply","entryPoints","useState","modalVisible","setModalVisible","firstStep","setFirstStep","progressQualification","setProgressQualification","progressRoute","setProgressRoute","progressDate","setProgressDate","progressMethod","setProgressMethod","furtherStepsPendingIndicator","setFurtherStepsPendingIndicator","windowPrompt","setWindowPrompt","promptQualification","promptRoute","promptEntryPoint","furtherStepsPending","selectionButtonQualification","setSelectionButtonQualification","selectionLinkQualification","setSelectionLinkQualification","selectionButtonRoute","setSelectionButtonRoute","selectionLinkRoute","setSelectionLinkRoute","selectionButtonDate","setSelectionButtonDate","selectionLinkDate","setSelectionLinkDate","selectionHeadingLocationOne","setSelectionHeadingLocationOne","selectionButtonLocationOneDate","setSelectionButtonLocationOneDate","selectionLinkLocationOneDate","setSelectionLinkLocationOneDate","selectionHeadingLocationTwo","setSelectionHeadingLocationTwo","selectionButtonLocationTwoDate","setSelectionButtonLocationTwoDate","selectionLinkLocationTwoDate","setSelectionLinkLocationTwoDate","selectionLinkMethod","setSelectionLinkMethod","selectedQualificationData","selectedQualificationValue","selectedRouteData","selectedRouteValue","selectedDateData","selectedDateValue","clearSelectionOptions","formatDate","sourceDate","months","formattedDate","Date","getUTCMonth","getUTCFullYear","filterMethodsData","methods","dateSpecificPrompt","qualNav","routeNav","dateNav","methodNav","filterQualificationData","filterRouteData","filterDatesData","methodLinks","linkOptions","m","methodLink","header","link","options","apply","push","filterLocation","location","heading","uniqueLocationDataArray","uniqueLocationData","filter","e","locations","fd","v","i","a","indexOf","headingVal","l","buttonVal","length","dateSrc","target","getAttribute","dateLink","locationDateLinks","Set","find","buttonOptions","dateButtons","dateLinks","locationOptions","locationsAll","lo","reduce","filteredData","uniqueLocations","dates","date","db","dateLinksData","lq","filteredDateData","q","buttonQuals","linkRoutes","routeLink","s","bq","textContent","sr","routeLinksData","lr","filteredRouteData","linkQuals","routeNames","innerText","qual","filteredQualData","question","qualificationQuestion","alternative","element","otheryear","otherurl","focusTrap","setFocusTrap","modalContentRef","getModalContent","useEffect","activate","createFocusTrap","initialFocus","querySelector","onDeactivate","clickOutsideDeactivates","disableBodyScroll","deactivate","enableBodyScroll","modalContent","year","propTypes","PropTypes","array","object","timeout","url","axiosRequest","toBool","partialMatchFn","fullMatchFn","removeClass","elem","className","removePartials","matchFn","split","join","reduceMotion","reducedMotionQuery","window","matchMedia","matches","isVisible","offsetHeight","offsetWidth","verticallyInWindow","getBoundingClientRect","top","innerHeight","parametersToObject","parameterString","parameters","substr","parameter","k","objectToParameters","parameterObj","Object","keys","key","gaEvent","event","eventCategory","eventAction","eventLabel","eventValue","nonInteractionHit","dataLayer","appendAll","children","child","appendChild","numberFromString","string","number","replace","isMobile","screen","viewPortWidth","innerWidth","mobileScreen","toArray","obj","detectIE","ua","versionLength","msie","msieVersionOffset","parseInt","substring","trident","tridentVersionOffset","rv","edge","edgeVersionOffset","checkIntersectionObserver","IntersectionObserverEntry","prototype","createHTMLElement","type","attributes","el","createElement","att","label","createTextNode","val","innerHTML","setAttribute","uppercaseFirstLetterLowercaseRest","charAt","toUpperCase","slice","toLowerCase","httpOK","axios","response","status","isCancel","lineNumber","message","fileName","formatTime","timeString","timeZone","time","timeLabel","timeOffset","getTimezoneOffset","getHours","getMinutes","daySuffix","day","eleventh","thirteenth","lastDigit","toString","formatReactDate","days","toISOString","getUTCDay","getUTCDate","arraySlicer","arr","len","newArray","n","screenWidth","size","flattenObj","ob","result","isArray","temp","j","meta","value","name","getVerticalScrollbarWidth","scrollDiv","style","cssText","body","scrollbarWidth","clientWidth","removeChild","root","documentElement","setProperty","classList","remove","add"],"mappings":";QAAA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA,QAAQ,oBAAoB;QAC5B;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA,iBAAiB,4BAA4B;QAC7C;QACA;QACA,kBAAkB,2BAA2B;QAC7C;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;;QAEA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;QAEA;QACA;QACA;QACA;QACA,gBAAgB,uBAAuB;QACvC;;;QAGA;QACA;QACA;QACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAA,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,EAA8C,YAAM;AAChD,MAAI,iBAAiBC,IAAjB,CAAsBC,SAAS,CAACC,SAAhC,CAAJ,EAAgD;AAC5C;AACH,GAFD,MAEO;AACH,QAAMC,cAAc,GAAGL,QAAQ,CAACM,gBAAT,CACnB,wBADmB,CAAvB;AAGAD,kBAAc,IACVE,KAAK,CAACC,IAAN,CAAWH,cAAX,EAA2BI,OAA3B,CAAmC,UAAAC,U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","file":"how-to-apply--pgt.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"how-to-apply--pgt\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([6,\"vendor-dependencies\",\"core\",\"react\",\"axios\",\"vendor-direct\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/**\n * How to apply PGT entry\n *\n * @author Web Development\n * @copyright City St George's, University of London 2020\n */\nimport React from 'react';\nimport { render } from 'react-dom';\nimport HowToApply from './patterns/how-to-apply/how-to-apply--pgt';\nimport { howToApplyConfig } from './patterns/how-to-apply/pgt-data';\nimport edn from 'edn-to-js';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    if (/(Trident|MSIE)/.test(navigator.userAgent)) {\n        return;\n    } else {\n        const howToApplyCTAs = document.querySelectorAll(\n            '.how-to-apply--pgt--js'\n        );\n        howToApplyCTAs &&\n            Array.from(howToApplyCTAs).forEach(howToApply => {\n                howToApplyConfig(howToApply.dataset.config).then(config => {\n                    render(\n                        <HowToApply\n                            config={edn(config)}\n                            element={howToApply}\n                        />,\n                        howToApply\n                    );\n                });\n            });\n    }\n});\n","import React from 'react';\n\nexport default function ApplyLinks(props) {\n    if (props.data) {\n        return props.data.map((d, index) => {\n            return (\n                <li key={index} className=\"apply\">\n                    <a href={d['link']}>\n                        {/* <span>{props.btnText ? props.btnText : d.header}</span> */}\n                        <span>{d.text}</span>\n                        &nbsp;\n                        <span\n                            className=\"far fa-sharp fa-external-link\"\n                            aria-label=\"(external link)\"\n                        />\n                    </a>\n                </li>\n            );\n        });\n    }\n}\n","/**\n * How to apply for postgraduate taught degrees\n *\n * Don't run this via patterns.js, it's a separate compilation.\n *\n * @module patterns/how-to-apply/how-to-apply--pgt\n * @author Web Development\n * @copyright City St George's, University of London 2020\n */\n\nimport React, { useEffect, useState } from 'react';\n\nimport ApplyLinks from './buttons/apply';\nimport PropTypes from 'prop-types';\nimport createFocusTrap from 'focus-trap';\n\nimport { enableBodyScroll, disableBodyScroll } from '../../util';\n\n/**\n * Launch the How to apply modal.\n *\n * @param {object} props The JSON configuration file for the modal.\n * @return {object} The React component to render.\n */\nfunction HowToApply(props) {\n    let entryPoints = props.config;\n    const [modalVisible, setModalVisible] = useState(false),\n        [firstStep, setFirstStep] = useState(false), // Controls 'Start again' visibility\n        [progressQualification, setProgressQualification] = useState(),\n        [progressRoute, setProgressRoute] = useState(),\n        [progressDate, setProgressDate] = useState(),\n        [progressMethod, setProgressMethod] = useState(),\n        [furtherStepsPendingIndicator, setFurtherStepsPendingIndicator] =\n            useState(),\n        [windowPrompt, setWindowPrompt] = useState(\n            'Choose the qualification you wish to apply for:'\n        ),\n        promptQualification = 'Choose the qualification you wish to apply for:',\n        promptRoute = 'Choose the route you wish to apply for:',\n        promptEntryPoint = 'Choose the entry point you wish to apply for:',\n        furtherStepsPending = (\n            <li className=\"how-to-apply--pgt--js__modal__progress__next\">\n                <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                    <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                        <span\n                            className=\"fas fa-circle icon\"\n                            aria-hidden=\"true\"\n                        ></span>\n                    </span>\n                </span>\n            </li>\n        );\n\n    let [selectionButtonQualification, setSelectionButtonQualification] =\n            useState(),\n        [selectionLinkQualification, setSelectionLinkQualification] =\n            useState(),\n        [selectionButtonRoute, setSelectionButtonRoute] = useState(),\n        [selectionLinkRoute, setSelectionLinkRoute] = useState(),\n        [selectionButtonDate, setSelectionButtonDate] = useState(),\n        [selectionLinkDate, setSelectionLinkDate] = useState(),\n        [selectionHeadingLocationOne, setSelectionHeadingLocationOne] =\n            useState(),\n        [selectionButtonLocationOneDate, setSelectionButtonLocationOneDate] =\n            useState(false),\n        [selectionLinkLocationOneDate, setSelectionLinkLocationOneDate] =\n            useState(false),\n        [selectionHeadingLocationTwo, setSelectionHeadingLocationTwo] =\n            useState(),\n        [selectionButtonLocationTwoDate, setSelectionButtonLocationTwoDate] =\n            useState(false),\n        [selectionLinkLocationTwoDate, setSelectionLinkLocationTwoDate] =\n            useState(false),\n        [selectionLinkMethod, setSelectionLinkMethod] = useState(),\n        selectedQualificationData,\n        selectedQualificationValue,\n        selectedRouteData,\n        selectedRouteValue,\n        selectedDateData,\n        selectedDateValue;\n\n    /**\n     * Clear any previously rendered selection buttons/links from the state to prevent superfluous button/link rendering\n     */\n    function clearSelectionOptions() {\n        setSelectionButtonQualification();\n        setSelectionLinkQualification();\n        setSelectionButtonRoute();\n        setSelectionLinkRoute();\n        setSelectionHeadingLocationOne();\n        setSelectionButtonLocationOneDate();\n        setSelectionLinkLocationOneDate();\n        setSelectionHeadingLocationTwo();\n        setSelectionButtonLocationTwoDate();\n        setSelectionLinkLocationTwoDate();\n        setSelectionButtonDate();\n        setSelectionLinkDate();\n        setSelectionLinkMethod();\n    }\n\n    /**\n     * Convert raw date values to full month/year for rendering to buttons.\n     *\n     * @param {string} sourceDate The unformatted date string.\n     */\n    function formatDate(sourceDate) {\n        const months = [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December',\n        ];\n        let formattedDate = new Date(sourceDate);\n        return `${\n            months[formattedDate.getUTCMonth()]\n        } ${formattedDate.getUTCFullYear()}`;\n    }\n\n    /**\n     * Completed programme, route and dates filter. Analyse methods data.\n     *\n     * @param {object} data The filtered data record data, where methods are at the top level.\n     */\n    function filterMethodsData(methods, dateSpecificPrompt) {\n        // Methods of study pre-selection prompt text. If one date exist, this will display in the prompt text; if multiple dates these will render as buttons\n        dateSpecificPrompt ? setWindowPrompt(dateSpecificPrompt) : null;\n\n        // Clear any previously rendered selection buttons/links from the state to prevent superfluous button/link rendering\n        clearSelectionOptions();\n\n        // Variables scoped to this function\n        let qualNav, routeNav, dateNav, methodNav;\n\n        selectedQualificationData\n            ? (qualNav = (\n                  <li className=\"how-to-apply--pgt--js__modal__progress__previous\">\n                      <button\n                          className=\"how-to-apply--pgt--js__modal__progress__wrapper\"\n                          onClick={() => {\n                              // Load qualification select; clear route, date and method from progress navigation\n                              filterQualificationData(entryPoints);\n                              setProgressRoute();\n                              setProgressDate();\n                              setProgressMethod();\n                          }}\n                      >\n                          <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                              <span\n                                  className=\"fas fa-check icon\"\n                                  aria-label=\"Back to choose qualification\"\n                              ></span>\n                          </span>\n                          <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                              Qualification\n                          </span>\n                      </button>\n                  </li>\n              ))\n            : (qualNav = null);\n        setProgressQualification(qualNav);\n\n        selectedRouteData\n            ? (routeNav = (\n                  <li className=\"how-to-apply--pgt--js__modal__progress__previous\">\n                      <button\n                          className=\"how-to-apply--pgt--js__modal__progress__wrapper\"\n                          onClick={() => {\n                              // Load route select; clear date and method from progress navigation\n                              setProgressDate();\n                              setProgressMethod();\n                              if (selectedQualificationData) {\n                                  filterRouteData(\n                                      selectedQualificationData[0]['options']\n                                  );\n                              } else {\n                                  filterQualificationData(entryPoints);\n                              }\n                          }}\n                      >\n                          <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                              <span\n                                  className=\"fas fa-check icon\"\n                                  aria-label=\"Back to choose route\"\n                              ></span>\n                          </span>\n                          <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                              Route\n                          </span>\n                      </button>\n                  </li>\n              ))\n            : (routeNav = null);\n        setProgressRoute(routeNav);\n\n        selectedDateData\n            ? (dateNav = (\n                  <li className=\"how-to-apply--pgt--js__modal__progress__previous\">\n                      <button\n                          className=\"how-to-apply--pgt--js__modal__progress__wrapper\"\n                          onClick={() => {\n                              // Load date select; clear method from progress navigation\n                              setProgressMethod();\n                              if (selectedRouteData) {\n                                  filterDatesData(\n                                      selectedRouteData[0]['options']\n                                  );\n                              } else if (selectedQualificationData) {\n                                  filterRouteData(\n                                      selectedQualificationData[0]['options']\n                                  );\n                              } else {\n                                  filterQualificationData(entryPoints);\n                              }\n                          }}\n                      >\n                          <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                              <span\n                                  className=\"fas fa-check icon\"\n                                  aria-label=\"Back to choose route\"\n                              ></span>\n                          </span>\n                          <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                              Entry point\n                          </span>\n                      </button>\n                  </li>\n              ))\n            : (dateNav = null);\n        setProgressDate(dateNav);\n\n        // Method loads apply links and, if present, will always be the last step, therefore progress icon does nothing on click\n        methodNav = (\n            <li className=\"how-to-apply--pgt--js__modal__progress__current\">\n                <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                    <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                        <span className=\"fas fa-circle icon\"></span>\n                    </span>\n                    <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                        Method of study\n                    </span>\n                </span>\n            </li>\n        );\n        setProgressMethod(methodNav);\n\n        // Final modal step; remove further steps pending indicator\n        setFurtherStepsPendingIndicator();\n\n        let methodLinks = [];\n        let linkOptions;\n\n        methods.map((m) => {\n            const methodLink = {\n                text: m.header,\n                link: m.options.apply,\n            };\n            methodLinks.push(methodLink);\n            linkOptions = <ApplyLinks data={methodLinks} />;\n            setSelectionLinkMethod(linkOptions);\n        });\n    }\n\n    function filterLocation(data, location, heading) {\n        let uniqueLocationDataArray = [];\n        data.map((d) => {\n            let uniqueLocationData = {\n                ...d,\n                options: d.options.filter((e) => e.header === location),\n            };\n            uniqueLocationDataArray.push(uniqueLocationData);\n        });\n\n        // Gather location information for header\n        let locations = [];\n        uniqueLocationDataArray.map((fd) => {\n            fd['options'][0]\n                ? locations.push(fd['options'][0]['header'])\n                : null;\n        });\n\n        // Remove duplicate locations\n        locations = locations.filter((v, i, a) => a.indexOf(v) === i);\n\n        // Create heading\n        let headingVal = locations.map((l) => <h3 key={l}>{l}</h3>);\n\n        // Create buttons\n        let buttonVal = uniqueLocationDataArray.map((fd) => {\n            if (fd['options'].length > 0) {\n                if (fd['options'][0]['options'].length > 1) {\n                    return (\n                        <li key={fd}>\n                            <button>\n                                <span\n                                    data-date-src={fd['header']}\n                                    onClick={(e) => {\n                                        let dateSrc =\n                                            e.target.getAttribute(\n                                                'data-date-src'\n                                            );\n                                        selectedDateValue = formatDate(dateSrc);\n                                        selectedDateData = data.filter(\n                                            (fd) => fd.header === dateSrc\n                                        );\n                                        filterMethodsData(\n                                            selectedDateData[0]['options'][0][\n                                                'options'\n                                            ],\n                                            'Apply online now:'\n                                        );\n                                        setFirstStep(false);\n                                    }}\n                                >\n                                    {formatDate(fd['header'])}\n                                </span>\n                            </button>\n                        </li>\n                    );\n                } else {\n                    const dateLink = {\n                        text: formatDate(fd.header),\n                        link: fd['options'][0]['options'][0]['options'][\n                            'apply'\n                        ],\n                    };\n                    let locationDateLinks = [];\n                    locationDateLinks.push(dateLink);\n                    locationDateLinks = Array.from(\n                        new Set(locationDateLinks.map((a) => a.text))\n                    ).map((text) => {\n                        return locationDateLinks.find((a) => a.text === text);\n                    });\n                    return <ApplyLinks data={locationDateLinks} />;\n                }\n            }\n        });\n\n        uniqueLocationDataArray.map(() => {\n            if (heading === '#location-1') {\n                setSelectionHeadingLocationOne(headingVal);\n                setSelectionButtonLocationOneDate(buttonVal);\n            } else if (heading === '#location-2') {\n                setSelectionHeadingLocationTwo(headingVal);\n                setSelectionButtonLocationTwoDate(buttonVal);\n            }\n        });\n    }\n\n    /**\n     * Completed programme and route filter. Analyse dates data.\n     *\n     * @param {object} data The filtered data record data, where dates are at the top level.\n     */\n    function filterDatesData(data) {\n        // Date pre-selection prompt text\n        setWindowPrompt(promptEntryPoint);\n\n        // data.length === 1 ? setPromptMethod('single') : setPromptMethod('multiple');\n        // setDatesData(data[0]['header']);\n\n        // Clear any previously rendered selection buttons/links from the state to prevent superfluous button/link rendering\n        clearSelectionOptions();\n\n        // Empty relevant state variables to remove superfluous progress navigation rendering\n        setProgressMethod();\n\n        // Clear data stored from previous selections\n        selectedDateData = null;\n\n        // Variables scoped to this function\n        let buttonOptions,\n            linkOptions,\n            dateButtons = [],\n            dateLinks = [],\n            locationOptions = [],\n            locationsAll = [],\n            qualNav,\n            routeNav,\n            dateNav,\n            dateLink;\n\n        // Progress indicator; display selected qualification and route values\n        selectedQualificationData\n            ? (qualNav = (\n                  <li className=\"how-to-apply--pgt--js__modal__progress__previous\">\n                      <button\n                          className=\"how-to-apply--pgt--js__modal__progress__wrapper\"\n                          onClick={() => {\n                              filterQualificationData(entryPoints);\n                          }}\n                      >\n                          <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                              <span\n                                  className=\"fas fa-check icon\"\n                                  aria-label=\"Back to choose qualification\"\n                              ></span>\n                          </span>\n                          <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                              Qualification\n                          </span>\n                      </button>\n                  </li>\n              ))\n            : (qualNav = null);\n        setProgressQualification(qualNav);\n\n        selectedRouteData\n            ? (routeNav = (\n                  <li className=\"how-to-apply--pgt--js__modal__progress__previous\">\n                      <button\n                          className=\"how-to-apply--pgt--js__modal__progress__wrapper\"\n                          onClick={() => {\n                              filterQualificationData(entryPoints);\n                          }}\n                      >\n                          <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                              <span\n                                  className=\"fas fa-check icon\"\n                                  aria-label=\"Back to choose route\"\n                              ></span>\n                          </span>\n                          <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                              Route\n                          </span>\n                      </button>\n                  </li>\n              ))\n            : (routeNav = null);\n        setProgressRoute(routeNav);\n\n        // Method loads apply links and, if present, will always be the last step, therefore progress icon does nothing on click\n        if (selectedDateData) {\n            dateNav = (\n                <li className=\"how-to-apply--pgt--js__modal__progress__current\">\n                    <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                        <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                            <span className=\"fas fa-circle icon\"></span>\n                        </span>\n                        <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                            Entry point\n                        </span>\n                    </span>\n                </li>\n            );\n        } else {\n            dateNav = null;\n        }\n\n        setProgressDate(dateNav);\n\n        data.map((d) => {\n            let locations = d['options'];\n            locations.map((l) => {\n                let methods = l['options'];\n                methods.map(() => {\n                    // Multiple dates; print buttons\n                    if (data.length > 1 || data[0]['options'].length > 1) {\n                        // Date selection required: set progress indicator to route and remove methods\n                        selectedDateValue = (\n                            <li className=\"how-to-apply--pgt--js__modal__progress__current\">\n                                <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                                    <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                                        <span className=\"fas fa-circle icon\"></span>\n                                    </span>\n                                    <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                                        Entry point\n                                    </span>\n                                </span>\n                            </li>\n                        );\n                        setProgressDate(selectedDateValue);\n                        setProgressMethod();\n\n                        // Calculate number of locations\n                        locations.map((lo) => {\n                            locationOptions.push(lo.header);\n                        });\n                        locationOptions = locationOptions.reduce(function (\n                            a,\n                            i\n                        ) {\n                            a.indexOf(i) === -1 ? a.push(i) : null;\n                            return a;\n                        },\n                        []);\n\n                        // Multiple locations, multiple dates => create array of objects per location\n                        if (locationOptions.length > 1) {\n                            locationOptions.map((lo) => {\n                                let filteredData = data.filter(\n                                    (fd) => fd['options'][0]['header'] === lo\n                                );\n                                locationsAll.push(filteredData);\n                            });\n\n                            let uniqueLocations = [];\n                            data.map((d) => {\n                                let dates = d['options'];\n                                dates.map((date) => {\n                                    uniqueLocations.push(date.header);\n                                });\n                            });\n\n                            // Remove duplicate locations\n                            uniqueLocations = uniqueLocations.filter(\n                                (v, i, a) => a.indexOf(v) === i\n                            );\n\n                            for (let i = 1; i <= uniqueLocations.length; i++) {\n                                filterLocation(\n                                    data,\n                                    uniqueLocations[i - 1],\n                                    `#location-${i}`,\n                                    `#location-${i}__buttons`\n                                );\n                            }\n                            // End multiple locations\n                        } else {\n                            // Single location, multiple dates\n                            if (locations.length > 1 || methods.length > 1) {\n                                // Single location, multiple dates, multiple methods => Dates as standard button; further options to follow\n                                dateButtons.push(d.header);\n                                dateButtons = dateButtons.reduce(function (\n                                    a,\n                                    i\n                                ) {\n                                    a.indexOf(i) === -1 ? a.push(i) : null;\n                                    return a;\n                                },\n                                []);\n                                buttonOptions = dateButtons.map((db) => {\n                                    return (\n                                        <li key={db}>\n                                            <button>\n                                                <span\n                                                    data-date-src={db}\n                                                    onClick={(e) => {\n                                                        let dateSrc =\n                                                            e.target.getAttribute(\n                                                                'data-date-src'\n                                                            );\n                                                        selectedDateValue =\n                                                            formatDate(dateSrc);\n                                                        selectedDateData =\n                                                            data.filter(\n                                                                (fd) =>\n                                                                    fd.header ===\n                                                                    dateSrc\n                                                            );\n                                                        filterMethodsData(\n                                                            selectedDateData[0][\n                                                                'options'\n                                                            ][0]['options'],\n                                                            'Apply now for ' +\n                                                                formatDate(\n                                                                    selectedDateData[0][\n                                                                        'header'\n                                                                    ]\n                                                                ) +\n                                                                ' entry:'\n                                                        );\n                                                        setFirstStep(false);\n                                                    }}\n                                                >\n                                                    {formatDate(db)}\n                                                </span>\n                                            </button>\n                                        </li>\n                                    );\n                                });\n\n                                // Modal journey incomplete; display further steps pending indicator\n                                setFurtherStepsPendingIndicator(\n                                    furtherStepsPending\n                                );\n                            } else {\n                                // Single location, multiple dates, single method => Dates as links\n                                dateLinks.push(d.header);\n                                dateLinks = dateLinks.reduce(function (a, i) {\n                                    a.indexOf(i) === -1 ? a.push(i) : null;\n                                    return a;\n                                }, []);\n\n                                // Map each unique date and filter data to extract correct apply links\n                                const dateLinksData = [];\n                                dateLinks.map((lq) => {\n                                    let filteredDateData = data.filter(\n                                        (q) => q.header === lq\n                                    );\n                                    dateLink = {\n                                        text: formatDate(lq),\n                                        link: filteredDateData[0]['options'][0][\n                                            'options'\n                                        ][0]['options']['apply'],\n                                    };\n                                    dateLinksData.push(dateLink);\n                                });\n                                linkOptions = (\n                                    <ApplyLinks data={dateLinksData} />\n                                );\n                                // Final modal step; remove further steps indicator\n                                setFurtherStepsPendingIndicator();\n                            }\n                        }\n                    } else {\n                        // Single date; pass date value to methods function\n                        filterMethodsData(\n                            data[0]['options'][0]['options'],\n                            'Apply for ' +\n                                formatDate(data[0]['header']) +\n                                ' entry:'\n                        );\n                    }\n                });\n            });\n        });\n\n        linkOptions ? setSelectionLinkDate(linkOptions) : null;\n        buttonOptions ? setSelectionButtonDate(buttonOptions) : null;\n    }\n\n    /**\n     * Completed programme filter. Analyse routes data.\n     *\n     * @param {object} data The filtered data record data, where routes are at the top level.\n     */\n    function filterRouteData(data) {\n        // Clear any previously rendered selection buttons/links from the state to prevent superfluous button/link rendering\n        clearSelectionOptions();\n\n        // Empty relevant state variables to remove superfluous progress navigation rendering\n        setProgressDate();\n        setProgressMethod();\n\n        // Clear data stored from previous selections\n        selectedRouteData = null;\n        selectedDateData = null;\n\n        // Variables scoped to this function\n        let buttonQuals = [],\n            linkRoutes = [],\n            routeLink,\n            buttonOptions,\n            linkOptions,\n            locationOptions = [],\n            qualNav;\n\n        // Progress indicator; display selected qualification value\n        selectedQualificationData\n            ? (qualNav = (\n                  <li className=\"how-to-apply--pgt--js__modal__progress__previous\">\n                      <button\n                          className=\"how-to-apply--pgt--js__modal__progress__wrapper\"\n                          onClick={() => {\n                              filterQualificationData(entryPoints);\n                          }}\n                      >\n                          <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                              <span\n                                  className=\"fas fa-check icon\"\n                                  aria-label=\"Back to choose qualification\"\n                              ></span>\n                          </span>\n                          <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                              Qualification\n                          </span>\n                      </button>\n                  </li>\n              ))\n            : (qualNav = null);\n        setProgressQualification(qualNav);\n\n        data.map((s) => {\n            // Routes pre-selection prompt text\n            setWindowPrompt(promptRoute);\n            let dates = s['options'];\n            dates.map((d) => {\n                let locations = d['options'];\n                locations.map((l) => {\n                    let methods = l['options'];\n                    methods.map(() => {\n                        // Store each unique location value in an array\n                        locations.map((lo) => {\n                            locationOptions.push(lo.header);\n                        });\n                        locationOptions = locationOptions.reduce(function (\n                            a,\n                            i\n                        ) {\n                            a.indexOf(i) === -1 ? a.push(i) : null;\n                            return a;\n                        },\n                        []);\n                        if (data.length > 1) {\n                            // Route selection required: set progress indicator to route and remove dates/methods\n                            selectedRouteValue = (\n                                <li className=\"how-to-apply--pgt--js__modal__progress__current\">\n                                    <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                                        <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                                            <span className=\"fas fa-circle icon\"></span>\n                                        </span>\n                                        <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                                            Route\n                                        </span>\n                                    </span>\n                                </li>\n                            );\n                            setProgressRoute(selectedRouteValue);\n                            setProgressDate();\n                            setProgressMethod();\n\n                            if (\n                                dates.length > 1 ||\n                                locationOptions.length > 1 ||\n                                methods.length > 1\n                            ) {\n                                // Standard route button\n                                buttonQuals.push(s.header);\n                                buttonQuals = buttonQuals.reduce(function (\n                                    a,\n                                    i\n                                ) {\n                                    a.indexOf(i) === -1 ? a.push(i) : null;\n                                    return a;\n                                },\n                                []);\n                                buttonOptions = buttonQuals.map((bq) => {\n                                    return (\n                                        <li key={bq}>\n                                            <button>\n                                                <span\n                                                    onClick={(e) => {\n                                                        selectedRouteValue =\n                                                            e.target\n                                                                .textContent;\n                                                        selectedRouteData =\n                                                            data.filter(\n                                                                (sr) =>\n                                                                    sr.header ===\n                                                                    selectedRouteValue\n                                                            );\n                                                        filterDatesData(\n                                                            selectedRouteData[0][\n                                                                'options'\n                                                            ]\n                                                        );\n                                                        setFirstStep(false);\n                                                    }}\n                                                >\n                                                    {bq}\n                                                </span>\n                                            </button>\n                                        </li>\n                                    );\n                                });\n                                // Modal journey incomplete; display further steps pending indicator\n                                setFurtherStepsPendingIndicator(\n                                    furtherStepsPending\n                                );\n                            } else {\n                                // Route as link\n                                linkRoutes.push(s.header);\n                                linkRoutes = linkRoutes.reduce(function (a, i) {\n                                    a.indexOf(i) === -1 ? a.push(i) : null;\n                                    return a;\n                                }, []);\n\n                                // Map each unique route and filter data to extract correct apply links\n                                const routeLinksData = [];\n                                linkRoutes.map((lr) => {\n                                    let filteredRouteData = data.filter(\n                                        (q) => q.header === lr\n                                    );\n                                    routeLink = {\n                                        text: lr,\n                                        link: filteredRouteData[0][\n                                            'options'\n                                        ][0]['options'][0]['options'][0][\n                                            'options'\n                                        ]['apply'],\n                                    };\n                                    routeLinksData.push(routeLink);\n                                });\n                                linkOptions = (\n                                    <ApplyLinks data={routeLinksData} />\n                                );\n                                // Final modal step; remove further steps indicator\n                                setFurtherStepsPendingIndicator();\n                            }\n                        } else {\n                            // Move to dates function\n                            filterDatesData(data[0]['options']);\n                        }\n                    });\n                });\n            });\n        });\n\n        // If route options and/or links exist, update state to render relevant JSX\n        buttonOptions ? setSelectionButtonRoute(buttonOptions) : null;\n        linkOptions ? setSelectionLinkRoute(linkOptions) : null;\n    }\n\n    /**\n     * Analyse programme data record data.\n     *\n     * @param {object} data The original data record data, where programmes are at the top level.\n     */\n    function filterQualificationData(data) {\n        // If qualification select exists, it will be the first step in the modal; disable 'Start again' option\n        setFirstStep(true);\n\n        // Qualification pre-selection prompt text\n        setWindowPrompt(promptQualification);\n\n        // Clear any previously rendered selection buttons/links from the state to prevent superfluous button/link rendering\n        clearSelectionOptions();\n\n        // Empty relevant state variables to remove superfluous progress navigation rendering\n        setProgressRoute();\n        setProgressDate();\n        setProgressMethod();\n\n        // Clear data stored from previous selections\n        selectedQualificationData = null;\n        selectedRouteData = null;\n        selectedDateData = null;\n\n        // Variables scoped to this function\n        let buttonQuals = [],\n            linkQuals = [],\n            buttonOptions,\n            linkOptions,\n            locationOptions = [];\n\n        if (data.length > 1) {\n            // Qualification selection required: set progress indicator to qualification and remove routes/dates/methods\n            selectedQualificationValue = (\n                <li className=\"how-to-apply--pgt--js__modal__progress__current\">\n                    <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                        <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                            <span className=\"fas fa-circle icon\"></span>\n                        </span>\n                        <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                            Qualification\n                        </span>\n                    </span>\n                </li>\n            );\n            setProgressQualification(selectedQualificationValue);\n        }\n\n        data.length > 1\n            ? data.map((e) => {\n                  let routeNames = e['options'];\n                  routeNames.map((s) => {\n                      let dates = s['options'];\n                      dates.map((d) => {\n                          let locations = d['options'];\n                          locations.map((l) => {\n                              let methods = l['options'];\n                              methods.map(() => {\n                                  // Store each unique location value in an array\n                                  locations.map((lo) => {\n                                      locationOptions.push(lo.header);\n                                  });\n                                  locationOptions = locationOptions.reduce(\n                                      function (a, i) {\n                                          a.indexOf(i) === -1\n                                              ? a.push(i)\n                                              : null;\n                                          return a;\n                                      },\n                                      []\n                                  );\n                                  if (data.length > 1) {\n                                      if (\n                                          routeNames.length > 1 ||\n                                          dates.length > 1 ||\n                                          locationOptions.length > 1 ||\n                                          methods.length > 1\n                                      ) {\n                                          buttonQuals.push(e.header);\n                                          buttonQuals = buttonQuals.reduce(\n                                              function (a, i) {\n                                                  a.indexOf(i) === -1\n                                                      ? a.push(i)\n                                                      : null;\n                                                  return a;\n                                              },\n                                              []\n                                          );\n                                          buttonOptions = buttonQuals.map(\n                                              (bq) => {\n                                                  return (\n                                                      <li key={bq}>\n                                                          <button>\n                                                              <span\n                                                                  onClick={(\n                                                                      e\n                                                                  ) => {\n                                                                      selectedQualificationValue =\n                                                                          e\n                                                                              .target\n                                                                              .innerText;\n                                                                      selectedQualificationData =\n                                                                          data.filter(\n                                                                              (\n                                                                                  qual\n                                                                              ) =>\n                                                                                  qual.header ===\n                                                                                  selectedQualificationValue\n                                                                          );\n                                                                      filterRouteData(\n                                                                          selectedQualificationData[0][\n                                                                              'options'\n                                                                          ]\n                                                                      );\n                                                                      setFirstStep(\n                                                                          false\n                                                                      );\n                                                                  }}\n                                                              >\n                                                                  {bq}\n                                                              </span>\n                                                          </button>\n                                                      </li>\n                                                  );\n                                              }\n                                          );\n                                          // Modal journey incomplete; display further steps pending indicator\n                                          setFurtherStepsPendingIndicator(\n                                              furtherStepsPending\n                                          );\n                                      } else {\n                                          linkQuals.push(e.header);\n                                          linkQuals = linkQuals.reduce(\n                                              function (a, i) {\n                                                  a.indexOf(i) === -1\n                                                      ? a.push(i)\n                                                      : null;\n                                                  return a;\n                                              },\n                                              []\n                                          );\n\n                                          // Map each unique qualification and filter data to extract correct apply links\n                                          const methodLinks = [];\n                                          linkQuals.map((lq) => {\n                                              let filteredQualData =\n                                                  data.filter(\n                                                      (q) => q.header === lq\n                                                  );\n                                              const methodLink = {\n                                                  text: lq,\n                                                  link: filteredQualData[0][\n                                                      'options'\n                                                  ][0]['options'][0][\n                                                      'options'\n                                                  ][0]['options'][0]['options'][\n                                                      'apply'\n                                                  ],\n                                              };\n                                              methodLinks.push(methodLink);\n                                          });\n                                          linkOptions = (\n                                              <ApplyLinks data={methodLinks} />\n                                          );\n                                          // Move to end of function and use qualification variable? Similar approach to ternary operator used at end of dates function\n                                      }\n                                  }\n                              });\n                          });\n                      });\n                  });\n              })\n            : // One qualification; move to routes function\n              filterRouteData(entryPoints[0]['options']);\n\n        buttonOptions ? setSelectionButtonQualification(buttonOptions) : null;\n        linkOptions ? setSelectionLinkQualification(linkOptions) : null;\n    }\n\n    // Modal wrapper render\n    const question = 'qualification',\n        qualificationQuestion = question === 'qualification' && (\n            <>\n                <div className=\"how-to-apply--pgt--js__modal__content-wrapper\">\n                    <p>{windowPrompt}</p>\n                    {/* Different JSX needed when multiple locations present */}\n                    {!(\n                        selectionHeadingLocationOne ||\n                        selectionButtonLocationOneDate ||\n                        selectionLinkLocationOneDate ||\n                        selectionHeadingLocationTwo ||\n                        selectionButtonLocationTwoDate ||\n                        selectionLinkLocationTwoDate\n                    ) ? (\n                        <ul className=\"how-to-apply--pgt--js__options\">\n                            {selectionButtonQualification}\n                            {selectionLinkQualification}\n                            {selectionButtonRoute}\n                            {selectionLinkRoute}\n                            {selectionButtonDate}\n                            {selectionLinkDate}\n                            {selectionLinkMethod}\n                        </ul>\n                    ) : (\n                        <React.Fragment>\n                            {selectionHeadingLocationOne}\n                            <ul className=\"how-to-apply--pgt--js__options how-to-apply--pgt--js__options--multiple-locations\">\n                                {selectionButtonLocationOneDate}\n                                {selectionLinkLocationOneDate}\n                            </ul>\n                            {selectionHeadingLocationTwo}\n                            <ul className=\"how-to-apply--pgt--js__options how-to-apply--pgt--js__options--multiple-locations\">\n                                {selectionButtonLocationTwoDate}\n                                {selectionLinkLocationTwoDate}\n                            </ul>\n                        </React.Fragment>\n                    )}\n                </div>\n            </>\n        ),\n        alternative = props.element.dataset.otheryear &&\n            props.element.dataset.otherurl && (\n                <p className=\"how-to-apply--pgt--js__modal__alternative\">\n                    <a href={props.element.dataset.otherurl}>\n                        {props.element.dataset.otheryear} entry is also\n                        available.\n                    </a>\n                </p>\n            );\n    // End modal wrapper render\n\n    // Focus trap\n    const [focusTrap, setFocusTrap] = useState({});\n\n    let modalContentRef = null;\n    const getModalContent = () => modalContentRef;\n\n    useEffect(() => {\n        if (!focusTrap.activate) {\n            setFocusTrap(\n                createFocusTrap(getModalContent(), {\n                    initialFocus: getModalContent().querySelector(\n                        '.how-to-apply--pgt--js__options button, .how-to-apply--pgt--js__options a'\n                    ),\n                    onDeactivate: () => setModalVisible(false),\n                    clickOutsideDeactivates: true,\n                })\n            );\n        }\n\n        if (modalVisible) {\n            focusTrap.activate && focusTrap.activate();\n            disableBodyScroll();\n        } else {\n            focusTrap.deactivate && focusTrap.deactivate();\n            enableBodyScroll();\n        }\n    }, [modalVisible]);\n    // End focus trap\n\n    // Render the 'Apply now' CTA which launches the modal\n    return (\n        <>\n            <ul className=\"cta-block\">\n                <li className=\"cta-block__cta\">\n                    <button\n                        className=\"primary-cta-arrow--bright\"\n                        onClick={() => {\n                            setModalVisible(true);\n                            setFirstStep(true); // Don't show 'Start again' option on initial modal load\n                            clearSelectionOptions(); // Clear any previously rendered selection buttons/links from the state\n                            filterQualificationData(entryPoints);\n                        }}\n                    >\n                        <span>Apply now</span>\n                    </button>\n                </li>\n            </ul>\n            <div\n                className=\"how-to-apply--pgt--js__modal\"\n                data-open={modalVisible}\n            >\n                <div\n                    className=\"how-to-apply--pgt--js__modal__content\"\n                    ref={(modalContent) => (modalContentRef = modalContent)}\n                >\n                    <button\n                        className=\"how-to-apply--pgt--js__close\"\n                        onClick={() => {\n                            focusTrap.deactivate && focusTrap.deactivate();\n                            enableBodyScroll();\n                            setModalVisible(false);\n                        }}\n                    >\n                        <span\n                            className=\"fa-sharp fa-solid fa-xmark icon\"\n                            aria-label=\"Close\"\n                        ></span>\n                    </button>\n\n                    {/* Display 'Start again' reset if user is not in the modal's first selection screen */}\n                    {!firstStep ? (\n                        <div\n                            className=\"how-to-apply--pgt--js__modal__reset\"\n                            // style={{ display: 'block' }}\n                        >\n                            <button\n                                onClick={() => {\n                                    // Clear options display and render what user would see when modal is first opened\n                                    setFirstStep(true);\n                                    filterQualificationData(entryPoints);\n                                }}\n                            >\n                                <span className=\"fas fa-redo\"></span>{' '}\n                                <span>Start again</span>\n                            </button>\n                        </div>\n                    ) : null}\n                    <ol className=\"how-to-apply--pgt--js__modal__progress\">\n                        {progressQualification}\n                        {progressRoute}\n                        {progressDate}\n                        {progressMethod}\n                        {furtherStepsPendingIndicator}\n                    </ol>\n                    <div className=\"how-to-apply--pgt--js__modal__content-wrapper\">\n                        <h2>Start in {props.element.dataset.year}</h2>\n                    </div>\n                    {qualificationQuestion}\n                    <div className=\"how-to-apply--pgt--js__modal__content-wrapper\">\n                        {alternative}\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nHowToApply.propTypes = {\n    config: PropTypes.array,\n    element: PropTypes.object,\n};\n\nexport default HowToApply;\n","/**\n * Functions to retrieve how to apply configuration.\n *\n * @module pgt-data\n * @author Web Development\n * @copyright City St George's, University of London 2020\n */\n\nimport { axiosRequest } from '../../util.js';\n\nconst timeout = 30000;\n\n/**\n * How to apply configuration.\n *\n * @param {string} url The HTA configuration file.\n * @return {Promise} - A promise of  configuration object.\n */\nexport function howToApplyConfig(url) {\n    const config = {\n        timeout: timeout,\n        url: url,\n    };\n\n    return axiosRequest(config);\n}\n","/**\n * Useful utility functions\n *\n * @module util\n * @author Web Development\n * @copyright City St George's, University of London 2018-2020\n */\n\nimport axios from 'axios';\nimport React from 'react';\n\n/**\n * Turns string boolean into real boolean.\n *\n * @param {string} s - A string that may be 'true'.\n * @returns {boolean} True if 'true'.\n */\nexport function toBool(s) {\n    return s === 'true' ? true : false;\n}\n\nconst partialMatchFn = (m) => (s) => s.indexOf(m) < 0,\n    fullMatchFn = (m) => (s) => s !== m;\n\n/**\n * Remove a class name from an HTML element.\n *\n * @param {HTMLElement} elem - An HTML element.\n * @param {string} className - A string representing the class to remove.\n * @param {boolean} [removePartials] - If true, remove partially matching classes.\n */\nexport function removeClass(elem, className, removePartials) {\n    const matchFn = removePartials\n        ? partialMatchFn(className)\n        : fullMatchFn(className);\n    elem.className = elem.className\n        .split(/\\s+/)\n        .filter((s) => matchFn(s))\n        .join(' ');\n}\n\n/**\n * Detect whether reduced motion is enabled.\n *\n * If it is, you should shortcut animations, disable autoplay elements, avoid\n * smooth scrolling in favour of jump scrolling, etc.\n *\n * Currently unsupported by Chrome, but works in Safari and Firefox.\n *\n * @returns {boolean} Boolean indicating that the reduce motion media query matches.\n */\nexport function reduceMotion() {\n    const reducedMotionQuery =\n        typeof window !== 'undefined'\n            ? window.matchMedia('(prefers-reduced-motion: reduce)')\n            : false;\n    return reducedMotionQuery.matches ? true : false;\n}\n\n/**\n * Predicate testing whether an element is currently visible, as opposed to\n * displayed: none; or similar. Doesn't necessarily mean it's visible in the\n * window.\n *\n * @param {HTMLElement} elem - An HTML element.\n * @returns {boolean} - Is it visible?\n */\nexport function isVisible(elem) {\n    return elem.offsetHeight !== 0 && elem.offsetWidth !== 0 ? true : false;\n}\n\n/**\n * Predicate testing whether an element is positioned in the window.\n *\n *\n * @param {HTMLElement} elem - An HTML element.\n * @returns {boolean} - Is it onscreen?\n */\nexport function verticallyInWindow(elem) {\n    return elem.getBoundingClientRect().top >= 0 &&\n        elem.getBoundingClientRect().top <= window.innerHeight\n        ? true\n        : false;\n}\n\n/**\n * Turn a query string into an object.\n *\n * @param {string} parameterString - An HTML query string.\n * @returns {object} An object containing the parameters.\n */\nexport function parametersToObject(parameterString) {\n    const parameters = {};\n    parameterString\n        .substr(1)\n        .split('&')\n        .forEach((parameter) => {\n            const [k, v] = parameter.split('=');\n            parameters[k] = v;\n        });\n    return parameters;\n}\n\n/**\n * Turn an object into a query string.\n *\n * @param {object} parameterObj - An object containing the parameters and their values.\n * @returns {string} A string of the parameters.\n */\nexport function objectToParameters(parameterObj) {\n    if (Object.keys(parameterObj).length > 0) {\n        let parameters = '?';\n        for (const key in parameterObj) {\n            parameters.length !== 1 && (parameters += '&');\n            parameters += key + '=' + parameterObj[key];\n        }\n        return parameters;\n    } else {\n        return '';\n    }\n}\n\n/**\n * Track a Google Analytics event.\n *\n * @param {string} event - The event key for Tag Manager.\n * @param {string} eventCategory - The event category.\n * @param {string} eventAction - The event action.\n * @param {string} [eventLabel] - The event label.\n * @param {number} [eventValue] - The event value.\n * @param {boolean} [nonInteractionHit] - Does this count as interacting with the page?\n */\nexport function gaEvent(\n    event,\n    eventCategory,\n    eventAction,\n    eventLabel,\n    eventValue,\n    nonInteractionHit\n) {\n    window.dataLayer = window.dataLayer || [];\n    window.dataLayer.push({\n        event: event,\n        eventCategory: eventCategory,\n        eventAction: eventAction,\n        eventLabel: eventLabel,\n        eventValue: eventValue,\n        nonInteractionHit: nonInteractionHit,\n    });\n}\n\n/**\n * Append an array of elements to an element.\n *\n * @param {HTMLElement} elem - The parent element.\n * @param {HTMLElement[]} children - An array of elements to append to it.\n */\nexport function appendAll(elem, children) {\n    children.forEach((child) => elem.appendChild(child));\n}\n\n/**\n * Extract number from string, e.g. return '123' from string 'a1b2c3'.\n *\n * @param {string} string - String\n */\nexport function numberFromString(string) {\n    let number = string.replace(/\\D/g, '');\n    return number;\n}\n\n/**\n * Calculates viewport width to determinte if using mobile\n * @param {number} number - width of screen, with default value = 432.\n *\n */\nexport function isMobile(screen = 432) {\n    const viewPortWidth = window.innerWidth;\n    const mobileScreen = screen;\n\n    if (viewPortWidth < mobileScreen) {\n        return true;\n    }\n}\n\n/**\n *\n * Turn DOM elements to array e.g return [li, li, li] from DOM element selecting 'li' <ul><li></li><li></li><li></li></ul>\n *\n * @param {object} object - Object\n */\n\nexport function toArray(obj) {\n    let array = [];\n    // iterate backwards ensuring that length is an UInt32\n    for (let i = obj.length >>> 0; i--; ) {\n        array[i] = obj[i];\n    }\n    return array;\n}\n\n/**\n * Check browser user agent is IE or edge and return version number\n */\nexport function detectIE() {\n    const ua = window.navigator.userAgent,\n        versionLength = 10,\n        msie = ua.indexOf('MSIE '),\n        msieVersionOffset = 5;\n\n    if (msie > 0) {\n        // IE 10 or older => return version number\n        return parseInt(\n            ua.substring(msie + msieVersionOffset, ua.indexOf('.', msie)),\n            versionLength\n        );\n    }\n\n    const trident = ua.indexOf('Trident/'),\n        tridentVersionOffset = 3;\n\n    if (trident > 0) {\n        // IE 11 => return version number\n        let rv = ua.indexOf('rv:');\n        return parseInt(\n            ua.substring(rv + tridentVersionOffset, ua.indexOf('.', rv)),\n            versionLength\n        );\n    }\n\n    const edge = ua.indexOf('Edge/'),\n        edgeVersionOffset = 5;\n\n    if (edge > 0) {\n        // Edge (IE 12+) => return version number\n        return parseInt(\n            ua.substring(edge + edgeVersionOffset, ua.indexOf('.', edge)),\n            versionLength\n        );\n    }\n\n    // other browser\n    return false;\n}\n\n/**\n * Check if browser supports IntersectionObserver API\n *\n * @returns {Boolean} -\n */\nexport function checkIntersectionObserver() {\n    if (\n        'IntersectionObserver' in window &&\n        'IntersectionObserverEntry' in window &&\n        'intersectionRatio' in window.IntersectionObserverEntry.prototype\n    ) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n/**\n * Create elements containing classes, content and any other attributes\n *\n * @param {string} type - Type of element to create, e.g. \"div\", \"button\".\n * @param {array} attributes - Array of objects specifying which attributes to assign to the element i.e. {label : \"class\", val : \"container\"}\n */\nexport function createHTMLElement(type, attributes) {\n    let el = document.createElement(type);\n    attributes.map(function (att) {\n        att.label === 'content'\n            ? el.appendChild(document.createTextNode(att.val))\n            : att.label === 'html'\n            ? (el.innerHTML = att.val)\n            : el.setAttribute(att.label, att.val);\n    });\n    return el;\n}\n\nexport function uppercaseFirstLetterLowercaseRest(s) {\n    return s.charAt(0).toUpperCase() + s.slice(1).toLowerCase();\n}\n\n/**\n * Asynchronous request to Funnelback web service.\n *\n * @param {object} config An axios configuration object.\n * @return {Promise} - A promise of a Funnelback response.\n */\nexport function axiosRequest(config) {\n    const httpOK = 200;\n\n    return axios(config)\n        .then((response) => {\n            if (httpOK === response.status) {\n                return response.data;\n            } else {\n                throw `Bad response: ${response.status}`;\n            }\n        })\n        .catch((e) => {\n            if (!axios.isCancel(e)) {\n                gaEvent(\n                    'jsError',\n                    'JavaScript error',\n                    `Line ${e.lineNumber} – ${e.message}`,\n                    `axiosRequest ${e.fileName} (${window.location})`,\n                    true\n                );\n            }\n        });\n}\n\n/**\n * Returns a react fragment formatted time\n * @param {Date} date - A date object.\n * @returns {ReactFragment} The formatted time to local time.\n */\nexport function formatTime(timeString, timeZone) {\n    const time = new Date(timeString);\n    let timeLabel;\n\n    if (timeZone) {\n        let timeOffset = time.getTimezoneOffset() / -60;\n        timeLabel = timeOffset === 0 ? '(GMT)' : '(BST)';\n    }\n\n    return (\n        <time\n            dateTime={`${time.getHours() ? time.getHours() : '00'}:${\n                time.getMinutes() ? time.getMinutes() : '00'\n            }`}\n        >\n            {time.getHours() ? time.getHours() : '00'}:\n            {time.getMinutes() ? time.getMinutes() : '00'} {timeLabel}\n        </time>\n    );\n}\n\n/**\n * Returns the correct English suffix for a number.\n *\n * @param  {number} day - The day of the month.\n * @returns {string} The correct suffix.\n */\nfunction daySuffix(day) {\n    const eleventh = 11,\n        thirteenth = 13,\n        lastDigit = day.toString().slice(-1);\n\n    return day >= eleventh && day <= thirteenth\n        ? 'th'\n        : lastDigit === '1'\n        ? 'st'\n        : lastDigit === '2'\n        ? 'nd'\n        : lastDigit === '3'\n        ? 'rd'\n        : 'th';\n}\n\n/**\n * Format a date for React.\n *\n * @param {Date} date - A date object.\n * @returns {ReactFragment} The formatted date.\n */\nexport function formatReactDate(date) {\n    const months = [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December',\n        ],\n        days = [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday',\n        ];\n\n    return (\n        <time dateTime={date.toISOString().split('T')[0]}>\n            {days[date.getUTCDay()]}, {date.getUTCDate()}\n            <sup>{daySuffix(date.getUTCDate())}</sup>{' '}\n            {months[date.getUTCMonth()]} {date.getUTCFullYear()}\n        </time>\n    );\n}\n\n/**\n * Array slicer\n *\n * @param {array} arr - array to be split up into subarrays\n * @param {number} len - max number items that goes into each subarray\n */\nexport function arraySlicer(arr, len) {\n    let newArray = [],\n        i = 0,\n        n = arr.length;\n\n    while (i < n) {\n        newArray.push(arr.slice(i, (i += len)));\n    }\n    return newArray;\n}\n\n/**\n * Screen width\n *\n * @param {size} string - variable name for sreensize value. To be consistent with values stored in _variables.scss\n */\nexport function screenWidth(size) {\n    switch (size) {\n        case 'tiny':\n            return 375;\n\n        case 'mobile':\n            return 432;\n\n        case 'tablet':\n            return 768;\n\n        case 'between':\n            return 900;\n\n        case 'small':\n            return 1024;\n\n        case 'desktop':\n            return 1280;\n\n        case 'large':\n            return 1440;\n\n        case '1080':\n            return 1920;\n\n        case '4k':\n            return 3840;\n\n        case '8k':\n            return 7680;\n\n        default:\n            return 1280;\n    }\n}\n\n/**\n * Flatten object to one level that contains array of objects and 2 level objects\n *\n * @param {object} - a object to flatten\n * @returns {object} - return a flatten object\n */\nexport function flattenObj(ob) {\n    // The object which contains the\n    // final result\n    let result = {};\n\n    // loop through the object \"ob\"\n    for (const i in ob) {\n        // We check the type of the i using\n        // typeof() function and recursively\n        // call the function again\n        if (typeof ob[i] === 'object' && !Array.isArray(ob[i])) {\n            const temp = flattenObj(ob[i]);\n            for (const j in temp) {\n                if (i === 'parameters') {\n                    result[`${i}-${j}`] = temp[j];\n                } else {\n                    result[j] = temp[j];\n                }\n                // Store temp in result\n            }\n        } else if (Array.isArray(ob[i])) {\n            ob[i].forEach((val) => {\n                if (i === 'fixedFacets') {\n                    result[`${i}-${val.meta}`] = val.value;\n                } else {\n                    result[`${i}-${val.name}`] = val.value;\n                }\n            });\n        }\n        // Else store ob[i] in result directly\n        else {\n            result[i] = ob[i];\n        }\n    }\n    return result;\n}\n\n/**\n * function that calculates the scrollbar width\n */\n\nexport function getVerticalScrollbarWidth() {\n    // Creating a div element for helping to calculate scrollbar width\n    const scrollDiv = document.createElement('div');\n    scrollDiv.style.cssText =\n        'width: 100px; height: 100px; overflow: scroll; position: absolute; top: -9999px;';\n\n    // Appending the div to the body to measure scrollbar width\n    document.body.appendChild(scrollDiv);\n    const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\n    // Remove the div from the body\n    document.body.removeChild(scrollDiv);\n\n    // adds scrollbar width as variable to root so can be used by CSS styles\n    let root = document.documentElement;\n    root.style.setProperty('--scrollbar-width', scrollbarWidth + 'px');\n\n    return scrollbarWidth;\n}\n\n/**\n * function that enables / disables body scroll when modal opens or closes. As the scrollbar disappears\n * to lock scrolling, a margin gets added in place of where the scrollbar use to be\n * to prevent content from jumping\n *\n */\n\nexport function enableBodyScroll() {\n    document.documentElement.classList.remove('no-scroll');\n    document.querySelector('.back-to-top').setAttribute('hidden', 'false');\n}\n\nexport function disableBodyScroll() {\n    getVerticalScrollbarWidth();\n    document.querySelector('.back-to-top').setAttribute('hidden', 'true');\n    document.documentElement.classList.add('no-scroll');\n}\n"],"sourceRoot":""}