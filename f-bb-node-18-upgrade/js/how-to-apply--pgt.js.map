{"version":3,"file":"how-to-apply--pgt.js","mappings":"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GA,CAAC,IAAI2L,GAAI,CAAC,CAAC;EAC3C;EACA,OAAOC,QAAQ;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASE,WAAWA,CAACC,IAAI,EAAE;EAC9B,QAAQA,IAAI;IACR,KAAK,MAAM;MACP,OAAO,GAAG;IAEd,KAAK,QAAQ;MACT,OAAO,GAAG;IAEd,KAAK,QAAQ;MACT,OAAO,GAAG;IAEd,KAAK,SAAS;MACV,OAAO,GAAG;IAEd,KAAK,OAAO;MACR,OAAO,IAAI;IAEf,KAAK,SAAS;MACV,OAAO,IAAI;IAEf,KAAK,OAAO;MACR,OAAO,IAAI;IAEf,KAAK,MAAM;MACP,OAAO,IAAI;IAEf,KAAK,IAAI;MACL,OAAO,IAAI;IAEf,KAAK,IAAI;MACL,OAAO,IAAI;IAEf;MACI,OAAO,IAAI;EACnB;AACJ;;;;;;UCncA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WC5BA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;;;;;WCJA;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEhDA;UACA;UACA;UACA;UACA","sources":["webpack://web2020/./src/how-to-apply--pgt.js","webpack://web2020/./src/patterns/how-to-apply/buttons/apply.js","webpack://web2020/./src/patterns/how-to-apply/how-to-apply--pgt.js","webpack://web2020/./src/patterns/how-to-apply/pgt-data.js","webpack://web2020/./src/util.js","webpack://web2020/webpack/bootstrap","webpack://web2020/webpack/runtime/chunk loaded","webpack://web2020/webpack/runtime/compat get default export","webpack://web2020/webpack/runtime/define property getters","webpack://web2020/webpack/runtime/global","webpack://web2020/webpack/runtime/hasOwnProperty shorthand","webpack://web2020/webpack/runtime/make namespace object","webpack://web2020/webpack/runtime/node module decorator","webpack://web2020/webpack/runtime/jsonp chunk loading","webpack://web2020/webpack/before-startup","webpack://web2020/webpack/startup","webpack://web2020/webpack/after-startup"],"sourcesContent":["/**\n * How to apply PGT entry\n *\n * @author Web Development\n * @copyright City, University of London 2020\n */\nimport React from 'react';\nimport { render } from 'react-dom';\nimport HowToApply from './patterns/how-to-apply/how-to-apply--pgt';\nimport { howToApplyConfig } from './patterns/how-to-apply/pgt-data';\nimport edn from 'edn-to-js';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    if (/(Trident|MSIE)/.test(navigator.userAgent)) {\n        return;\n    } else {\n        const howToApplyCTAs = document.querySelectorAll(\n            '.how-to-apply--pgt--js'\n        );\n        howToApplyCTAs &&\n            Array.from(howToApplyCTAs).forEach(howToApply => {\n                howToApplyConfig(howToApply.dataset.config).then(config => {\n                    render(\n                        <HowToApply\n                            config={edn(config)}\n                            element={howToApply}\n                        />,\n                        howToApply\n                    );\n                });\n            });\n    }\n});\n","import React from 'react';\n\nexport default function ApplyLinks(props) {\n    if (props.data) {\n        return props.data.map((d, index) => {\n            return (\n                <li key={index} className=\"apply\">\n                    <a href={d['link']}>\n                        {/* <span>{props.btnText ? props.btnText : d.header}</span> */}\n                        <span>{d.text}</span>\n                        &nbsp;\n                        <span\n                            className=\"far fa-sharp fa-external-link\"\n                            aria-label=\"(external link)\"\n                        />\n                    </a>\n                </li>\n            );\n        });\n    }\n}\n","/**\n * How to apply for postgraduate taught degrees\n *\n * Don't run this via patterns.js, it's a separate compilation.\n *\n * @module patterns/how-to-apply/how-to-apply--pgt\n * @author Web Development\n * @copyright City, University of London 2020\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\n\nimport ApplyLinks from './buttons/apply';\nimport PropTypes from 'prop-types';\nimport {createFocusTrap} from 'focus-trap';\n\n/**\n * Launch the How to apply modal.\n *\n * @param {object} props The JSON configuration file for the modal.\n * @return {object} The React component to render.\n */\nfunction HowToApply(props) {\n    let entryPoints = props.config;\n    const [modalVisible, setModalVisible] = useState(false),\n        [firstStep, setFirstStep] = useState(false), // Controls 'Start again' visibility\n        [progressQualification, setProgressQualification] = useState(),\n        [progressRoute, setProgressRoute] = useState(),\n        [progressDate, setProgressDate] = useState(),\n        [progressMethod, setProgressMethod] = useState(),\n        [furtherStepsPendingIndicator, setFurtherStepsPendingIndicator] =\n            useState(),\n        [windowPrompt, setWindowPrompt] = useState(\n            'Choose the qualification you wish to apply for:'\n        ),\n        promptQualification = 'Choose the qualification you wish to apply for:',\n        promptRoute = 'Choose the route you wish to apply for:',\n        promptEntryPoint = 'Choose the entry point you wish to apply for:',\n        furtherStepsPending = (\n            <li className=\"how-to-apply--pgt--js__modal__progress__next\">\n                <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                    <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                        <span\n                            className=\"fas fa-circle icon\"\n                            aria-hidden=\"true\"\n                        ></span>\n                    </span>\n                </span>\n            </li>\n        );\n\n    let [selectionButtonQualification, setSelectionButtonQualification] =\n            useState(),\n        [selectionLinkQualification, setSelectionLinkQualification] =\n            useState(),\n        [selectionButtonRoute, setSelectionButtonRoute] = useState(),\n        [selectionLinkRoute, setSelectionLinkRoute] = useState(),\n        [selectionButtonDate, setSelectionButtonDate] = useState(),\n        [selectionLinkDate, setSelectionLinkDate] = useState(),\n        [selectionHeadingLocationOne, setSelectionHeadingLocationOne] =\n            useState(),\n        [selectionButtonLocationOneDate, setSelectionButtonLocationOneDate] =\n            useState(false),\n        [selectionLinkLocationOneDate, setSelectionLinkLocationOneDate] =\n            useState(false),\n        [selectionHeadingLocationTwo, setSelectionHeadingLocationTwo] =\n            useState(),\n        [selectionButtonLocationTwoDate, setSelectionButtonLocationTwoDate] =\n            useState(false),\n        [selectionLinkLocationTwoDate, setSelectionLinkLocationTwoDate] =\n            useState(false),\n        [selectionLinkMethod, setSelectionLinkMethod] = useState(),\n        selectedQualificationData,\n        selectedQualificationValue,\n        selectedRouteData,\n        selectedRouteValue,\n        selectedDateData,\n        selectedDateValue;\n\n    /**\n     * Clear any previously rendered selection buttons/links from the state to prevent superfluous button/link rendering\n     */\n    function clearSelectionOptions() {\n        setSelectionButtonQualification();\n        setSelectionLinkQualification();\n        setSelectionButtonRoute();\n        setSelectionLinkRoute();\n        setSelectionHeadingLocationOne();\n        setSelectionButtonLocationOneDate();\n        setSelectionLinkLocationOneDate();\n        setSelectionHeadingLocationTwo();\n        setSelectionButtonLocationTwoDate();\n        setSelectionLinkLocationTwoDate();\n        setSelectionButtonDate();\n        setSelectionLinkDate();\n        setSelectionLinkMethod();\n    }\n\n    /**\n     * Convert raw date values to full month/year for rendering to buttons.\n     *\n     * @param {string} sourceDate The unformatted date string.\n     */\n    function formatDate(sourceDate) {\n        const months = [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December',\n        ];\n        let formattedDate = new Date(sourceDate);\n        return `${\n            months[formattedDate.getUTCMonth()]\n        } ${formattedDate.getUTCFullYear()}`;\n    }\n\n    /**\n     * Completed programme, route and dates filter. Analyse methods data.\n     *\n     * @param {object} data The filtered data record data, where methods are at the top level.\n     */\n    function filterMethodsData(methods, dateSpecificPrompt) {\n        // Methods of study pre-selection prompt text. If one date exist, this will display in the prompt text; if multiple dates these will render as buttons\n        dateSpecificPrompt ? setWindowPrompt(dateSpecificPrompt) : null;\n\n        // Clear any previously rendered selection buttons/links from the state to prevent superfluous button/link rendering\n        clearSelectionOptions();\n\n        // Variables scoped to this function\n        let qualNav, routeNav, dateNav, methodNav;\n\n        selectedQualificationData\n            ? (qualNav = (\n                  <li className=\"how-to-apply--pgt--js__modal__progress__previous\">\n                      <button\n                          className=\"how-to-apply--pgt--js__modal__progress__wrapper\"\n                          onClick={() => {\n                              // Load qualification select; clear route, date and method from progress navigation\n                              filterQualificationData(entryPoints);\n                              setProgressRoute();\n                              setProgressDate();\n                              setProgressMethod();\n                          }}\n                      >\n                          <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                              <span\n                                  className=\"fas fa-check icon\"\n                                  aria-label=\"Back to choose qualification\"\n                              ></span>\n                          </span>\n                          <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                              Qualification\n                          </span>\n                      </button>\n                  </li>\n              ))\n            : (qualNav = null);\n        setProgressQualification(qualNav);\n\n        selectedRouteData\n            ? (routeNav = (\n                  <li className=\"how-to-apply--pgt--js__modal__progress__previous\">\n                      <button\n                          className=\"how-to-apply--pgt--js__modal__progress__wrapper\"\n                          onClick={() => {\n                              // Load route select; clear date and method from progress navigation\n                              setProgressDate();\n                              setProgressMethod();\n                              if (selectedQualificationData) {\n                                  filterRouteData(\n                                      selectedQualificationData[0]['options']\n                                  );\n                              } else {\n                                  filterQualificationData(entryPoints);\n                              }\n                          }}\n                      >\n                          <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                              <span\n                                  className=\"fas fa-check icon\"\n                                  aria-label=\"Back to choose route\"\n                              ></span>\n                          </span>\n                          <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                              Route\n                          </span>\n                      </button>\n                  </li>\n              ))\n            : (routeNav = null);\n        setProgressRoute(routeNav);\n\n        selectedDateData\n            ? (dateNav = (\n                  <li className=\"how-to-apply--pgt--js__modal__progress__previous\">\n                      <button\n                          className=\"how-to-apply--pgt--js__modal__progress__wrapper\"\n                          onClick={() => {\n                              // Load date select; clear method from progress navigation\n                              setProgressMethod();\n                              if (selectedRouteData) {\n                                  filterDatesData(\n                                      selectedRouteData[0]['options']\n                                  );\n                              } else if (selectedQualificationData) {\n                                  filterRouteData(\n                                      selectedQualificationData[0]['options']\n                                  );\n                              } else {\n                                  filterQualificationData(entryPoints);\n                              }\n                          }}\n                      >\n                          <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                              <span\n                                  className=\"fas fa-check icon\"\n                                  aria-label=\"Back to choose route\"\n                              ></span>\n                          </span>\n                          <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                              Entry point\n                          </span>\n                      </button>\n                  </li>\n              ))\n            : (dateNav = null);\n        setProgressDate(dateNav);\n\n        // Method loads apply links and, if present, will always be the last step, therefore progress icon does nothing on click\n        methodNav = (\n            <li className=\"how-to-apply--pgt--js__modal__progress__current\">\n                <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                    <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                        <span className=\"fas fa-circle icon\"></span>\n                    </span>\n                    <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                        Method of study\n                    </span>\n                </span>\n            </li>\n        );\n        setProgressMethod(methodNav);\n\n        // Final modal step; remove further steps pending indicator\n        setFurtherStepsPendingIndicator();\n\n        let methodLinks = [];\n        let linkOptions;\n\n        methods.map((m) => {\n            const methodLink = {\n                text: m.header,\n                link: m.options.apply,\n            };\n            methodLinks.push(methodLink);\n            linkOptions = <ApplyLinks data={methodLinks} />;\n            setSelectionLinkMethod(linkOptions);\n        });\n    }\n\n    function filterLocation(data, location, heading) {\n        let uniqueLocationDataArray = [];\n        data.map((d) => {\n            let uniqueLocationData = {\n                ...d,\n                options: d.options.filter((e) => e.header === location),\n            };\n            uniqueLocationDataArray.push(uniqueLocationData);\n        });\n\n        // Gather location information for header\n        let locations = [];\n        uniqueLocationDataArray.map((fd) => {\n            fd['options'][0]\n                ? locations.push(fd['options'][0]['header'])\n                : null;\n        });\n\n        // Remove duplicate locations\n        locations = locations.filter((v, i, a) => a.indexOf(v) === i);\n\n        // Create heading\n        let headingVal = locations.map((l) => <h3 key={l}>{l}</h3>);\n\n        // Create buttons\n        let buttonVal = uniqueLocationDataArray.map((fd) => {\n            if (fd['options'].length > 0) {\n                if (fd['options'][0]['options'].length > 1) {\n                    return (\n                        <li key={fd}>\n                            <button>\n                                <span\n                                    data-date-src={fd['header']}\n                                    onClick={(e) => {\n                                        let dateSrc =\n                                            e.target.getAttribute(\n                                                'data-date-src'\n                                            );\n                                        selectedDateValue = formatDate(dateSrc);\n                                        selectedDateData = data.filter(\n                                            (fd) => fd.header === dateSrc\n                                        );\n                                        filterMethodsData(\n                                            selectedDateData[0]['options'][0][\n                                                'options'\n                                            ],\n                                            'Apply online now:'\n                                        );\n                                        setFirstStep(false);\n                                    }}\n                                >\n                                    {formatDate(fd['header'])}\n                                </span>\n                            </button>\n                        </li>\n                    );\n                } else {\n                    const dateLink = {\n                        text: formatDate(fd.header),\n                        link: fd['options'][0]['options'][0]['options'][\n                            'apply'\n                        ],\n                    };\n                    let locationDateLinks = [];\n                    locationDateLinks.push(dateLink);\n                    locationDateLinks = Array.from(\n                        new Set(locationDateLinks.map((a) => a.text))\n                    ).map((text) => {\n                        return locationDateLinks.find((a) => a.text === text);\n                    });\n                    return <ApplyLinks data={locationDateLinks} />;\n                }\n            }\n        });\n\n        uniqueLocationDataArray.map(() => {\n            if (heading === '#location-1') {\n                setSelectionHeadingLocationOne(headingVal);\n                setSelectionButtonLocationOneDate(buttonVal);\n            } else if (heading === '#location-2') {\n                setSelectionHeadingLocationTwo(headingVal);\n                setSelectionButtonLocationTwoDate(buttonVal);\n            }\n        });\n    }\n\n    /**\n     * Completed programme and route filter. Analyse dates data.\n     *\n     * @param {object} data The filtered data record data, where dates are at the top level.\n     */\n    function filterDatesData(data) {\n        // Date pre-selection prompt text\n        setWindowPrompt(promptEntryPoint);\n\n        // data.length === 1 ? setPromptMethod('single') : setPromptMethod('multiple');\n        // setDatesData(data[0]['header']);\n\n        // Clear any previously rendered selection buttons/links from the state to prevent superfluous button/link rendering\n        clearSelectionOptions();\n\n        // Empty relevant state variables to remove superfluous progress navigation rendering\n        setProgressMethod();\n\n        // Clear data stored from previous selections\n        selectedDateData = null;\n\n        // Variables scoped to this function\n        let buttonOptions,\n            linkOptions,\n            dateButtons = [],\n            dateLinks = [],\n            locationOptions = [],\n            locationsAll = [],\n            qualNav,\n            routeNav,\n            dateNav,\n            dateLink;\n\n        // Progress indicator; display selected qualification and route values\n        selectedQualificationData\n            ? (qualNav = (\n                  <li className=\"how-to-apply--pgt--js__modal__progress__previous\">\n                      <button\n                          className=\"how-to-apply--pgt--js__modal__progress__wrapper\"\n                          onClick={() => {\n                              filterQualificationData(entryPoints);\n                          }}\n                      >\n                          <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                              <span\n                                  className=\"fas fa-check icon\"\n                                  aria-label=\"Back to choose qualification\"\n                              ></span>\n                          </span>\n                          <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                              Qualification\n                          </span>\n                      </button>\n                  </li>\n              ))\n            : (qualNav = null);\n        setProgressQualification(qualNav);\n\n        selectedRouteData\n            ? (routeNav = (\n                  <li className=\"how-to-apply--pgt--js__modal__progress__previous\">\n                      <button\n                          className=\"how-to-apply--pgt--js__modal__progress__wrapper\"\n                          onClick={() => {\n                              filterQualificationData(entryPoints);\n                          }}\n                      >\n                          <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                              <span\n                                  className=\"fas fa-check icon\"\n                                  aria-label=\"Back to choose route\"\n                              ></span>\n                          </span>\n                          <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                              Route\n                          </span>\n                      </button>\n                  </li>\n              ))\n            : (routeNav = null);\n        setProgressRoute(routeNav);\n\n        // Method loads apply links and, if present, will always be the last step, therefore progress icon does nothing on click\n        if (selectedDateData) {\n            dateNav = (\n                <li className=\"how-to-apply--pgt--js__modal__progress__current\">\n                    <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                        <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                            <span className=\"fas fa-circle icon\"></span>\n                        </span>\n                        <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                            Entry point\n                        </span>\n                    </span>\n                </li>\n            );\n        } else {\n            dateNav = null;\n        }\n\n        setProgressDate(dateNav);\n\n        data.map((d) => {\n            let locations = d['options'];\n            locations.map((l) => {\n                let methods = l['options'];\n                methods.map(() => {\n                    // Multiple dates; print buttons\n                    if (data.length > 1 || data[0]['options'].length > 1) {\n                        // Date selection required: set progress indicator to route and remove methods\n                        selectedDateValue = (\n                            <li className=\"how-to-apply--pgt--js__modal__progress__current\">\n                                <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                                    <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                                        <span className=\"fas fa-circle icon\"></span>\n                                    </span>\n                                    <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                                        Entry point\n                                    </span>\n                                </span>\n                            </li>\n                        );\n                        setProgressDate(selectedDateValue);\n                        setProgressMethod();\n\n                        // Calculate number of locations\n                        locations.map((lo) => {\n                            locationOptions.push(lo.header);\n                        });\n                        locationOptions = locationOptions.reduce(function (\n                            a,\n                            i\n                        ) {\n                            a.indexOf(i) === -1 ? a.push(i) : null;\n                            return a;\n                        },\n                        []);\n\n                        // Multiple locations, multiple dates => create array of objects per location\n                        if (locationOptions.length > 1) {\n                            locationOptions.map((lo) => {\n                                let filteredData = data.filter(\n                                    (fd) => fd['options'][0]['header'] === lo\n                                );\n                                locationsAll.push(filteredData);\n                            });\n\n                            let uniqueLocations = [];\n                            data.map((d) => {\n                                let dates = d['options'];\n                                dates.map((date) => {\n                                    uniqueLocations.push(date.header);\n                                });\n                            });\n\n                            // Remove duplicate locations\n                            uniqueLocations = uniqueLocations.filter(\n                                (v, i, a) => a.indexOf(v) === i\n                            );\n\n                            for (let i = 1; i <= uniqueLocations.length; i++) {\n                                filterLocation(\n                                    data,\n                                    uniqueLocations[i - 1],\n                                    `#location-${i}`,\n                                    `#location-${i}__buttons`\n                                );\n                            }\n                            // End multiple locations\n                        } else {\n                            // Single location, multiple dates\n                            if (locations.length > 1 || methods.length > 1) {\n                                // Single location, multiple dates, multiple methods => Dates as standard button; further options to follow\n                                dateButtons.push(d.header);\n                                dateButtons = dateButtons.reduce(function (\n                                    a,\n                                    i\n                                ) {\n                                    a.indexOf(i) === -1 ? a.push(i) : null;\n                                    return a;\n                                },\n                                []);\n                                buttonOptions = dateButtons.map((db) => {\n                                    return (\n                                        <li key={db}>\n                                            <button>\n                                                <span\n                                                    data-date-src={db}\n                                                    onClick={(e) => {\n                                                        let dateSrc =\n                                                            e.target.getAttribute(\n                                                                'data-date-src'\n                                                            );\n                                                        selectedDateValue =\n                                                            formatDate(dateSrc);\n                                                        selectedDateData =\n                                                            data.filter(\n                                                                (fd) =>\n                                                                    fd.header ===\n                                                                    dateSrc\n                                                            );\n                                                        filterMethodsData(\n                                                            selectedDateData[0][\n                                                                'options'\n                                                            ][0]['options'],\n                                                            'Apply now for ' +\n                                                                formatDate(\n                                                                    selectedDateData[0][\n                                                                        'header'\n                                                                    ]\n                                                                ) +\n                                                                ' entry:'\n                                                        );\n                                                        setFirstStep(false);\n                                                    }}\n                                                >\n                                                    {formatDate(db)}\n                                                </span>\n                                            </button>\n                                        </li>\n                                    );\n                                });\n\n                                // Modal journey incomplete; display further steps pending indicator\n                                setFurtherStepsPendingIndicator(\n                                    furtherStepsPending\n                                );\n                            } else {\n                                // Single location, multiple dates, single method => Dates as links\n                                dateLinks.push(d.header);\n                                dateLinks = dateLinks.reduce(function (a, i) {\n                                    a.indexOf(i) === -1 ? a.push(i) : null;\n                                    return a;\n                                }, []);\n\n                                // Map each unique date and filter data to extract correct apply links\n                                const dateLinksData = [];\n                                dateLinks.map((lq) => {\n                                    let filteredDateData = data.filter(\n                                        (q) => q.header === lq\n                                    );\n                                    dateLink = {\n                                        text: formatDate(lq),\n                                        link: filteredDateData[0]['options'][0][\n                                            'options'\n                                        ][0]['options']['apply'],\n                                    };\n                                    dateLinksData.push(dateLink);\n                                });\n                                linkOptions = (\n                                    <ApplyLinks data={dateLinksData} />\n                                );\n                                // Final modal step; remove further steps indicator\n                                setFurtherStepsPendingIndicator();\n                            }\n                        }\n                    } else {\n                        // Single date; pass date value to methods function\n                        filterMethodsData(\n                            data[0]['options'][0]['options'],\n                            'Apply for ' +\n                                formatDate(data[0]['header']) +\n                                ' entry:'\n                        );\n                    }\n                });\n            });\n        });\n\n        linkOptions ? setSelectionLinkDate(linkOptions) : null;\n        buttonOptions ? setSelectionButtonDate(buttonOptions) : null;\n    }\n\n    /**\n     * Completed programme filter. Analyse routes data.\n     *\n     * @param {object} data The filtered data record data, where routes are at the top level.\n     */\n    function filterRouteData(data) {\n        // Clear any previously rendered selection buttons/links from the state to prevent superfluous button/link rendering\n        clearSelectionOptions();\n\n        // Empty relevant state variables to remove superfluous progress navigation rendering\n        setProgressDate();\n        setProgressMethod();\n\n        // Clear data stored from previous selections\n        selectedRouteData = null;\n        selectedDateData = null;\n\n        // Variables scoped to this function\n        let buttonQuals = [],\n            linkRoutes = [],\n            routeLink,\n            buttonOptions,\n            linkOptions,\n            locationOptions = [],\n            qualNav;\n\n        // Progress indicator; display selected qualification value\n        selectedQualificationData\n            ? (qualNav = (\n                  <li className=\"how-to-apply--pgt--js__modal__progress__previous\">\n                      <button\n                          className=\"how-to-apply--pgt--js__modal__progress__wrapper\"\n                          onClick={() => {\n                              filterQualificationData(entryPoints);\n                          }}\n                      >\n                          <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                              <span\n                                  className=\"fas fa-check icon\"\n                                  aria-label=\"Back to choose qualification\"\n                              ></span>\n                          </span>\n                          <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                              Qualification\n                          </span>\n                      </button>\n                  </li>\n              ))\n            : (qualNav = null);\n        setProgressQualification(qualNav);\n\n        data.map((s) => {\n            // Routes pre-selection prompt text\n            setWindowPrompt(promptRoute);\n            let dates = s['options'];\n            dates.map((d) => {\n                let locations = d['options'];\n                locations.map((l) => {\n                    let methods = l['options'];\n                    methods.map(() => {\n                        // Store each unique location value in an array\n                        locations.map((lo) => {\n                            locationOptions.push(lo.header);\n                        });\n                        locationOptions = locationOptions.reduce(function (\n                            a,\n                            i\n                        ) {\n                            a.indexOf(i) === -1 ? a.push(i) : null;\n                            return a;\n                        },\n                        []);\n                        if (data.length > 1) {\n                            // Route selection required: set progress indicator to route and remove dates/methods\n                            selectedRouteValue = (\n                                <li className=\"how-to-apply--pgt--js__modal__progress__current\">\n                                    <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                                        <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                                            <span className=\"fas fa-circle icon\"></span>\n                                        </span>\n                                        <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                                            Route\n                                        </span>\n                                    </span>\n                                </li>\n                            );\n                            setProgressRoute(selectedRouteValue);\n                            setProgressDate();\n                            setProgressMethod();\n\n                            if (\n                                dates.length > 1 ||\n                                locationOptions.length > 1 ||\n                                methods.length > 1\n                            ) {\n                                // Standard route button\n                                buttonQuals.push(s.header);\n                                buttonQuals = buttonQuals.reduce(function (\n                                    a,\n                                    i\n                                ) {\n                                    a.indexOf(i) === -1 ? a.push(i) : null;\n                                    return a;\n                                },\n                                []);\n                                buttonOptions = buttonQuals.map((bq) => {\n                                    return (\n                                        <li key={bq}>\n                                            <button>\n                                                <span\n                                                    onClick={(e) => {\n                                                        selectedRouteValue =\n                                                            e.target\n                                                                .textContent;\n                                                        selectedRouteData =\n                                                            data.filter(\n                                                                (sr) =>\n                                                                    sr.header ===\n                                                                    selectedRouteValue\n                                                            );\n                                                        filterDatesData(\n                                                            selectedRouteData[0][\n                                                                'options'\n                                                            ]\n                                                        );\n                                                        setFirstStep(false);\n                                                    }}\n                                                >\n                                                    {bq}\n                                                </span>\n                                            </button>\n                                        </li>\n                                    );\n                                });\n                                // Modal journey incomplete; display further steps pending indicator\n                                setFurtherStepsPendingIndicator(\n                                    furtherStepsPending\n                                );\n                            } else {\n                                // Route as link\n                                linkRoutes.push(s.header);\n                                linkRoutes = linkRoutes.reduce(function (a, i) {\n                                    a.indexOf(i) === -1 ? a.push(i) : null;\n                                    return a;\n                                }, []);\n\n                                // Map each unique route and filter data to extract correct apply links\n                                const routeLinksData = [];\n                                linkRoutes.map((lr) => {\n                                    let filteredRouteData = data.filter(\n                                        (q) => q.header === lr\n                                    );\n                                    routeLink = {\n                                        text: lr,\n                                        link: filteredRouteData[0][\n                                            'options'\n                                        ][0]['options'][0]['options'][0][\n                                            'options'\n                                        ]['apply'],\n                                    };\n                                    routeLinksData.push(routeLink);\n                                });\n                                linkOptions = (\n                                    <ApplyLinks data={routeLinksData} />\n                                );\n                                // Final modal step; remove further steps indicator\n                                setFurtherStepsPendingIndicator();\n                            }\n                        } else {\n                            // Move to dates function\n                            filterDatesData(data[0]['options']);\n                        }\n                    });\n                });\n            });\n        });\n\n        // If route options and/or links exist, update state to render relevant JSX\n        buttonOptions ? setSelectionButtonRoute(buttonOptions) : null;\n        linkOptions ? setSelectionLinkRoute(linkOptions) : null;\n    }\n\n    /**\n     * Analyse programme data record data.\n     *\n     * @param {object} data The original data record data, where programmes are at the top level.\n     */\n    function filterQualificationData(data) {\n        // If qualification select exists, it will be the first step in the modal; disable 'Start again' option\n        setFirstStep(true);\n\n        // Qualification pre-selection prompt text\n        setWindowPrompt(promptQualification);\n\n        // Clear any previously rendered selection buttons/links from the state to prevent superfluous button/link rendering\n        clearSelectionOptions();\n\n        // Empty relevant state variables to remove superfluous progress navigation rendering\n        setProgressRoute();\n        setProgressDate();\n        setProgressMethod();\n\n        // Clear data stored from previous selections\n        selectedQualificationData = null;\n        selectedRouteData = null;\n        selectedDateData = null;\n\n        // Variables scoped to this function\n        let buttonQuals = [],\n            linkQuals = [],\n            buttonOptions,\n            linkOptions,\n            locationOptions = [];\n\n        if (data.length > 1) {\n            // Qualification selection required: set progress indicator to qualification and remove routes/dates/methods\n            selectedQualificationValue = (\n                <li className=\"how-to-apply--pgt--js__modal__progress__current\">\n                    <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                        <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                            <span className=\"fas fa-circle icon\"></span>\n                        </span>\n                        <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                            Qualification\n                        </span>\n                    </span>\n                </li>\n            );\n            setProgressQualification(selectedQualificationValue);\n        }\n\n        data.length > 1\n            ? data.map((e) => {\n                  let routeNames = e['options'];\n                  routeNames.map((s) => {\n                      let dates = s['options'];\n                      dates.map((d) => {\n                          let locations = d['options'];\n                          locations.map((l) => {\n                              let methods = l['options'];\n                              methods.map(() => {\n                                  // Store each unique location value in an array\n                                  locations.map((lo) => {\n                                      locationOptions.push(lo.header);\n                                  });\n                                  locationOptions = locationOptions.reduce(\n                                      function (a, i) {\n                                          a.indexOf(i) === -1\n                                              ? a.push(i)\n                                              : null;\n                                          return a;\n                                      },\n                                      []\n                                  );\n                                  if (data.length > 1) {\n                                      if (\n                                          routeNames.length > 1 ||\n                                          dates.length > 1 ||\n                                          locationOptions.length > 1 ||\n                                          methods.length > 1\n                                      ) {\n                                          buttonQuals.push(e.header);\n                                          buttonQuals = buttonQuals.reduce(\n                                              function (a, i) {\n                                                  a.indexOf(i) === -1\n                                                      ? a.push(i)\n                                                      : null;\n                                                  return a;\n                                              },\n                                              []\n                                          );\n                                          buttonOptions = buttonQuals.map(\n                                              (bq) => {\n                                                  return (\n                                                      <li key={bq}>\n                                                          <button>\n                                                              <span\n                                                                  onClick={(\n                                                                      e\n                                                                  ) => {\n                                                                      selectedQualificationValue =\n                                                                          e\n                                                                              .target\n                                                                              .innerText;\n                                                                      selectedQualificationData =\n                                                                          data.filter(\n                                                                              (\n                                                                                  qual\n                                                                              ) =>\n                                                                                  qual.header ===\n                                                                                  selectedQualificationValue\n                                                                          );\n                                                                      filterRouteData(\n                                                                          selectedQualificationData[0][\n                                                                              'options'\n                                                                          ]\n                                                                      );\n                                                                      setFirstStep(\n                                                                          false\n                                                                      );\n                                                                  }}\n                                                              >\n                                                                  {bq}\n                                                              </span>\n                                                          </button>\n                                                      </li>\n                                                  );\n                                              }\n                                          );\n                                          // Modal journey incomplete; display further steps pending indicator\n                                          setFurtherStepsPendingIndicator(\n                                              furtherStepsPending\n                                          );\n                                      } else {\n                                          linkQuals.push(e.header);\n                                          linkQuals = linkQuals.reduce(\n                                              function (a, i) {\n                                                  a.indexOf(i) === -1\n                                                      ? a.push(i)\n                                                      : null;\n                                                  return a;\n                                              },\n                                              []\n                                          );\n\n                                          // Map each unique qualification and filter data to extract correct apply links\n                                          const methodLinks = [];\n                                          linkQuals.map((lq) => {\n                                              let filteredQualData =\n                                                  data.filter(\n                                                      (q) => q.header === lq\n                                                  );\n                                              const methodLink = {\n                                                  text: lq,\n                                                  link: filteredQualData[0][\n                                                      'options'\n                                                  ][0]['options'][0][\n                                                      'options'\n                                                  ][0]['options'][0]['options'][\n                                                      'apply'\n                                                  ],\n                                              };\n                                              methodLinks.push(methodLink);\n                                          });\n                                          linkOptions = (\n                                              <ApplyLinks data={methodLinks} />\n                                          );\n                                          // Move to end of function and use qualification variable? Similar approach to ternary operator used at end of dates function\n                                      }\n                                  }\n                              });\n                          });\n                      });\n                  });\n              })\n            : // One qualification; move to routes function\n              filterRouteData(entryPoints[0]['options']);\n\n        buttonOptions ? setSelectionButtonQualification(buttonOptions) : null;\n        linkOptions ? setSelectionLinkQualification(linkOptions) : null;\n    }\n\n    // Modal wrapper render\n    const question = 'qualification',\n        qualificationQuestion = question === 'qualification' && (\n            <>\n                <div className=\"how-to-apply--pgt--js__modal__content-wrapper\">\n                    <p>{windowPrompt}</p>\n                    {/* Different JSX needed when multiple locations present */}\n                    {!(\n                        selectionHeadingLocationOne ||\n                        selectionButtonLocationOneDate ||\n                        selectionLinkLocationOneDate ||\n                        selectionHeadingLocationTwo ||\n                        selectionButtonLocationTwoDate ||\n                        selectionLinkLocationTwoDate\n                    ) ? (\n                        <ul className=\"how-to-apply--pgt--js__options\">\n                            {selectionButtonQualification}\n                            {selectionLinkQualification}\n                            {selectionButtonRoute}\n                            {selectionLinkRoute}\n                            {selectionButtonDate}\n                            {selectionLinkDate}\n                            {selectionLinkMethod}\n                        </ul>\n                    ) : (\n                        <React.Fragment>\n                            {selectionHeadingLocationOne}\n                            <ul className=\"how-to-apply--pgt--js__options how-to-apply--pgt--js__options--multiple-locations\">\n                                {selectionButtonLocationOneDate}\n                                {selectionLinkLocationOneDate}\n                            </ul>\n                            {selectionHeadingLocationTwo}\n                            <ul className=\"how-to-apply--pgt--js__options how-to-apply--pgt--js__options--multiple-locations\">\n                                {selectionButtonLocationTwoDate}\n                                {selectionLinkLocationTwoDate}\n                            </ul>\n                        </React.Fragment>\n                    )}\n                </div>\n            </>\n        ),\n        alternative = props.element.dataset.otheryear &&\n            props.element.dataset.otherurl && (\n                <p className=\"how-to-apply--pgt--js__modal__alternative\">\n                    <a href={props.element.dataset.otherurl}>\n                        {props.element.dataset.otheryear} entry is also\n                        available.\n                    </a>\n                </p>\n            );\n    // End modal wrapper render\n\n    // Focus trap\n    const [focusTrap, setFocusTrap] = useState({});\n\n    let modalRef = null,\n        modalContentRef = null;\n    const getModal = () => modalRef,\n        getModalContent = () => modalContentRef;\n\n    useEffect(() => {\n        if (!focusTrap.activate) {\n            setFocusTrap(\n                createFocusTrap(getModalContent(), {\n                    initialFocus: getModalContent().querySelector(\n                        '.how-to-apply--pgt--js__options button, .how-to-apply--pgt--js__options a'\n                    ),\n                    onDeactivate: () => setModalVisible(false),\n                    clickOutsideDeactivates: true,\n                })\n            );\n        }\n\n        if (modalVisible) {\n            focusTrap.activate && focusTrap.activate();\n            disableBodyScroll(getModal());\n        } else {\n            focusTrap.deactivate && focusTrap.deactivate();\n            enableBodyScroll(getModal());\n        }\n    }, [modalVisible]);\n    // End focus trap\n\n    // Render the 'Apply now' CTA which launches the modal\n    return (\n        <>\n            <ul className=\"cta-block\">\n                <li className=\"cta-block__cta\">\n                    <button\n                        className=\"primary-cta-arrow--bright\"\n                        onClick={() => {\n                            setModalVisible(true);\n                            setFirstStep(true); // Don't show 'Start again' option on initial modal load\n                            clearSelectionOptions(); // Clear any previously rendered selection buttons/links from the state\n                            filterQualificationData(entryPoints);\n                        }}\n                    >\n                        <span>Apply now</span>\n                    </button>\n                </li>\n            </ul>\n            <div\n                className=\"how-to-apply--pgt--js__modal\"\n                data-open={modalVisible}\n                ref={(modal) => (modalRef = modal)}\n            >\n                <div\n                    className=\"how-to-apply--pgt--js__modal__content\"\n                    ref={(modalContent) => (modalContentRef = modalContent)}\n                >\n                    <button\n                        className=\"how-to-apply--pgt--js__close\"\n                        onClick={() => {\n                            focusTrap.deactivate && focusTrap.deactivate();\n                            enableBodyScroll(getModal());\n                            setModalVisible(false);\n                        }}\n                    >\n                        <span\n                            className=\"fa-sharp fa-solid fa-xmark icon\"\n                            aria-label=\"Close\"\n                        ></span>\n                    </button>\n\n                    {/* Display 'Start again' reset if user is not in the modal's first selection screen */}\n                    {!firstStep ? (\n                        <div\n                            className=\"how-to-apply--pgt--js__modal__reset\"\n                            // style={{ display: 'block' }}\n                        >\n                            <button\n                                onClick={() => {\n                                    // Clear options display and render what user would see when modal is first opened\n                                    setFirstStep(true);\n                                    filterQualificationData(entryPoints);\n                                }}\n                            >\n                                <span className=\"fas fa-redo\"></span>{' '}\n                                <span>Start again</span>\n                            </button>\n                        </div>\n                    ) : null}\n                    <ol className=\"how-to-apply--pgt--js__modal__progress\">\n                        {progressQualification}\n                        {progressRoute}\n                        {progressDate}\n                        {progressMethod}\n                        {furtherStepsPendingIndicator}\n                    </ol>\n                    <div className=\"how-to-apply--pgt--js__modal__content-wrapper\">\n                        <h2>Start in {props.element.dataset.year}</h2>\n                    </div>\n                    {qualificationQuestion}\n                    <div className=\"how-to-apply--pgt--js__modal__content-wrapper\">\n                        {alternative}\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nHowToApply.propTypes = {\n    config: PropTypes.array,\n    element: PropTypes.object,\n};\n\nexport default HowToApply;\n","/**\n * Functions to retrieve how to apply configuration.\n *\n * @module pgt-data\n * @author Web Development\n * @copyright City, University of London 2020\n */\n\nimport { axiosRequest } from '../../util.js';\n\nconst timeout = 30000;\n\n/**\n * How to apply configuration.\n *\n * @param {string} url The HTA configuration file.\n * @return {Promise} - A promise of  configuration object.\n */\nexport function howToApplyConfig(url) {\n    const config = {\n        timeout: timeout,\n        url: url,\n    };\n\n    return axiosRequest(config);\n}\n","/**\n * Useful utility functions\n *\n * @module util\n * @author Web Development\n * @copyright City, University of London 2018-2020\n */\n\nimport axios from 'axios';\nimport React from 'react';\n\n/**\n * Turns string boolean into real boolean.\n *\n * @param {string} s - A string that may be 'true'.\n * @returns {boolean} True if 'true'.\n */\nexport function toBool(s) {\n    return s === 'true' ? true : false;\n}\n\nconst partialMatchFn = (m) => (s) => s.indexOf(m) < 0,\n    fullMatchFn = (m) => (s) => s !== m;\n\n/**\n * Remove a class name from an HTML element.\n *\n * @param {HTMLElement} elem - An HTML element.\n * @param {string} className - A string representing the class to remove.\n * @param {boolean} [removePartials] - If true, remove partially matching classes.\n */\nexport function removeClass(elem, className, removePartials) {\n    const matchFn = removePartials\n        ? partialMatchFn(className)\n        : fullMatchFn(className);\n    elem.className = elem.className\n        .split(/\\s+/)\n        .filter((s) => matchFn(s))\n        .join(' ');\n}\n\n/**\n * Detect whether reduced motion is enabled.\n *\n * If it is, you should shortcut animations, disable autoplay elements, avoid\n * smooth scrolling in favour of jump scrolling, etc.\n *\n * Currently unsupported by Chrome, but works in Safari and Firefox.\n *\n * @returns {boolean} Boolean indicating that the reduce motion media query matches.\n */\nexport function reduceMotion() {\n    const reducedMotionQuery = window.matchMedia(\n        '(prefers-reduced-motion: reduce)'\n    );\n    return reducedMotionQuery.matches ? true : false;\n}\n\n/**\n * Predicate testing whether an element is currently visible, as opposed to\n * displayed: none; or similar. Doesn't necessarily mean it's visible in the\n * window.\n *\n * @param {HTMLElement} elem - An HTML element.\n * @returns {boolean} - Is it visible?\n */\nexport function isVisible(elem) {\n    return elem.offsetHeight !== 0 && elem.offsetWidth !== 0 ? true : false;\n}\n\n/**\n * Predicate testing whether an element is positioned in the window.\n *\n *\n * @param {HTMLElement} elem - An HTML element.\n * @returns {boolean} - Is it onscreen?\n */\nexport function verticallyInWindow(elem) {\n    return elem.getBoundingClientRect().top >= 0 &&\n        elem.getBoundingClientRect().top <= window.innerHeight\n        ? true\n        : false;\n}\n\n/**\n * Turn a query string into an object.\n *\n * @param {string} parameterString - An HTML query string.\n * @returns {object} An object containing the parameters.\n */\nexport function parametersToObject(parameterString) {\n    const parameters = {};\n    parameterString\n        .substr(1)\n        .split('&')\n        .forEach((parameter) => {\n            const [k, v] = parameter.split('=');\n            parameters[k] = v;\n        });\n    return parameters;\n}\n\n/**\n * Turn an object into a query string.\n *\n * @param {object} parameterObj - An object containing the parameters and their values.\n * @returns {string} A string of the parameters.\n */\nexport function objectToParameters(parameterObj) {\n    if (Object.keys(parameterObj).length > 0) {\n        let parameters = '?';\n        for (const key in parameterObj) {\n            parameters.length !== 1 && (parameters += '&');\n            parameters += key + '=' + parameterObj[key];\n        }\n        return parameters;\n    } else {\n        return '';\n    }\n}\n\n/**\n * Track a Google Analytics event.\n *\n * @param {string} event - The event key for Tag Manager.\n * @param {string} eventCategory - The event category.\n * @param {string} eventAction - The event action.\n * @param {string} [eventLabel] - The event label.\n * @param {number} [eventValue] - The event value.\n * @param {boolean} [nonInteractionHit] - Does this count as interacting with the page?\n */\nexport function gaEvent(\n    event,\n    eventCategory,\n    eventAction,\n    eventLabel,\n    eventValue,\n    nonInteractionHit\n) {\n    window.dataLayer = window.dataLayer || [];\n    window.dataLayer.push({\n        event: event,\n        eventCategory: eventCategory,\n        eventAction: eventAction,\n        eventLabel: eventLabel,\n        eventValue: eventValue,\n        nonInteractionHit: nonInteractionHit,\n    });\n}\n\n/**\n * Append an array of elements to an element.\n *\n * @param {HTMLElement} elem - The parent element.\n * @param {HTMLElement[]} children - An array of elements to append to it.\n */\nexport function appendAll(elem, children) {\n    children.forEach((child) => elem.appendChild(child));\n}\n\n/**\n * Extract number from string, e.g. return '123' from string 'a1b2c3'.\n *\n * @param {string} string - String\n */\nexport function numberFromString(string) {\n    let number = string.replace(/\\D/g, '');\n    return number;\n}\n\n/**\n * Calculates viewport width to determinte if using mobile\n * @param {number} number - width of screen, with default value = 432.\n *\n */\nexport function isMobile(screen = 432) {\n    const viewPortWidth = window.innerWidth;\n    const mobileScreen = screen;\n\n    if (viewPortWidth < mobileScreen) {\n        return true;\n    }\n}\n\n/**\n *\n * Turn DOM elements to array e.g return [li, li, li] from DOM element selecting 'li' <ul><li></li><li></li><li></li></ul>\n *\n * @param {object} object - Object\n */\n\nexport function toArray(obj) {\n    let array = [];\n    // iterate backwards ensuring that length is an UInt32\n    for (let i = obj.length >>> 0; i--; ) {\n        array[i] = obj[i];\n    }\n    return array;\n}\n\n/**\n * Check browser user agent is IE or edge and return version number\n */\nexport function detectIE() {\n    const ua = window.navigator.userAgent,\n        versionLength = 10,\n        msie = ua.indexOf('MSIE '),\n        msieVersionOffset = 5;\n\n    if (msie > 0) {\n        // IE 10 or older => return version number\n        return parseInt(\n            ua.substring(msie + msieVersionOffset, ua.indexOf('.', msie)),\n            versionLength\n        );\n    }\n\n    const trident = ua.indexOf('Trident/'),\n        tridentVersionOffset = 3;\n\n    if (trident > 0) {\n        // IE 11 => return version number\n        let rv = ua.indexOf('rv:');\n        return parseInt(\n            ua.substring(rv + tridentVersionOffset, ua.indexOf('.', rv)),\n            versionLength\n        );\n    }\n\n    const edge = ua.indexOf('Edge/'),\n        edgeVersionOffset = 5;\n\n    if (edge > 0) {\n        // Edge (IE 12+) => return version number\n        return parseInt(\n            ua.substring(edge + edgeVersionOffset, ua.indexOf('.', edge)),\n            versionLength\n        );\n    }\n\n    // other browser\n    return false;\n}\n\n/**\n * Check if browser supports IntersectionObserver API\n *\n * @returns {Boolean} -\n */\nexport function checkIntersectionObserver() {\n    if (\n        'IntersectionObserver' in window &&\n        'IntersectionObserverEntry' in window &&\n        'intersectionRatio' in window.IntersectionObserverEntry.prototype\n    ) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n/**\n * Create elements containing classes, content and any other attributes\n *\n * @param {string} type - Type of element to create, e.g. \"div\", \"button\".\n * @param {array} attributes - Array of objects specifying which attributes to assign to the element i.e. {label : \"class\", val : \"container\"}\n */\nexport function createHTMLElement(type, attributes) {\n    let el = document.createElement(type);\n    attributes.map(function (att) {\n        att.label === 'content'\n            ? el.appendChild(document.createTextNode(att.val))\n            : att.label === 'html'\n            ? (el.innerHTML = att.val)\n            : el.setAttribute(att.label, att.val);\n    });\n    return el;\n}\n\nexport function uppercaseFirstLetterLowercaseRest(s) {\n    return s.charAt(0).toUpperCase() + s.slice(1).toLowerCase();\n}\n\n/**\n * Asynchronous request to Funnelback web service.\n *\n * @param {object} config An axios configuration object.\n * @return {Promise} - A promise of a Funnelback response.\n */\nexport function axiosRequest(config) {\n    const httpOK = 200;\n\n    return axios(config)\n        .then((response) => {\n            if (httpOK === response.status) {\n                return response.data;\n            } else {\n                throw `Bad response: ${response.status}`;\n            }\n        })\n        .catch((e) => {\n            if (!axios.isCancel(e)) {\n                gaEvent(\n                    'jsError',\n                    'JavaScript error',\n                    `Line ${e.lineNumber} – ${e.message}`,\n                    `axiosRequest ${e.fileName} (${window.location})`,\n                    true\n                );\n            }\n        });\n}\n\n/**\n * Returns a react fragment formatted time\n * @param {Date} date - A date object.\n * @returns {ReactFragment} The formatted time to local time.\n */\nexport function formatTime(timeString) {\n    const time = new Date(timeString);\n    return (\n        <time\n            dateTime={`${time.getHours() ? time.getHours() : '00'}:${\n                time.getMinutes() ? time.getMinutes() : '00'\n            }`}\n        >\n            {time.getHours() ? time.getHours() : '00'}:\n            {time.getMinutes() ? time.getMinutes() : '00'}\n        </time>\n    );\n}\n\n/**\n * Returns the correct English suffix for a number.\n *\n * @param  {number} day - The day of the month.\n * @returns {string} The correct suffix.\n */\nfunction daySuffix(day) {\n    const eleventh = 11,\n        thirteenth = 13,\n        lastDigit = day.toString().slice(-1);\n\n    return day >= eleventh && day <= thirteenth\n        ? 'th'\n        : lastDigit === '1'\n        ? 'st'\n        : lastDigit === '2'\n        ? 'nd'\n        : lastDigit === '3'\n        ? 'rd'\n        : 'th';\n}\n\n/**\n * Format a date for React.\n *\n * @param {Date} date - A date object.\n * @returns {ReactFragment} The formatted date.\n */\nexport function formatReactDate(date) {\n    const months = [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December',\n        ],\n        days = [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday',\n        ];\n\n    return (\n        <time dateTime={date.toISOString().split('T')[0]}>\n            {days[date.getUTCDay()]}, {date.getUTCDate()}\n            <sup>{daySuffix(date.getUTCDate())}</sup>{' '}\n            {months[date.getUTCMonth()]} {date.getUTCFullYear()}\n        </time>\n    );\n}\n\n/**\n * Array slicer\n *\n * @param {array} arr - array to be split up into subarrays\n * @param {number} len - max number items that goes into each subarray\n */\nexport function arraySlicer(arr, len) {\n    let newArray = [],\n        i = 0,\n        n = arr.length;\n\n    while (i < n) {\n        newArray.push(arr.slice(i, (i += len)));\n    }\n    return newArray;\n}\n\n/**\n * Screen width\n *\n * @param {size} string - variable name for sreensize value. To be consistent with values stored in _variables.scss\n */\nexport function screenWidth(size) {\n    switch (size) {\n        case 'tiny':\n            return 375;\n\n        case 'mobile':\n            return 432;\n\n        case 'tablet':\n            return 768;\n\n        case 'between':\n            return 900;\n\n        case 'small':\n            return 1024;\n\n        case 'desktop':\n            return 1280;\n\n        case 'large':\n            return 1440;\n\n        case '1080':\n            return 1920;\n\n        case '4k':\n            return 3840;\n\n        case '8k':\n            return 7680;\n\n        default:\n            return 1280;\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"how-to-apply--pgt\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb2020\"] = self[\"webpackChunkweb2020\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"react\",\"vendor-dependencies\",\"axios\",\"vendor-direct\"], () => (__webpack_require__(\"./src/how-to-apply--pgt.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["React","render","HowToApply","howToApplyConfig","edn","document","addEventListener","test","navigator","userAgent","howToApplyCTAs","querySelectorAll","Array","from","forEach","howToApply","dataset","config","then","createElement","element","ApplyLinks","props","data","map","d","index","key","className","href","text","useEffect","useState","disableBodyScroll","enableBodyScroll","PropTypes","createFocusTrap","entryPoints","modalVisible","setModalVisible","firstStep","setFirstStep","progressQualification","setProgressQualification","progressRoute","setProgressRoute","progressDate","setProgressDate","progressMethod","setProgressMethod","furtherStepsPendingIndicator","setFurtherStepsPendingIndicator","windowPrompt","setWindowPrompt","promptQualification","promptRoute","promptEntryPoint","furtherStepsPending","selectionButtonQualification","setSelectionButtonQualification","selectionLinkQualification","setSelectionLinkQualification","selectionButtonRoute","setSelectionButtonRoute","selectionLinkRoute","setSelectionLinkRoute","selectionButtonDate","setSelectionButtonDate","selectionLinkDate","setSelectionLinkDate","selectionHeadingLocationOne","setSelectionHeadingLocationOne","selectionButtonLocationOneDate","setSelectionButtonLocationOneDate","selectionLinkLocationOneDate","setSelectionLinkLocationOneDate","selectionHeadingLocationTwo","setSelectionHeadingLocationTwo","selectionButtonLocationTwoDate","setSelectionButtonLocationTwoDate","selectionLinkLocationTwoDate","setSelectionLinkLocationTwoDate","selectionLinkMethod","setSelectionLinkMethod","selectedQualificationData","selectedQualificationValue","selectedRouteData","selectedRouteValue","selectedDateData","selectedDateValue","clearSelectionOptions","formatDate","sourceDate","months","formattedDate","Date","getUTCMonth","getUTCFullYear","filterMethodsData","methods","dateSpecificPrompt","qualNav","routeNav","dateNav","methodNav","onClick","filterQualificationData","filterRouteData","filterDatesData","methodLinks","linkOptions","m","methodLink","header","link","options","apply","push","filterLocation","location","heading","uniqueLocationDataArray","uniqueLocationData","filter","e","locations","fd","v","i","a","indexOf","headingVal","l","buttonVal","length","dateSrc","target","getAttribute","dateLink","locationDateLinks","Set","find","buttonOptions","dateButtons","dateLinks","locationOptions","locationsAll","lo","reduce","filteredData","uniqueLocations","dates","date","db","dateLinksData","lq","filteredDateData","q","buttonQuals","linkRoutes","routeLink","s","bq","textContent","sr","routeLinksData","lr","filteredRouteData","linkQuals","routeNames","innerText","qual","filteredQualData","question","qualificationQuestion","Fragment","alternative","otheryear","otherurl","focusTrap","setFocusTrap","modalRef","modalContentRef","getModal","getModalContent","activate","initialFocus","querySelector","onDeactivate","clickOutsideDeactivates","deactivate","ref","modal","modalContent","year","propTypes","array","object","axiosRequest","timeout","url","axios","toBool","partialMatchFn","fullMatchFn","removeClass","elem","removePartials","matchFn","split","join","reduceMotion","reducedMotionQuery","window","matchMedia","matches","isVisible","offsetHeight","offsetWidth","verticallyInWindow","getBoundingClientRect","top","innerHeight","parametersToObject","parameterString","parameters","substr","parameter","k","objectToParameters","parameterObj","Object","keys","gaEvent","event","eventCategory","eventAction","eventLabel","eventValue","nonInteractionHit","dataLayer","appendAll","children","child","appendChild","numberFromString","string","number","replace","isMobile","screen","arguments","undefined","viewPortWidth","innerWidth","mobileScreen","toArray","obj","detectIE","ua","versionLength","msie","msieVersionOffset","parseInt","substring","trident","tridentVersionOffset","rv","edge","edgeVersionOffset","checkIntersectionObserver","IntersectionObserverEntry","prototype","createHTMLElement","type","attributes","el","att","label","createTextNode","val","innerHTML","setAttribute","uppercaseFirstLetterLowercaseRest","charAt","toUpperCase","slice","toLowerCase","httpOK","response","status","catch","isCancel","lineNumber","message","fileName","formatTime","timeString","time","dateTime","getHours","getMinutes","daySuffix","day","eleventh","thirteenth","lastDigit","toString","formatReactDate","days","toISOString","getUTCDay","getUTCDate","arraySlicer","arr","len","newArray","n","screenWidth","size"],"sourceRoot":""}