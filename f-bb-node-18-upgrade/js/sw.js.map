{"version":3,"file":"sw.js","mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,SAAS,GAAG,cAAc;EAC5BC,WAAW,GAAG,CACV,uDAAuD,EACvD,yDAAyD,EACzD,GAAG,EACH,MAAM,CACT;AAELC,IAAI,CAACC,gBAAgB,CAAC,SAAS,EAAE,UAASC,KAAK,EAAE;EAC7CA,KAAK,CAACC,SAAS,CACXC,MAAM,CAACC,IAAI,CAACP,SAAS,CAAC,CAACQ,IAAI,CAAC,UAASC,KAAK,EAAE;IACxC,OAAOA,KAAK,CAACC,MAAM,CAACT,WAAW,CAAC;EACpC,CAAC,CACL,CAAC;AACL,CAAC,CAAC;AAEFC,IAAI,CAACC,gBAAgB,CAAC,OAAO,EAAE,UAASC,KAAK,EAAE;EAC3C;EACA,IACIA,KAAK,CAACO,OAAO,CAACC,MAAM,KAAK,KAAK,IAC9BR,KAAK,CAACO,OAAO,CAACE,GAAG,CAACC,OAAO,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,KAAK,CAAC,EACzD;IACEb,KAAK,CAACc,WAAW,CACbZ,MAAM,CAACa,KAAK,CAACf,KAAK,CAACO,OAAO,CAAC,CAACH,IAAI,CAAC,UAASY,QAAQ,EAAE;MAChD,IAAIA,QAAQ,EAAE;QACV,OAAOA,QAAQ;MACnB;MACA,MAAMC,YAAY,GAAGjB,KAAK,CAACO,OAAO,CAACW,KAAK,CAAC,CAAC;MAC1C,OAAOC,KAAK,CAACF,YAAY,EAAE;QACvBG,WAAW,EAAE;MACjB,CAAC,CAAC,CAAChB,IAAI,CAAC,UAASY,QAAQ,EAAE;QACvB,IACI,CAACA,QAAQ,IACTA,QAAQ,CAACK,MAAM,KAAK,GAAG,IACvBL,QAAQ,CAACM,IAAI,KAAK,OAAO,EAC3B;UACE,OAAON,QAAQ;QACnB;QACA,MAAMO,eAAe,GAAGP,QAAQ,CAACE,KAAK,CAAC,CAAC;QACxChB,MAAM,CAACC,IAAI,CAACP,SAAS,CAAC,CAACQ,IAAI,CAAC,UAASC,KAAK,EAAE;UACxCA,KAAK,CAACmB,GAAG,CAACxB,KAAK,CAACO,OAAO,EAAEgB,eAAe,CAAC;QAC7C,CAAC,CAAC;QACF,OAAOP,QAAQ;MACnB,CAAC,CAAC;IACN,CAAC,CACL,CAAC;EACL;AACJ,CAAC,CAAC,C","sources":["webpack://web2020/./service-worker/sw.js"],"sourcesContent":["/**\n * Service worker\n *\n * @author Web Development\n * @copyright City, University of London 2018\n */\nconst cacheName = 'city-web2020',\n    urlsToCache = [\n        '/__data/assets/git_bridge/0005/440879/main/js/main.js',\n        '/__data/assets/git_bridge/0005/440879/main/css/main.css',\n        '/',\n        '/404',\n    ];\n\nself.addEventListener('install', function(event) {\n    event.waitUntil(\n        caches.open(cacheName).then(function(cache) {\n            return cache.addAll(urlsToCache);\n        })\n    );\n});\n\nself.addEventListener('fetch', function(event) {\n    // only cache same sub-domain\n    if (\n        event.request.method === 'GET' &&\n        event.request.url.indexOf(window.location.origin) === 0\n    ) {\n        event.respondWith(\n            caches.match(event.request).then(function(response) {\n                if (response) {\n                    return response;\n                }\n                const fetchRequest = event.request.clone();\n                return fetch(fetchRequest, {\n                    credentials: 'include',\n                }).then(function(response) {\n                    if (\n                        !response ||\n                        response.status !== 200 ||\n                        response.type !== 'basic'\n                    ) {\n                        return response;\n                    }\n                    const responseToCache = response.clone();\n                    caches.open(cacheName).then(function(cache) {\n                        cache.put(event.request, responseToCache);\n                    });\n                    return response;\n                });\n            })\n        );\n    }\n});\n"],"names":["cacheName","urlsToCache","self","addEventListener","event","waitUntil","caches","open","then","cache","addAll","request","method","url","indexOf","window","location","origin","respondWith","match","response","fetchRequest","clone","fetch","credentials","status","type","responseToCache","put"],"sourceRoot":""}