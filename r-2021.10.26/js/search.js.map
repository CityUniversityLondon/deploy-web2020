{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/patterns/finder/components/cards/finder__results__accommodation.js","webpack:///./src/patterns/finder/components/cards/finder__results__casestudy.js","webpack:///./src/patterns/finder/components/cards/finder__results__centre.js","webpack:///./src/patterns/finder/components/cards/finder__results__contact.js","webpack:///./src/patterns/finder/components/cards/finder__results__course.js","webpack:///./src/patterns/finder/components/cards/finder__results__event.js","webpack:///./src/patterns/finder/components/cards/finder__results__funding.js","webpack:///./src/patterns/finder/components/cards/finder__results__generic.js","webpack:///./src/patterns/finder/components/cards/finder__results__module.js","webpack:///./src/patterns/finder/components/cards/finder__results__news.js","webpack:///./src/patterns/finder/components/cards/finder__results__profile.js","webpack:///./src/patterns/finder/components/cards/finder__results__research.js","webpack:///./src/patterns/finder/components/cards/finder__results__card.js","webpack:///./src/patterns/finder/components/results/formatLabel.js","webpack:///./src/util.js","webpack:///./src/patterns/search/components/main/results/search__bestbets.js","webpack:///./src/patterns/search/components/main/results/search__othersites.js","webpack:///./src/patterns/search/components/main/query/search__clear.js","webpack:///./src/patterns/search/components/main/query/search__collection.js","webpack:///./src/patterns/search/components/main/query/search__query.js","webpack:///./src/patterns/search/components/main/results/search__results.js","webpack:///./src/patterns/search/search.js","webpack:///./src/patterns/search/components/inline/search--inline__clear.js","webpack:///./src/patterns/search/components/inline/search--inline__query.js","webpack:///./src/patterns/search/components/inline/search--inline__suggestions.js","webpack:///./src/patterns/search/components/inline/search--inline__topresults.js","webpack:///./src/patterns/search/search--inline.js","webpack:///./src/search.js","webpack:///./src/patterns/finder/components/results/finder__pagination.js","webpack:///./src/patterns/finder/funnelback.js"],"names":["calculateTime","Math","thumbnail","props","src","alt","className","level","aria-hidden","uppercaseFirstLetterLowercaseRest","features","Object","meta","type","price","transport","distance","href","subtitle","school","department","centre","subject","jobtitle","email","telephone","room","enquiry","enquiryurl","award","duration","method","location","clearing","external","aria-label","courseCode","formatLabel","shortDate","date","month","formatShortDate","audience","hardship","programme","feestatus","title","term","topic","i","specification","formattedDate","formatReactDate","Date","dateString","hashtags","headshot","thumbnailExist","country","parse","academic","student","degree","status","details","query","Finder__Results__Accommodation","PropTypes","object","Finder__Results__CaseStudy","Finder__Results__Centre","Finder__Results__Contact","prev","key","value","Finder__Results__Course","Finder__Results__Event","Finder__Results__Funding","Finder__Results__Generic","Finder__Results__Module","Finder__Results__News","Finder__Results__Profile","Finder__Results__Research","Finder__Results__Card","string","s","matchFn","removePartials","elem","window","parameters","parameterString","parameter","nonInteractionHit","children","screen","array","obj","a","ua","msie","parseInt","rv","edge","el","document","attributes","att","response","axios","gaEvent","e","dateTime","lastDigit","day","daySuffix","partialMatchFn","fullMatchFn","bestBet","collection","result","genericResult","onClick","currentValue","htmlFor","name","id","onChange","newQuery","setCollection","textInput","useState","cancel","useEffect","setPartialQuery","clearQuery","call","setSuggestions","focusInput","submitForm","partialQuery","clear","submitSuggestion","setShowSuggestions","suggestionsList","suggestions","role","showSuggestions","inputId","onBlur","setActiveSuggestionID","onFocus","onMouseDown","onKeyDown","suggestion","input","autoComplete","placeholder","ref","suggest","setCall","newCall","suggestionsPromise","config","update","label","currentTab","setCurrentTab","updating","aria-live","links","aria-selected","aria-current","finder","primaryPagination","currStart","numRanks","totalMatching","panels","aria-labelledby","tabIndex","hidden","start","search","keyEvents","params","URLSearchParams","initialQuery","misspelling","sortType","startRank","initialResponse","freeze","bestBets","facets","results","spell","summary","currEnd","initialResponses","primary","finders","summariseAs","resultCard","nonpublic","currQuery","currStartRank","currCollection","hasParams","replaceHistory","scroll","fbResponses","find","newResponses","requestToken","setFbResponses","setResponse","request","responses","data","newQueryText","c","setQuery","setUpdate","updater","updateState","queryElement","otherSites","collections","bestbets","element","onSubmit","fetchSuggestions","urlString","highlighted","highlightQueryTerm","docNum","fixedFacets","fixedParameters","initialSuggestions","setUpdating","setSuggestionsUpdating","suggestionsCall","setSuggestionsCall","suggestionsRequestToken","suggestionsRequest","updateIndicator","what","focusTrap","setFocusTrap","createFocusTrap","initialFocus","getmodal","onDeactivate","clickOutsideDeactivates","iconClass","display","veil","data-on","toggleButton","setDisplay","inputField","suggestionsUpdating","topResults","funnelbackResponse","modal","rel","width","action","maximumBestBetsToDisplay","Search__BestBets","siteUrl","maximumResultsToDisplay","Search__OtherSites","Search__Clear","func","Search__Collection","maximumSuggestions","escapeKey","endKey","homeKey","arrowUp","arrowDown","Search__Query","bool","arrowLeft","arrowRight","Search__Results","scrollDuration","reduceMotion","screenOffsetRatio","Search","InlineSearch__Clear","InlineSearch__Query","InlineSearch__Suggestions","InlineSearch__TopResults","InlineSearch","test","navigator","inlineSearch","render","numberOfPages","currentPage","pages","changePage","newStartRank","pageNumber","disabled","page","aria-expanded","data-proximity","data-pagecount","Finder__Pagination","fixedParams","param","fixedFacetParams","facet","facetParams","facetKeys","cancelToken","httpsAgent","https","keepAlive","sort","events","axiosRequest","show","url","baseUrl","findRootUrl","suggestRootUrl","timeout"],"mappings":"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","file":"search.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t10: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([237,1,0,4,3,2]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/**\n * @module patterns/finder/components/cards/finder__results__accommodation\n * @author Web Development\n * @copyright City, University of London 2020\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { uppercaseFirstLetterLowercaseRest } from '../../../../util';\n\n/**\n * Render a Funnelback result as an accommodation card.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction Finder__Results__Accommodation(props) {\n    const mph = 60,\n        calculateTime = (minutes) =>\n            Math.floor(minutes / mph) > 0\n                ? Math.floor(minutes / mph) + ' hour ' + (minutes % mph)\n                : minutes,\n        thumbnail = props.details.metaData.thumbnail && (\n            <img\n                src={props.details.metaData.thumbnail}\n                alt=\"\"\n                className=\"card__thumbnail\"\n            />\n        ),\n        level = props.details.metaData.level && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-graduation-cap icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span className=\"sr-only\">Level:</span>{' '}\n                <span>\n                    {uppercaseFirstLetterLowercaseRest(\n                        props.details.metaData.level\n                    )\n                        .split('|')\n                        .join(' or ')}\n                </span>\n            </p>\n        ),\n        features = Object.keys(props.details.metaData)\n            .filter(\n                (meta) =>\n                    ['accessible', 'catered', 'ensuite'].includes(meta) &&\n                    props.details.metaData[meta] === 'Yes'\n            )\n            .map((meta) => meta.replace(/ensuite/, 'en suite'))\n            .sort()\n            .join(', '),\n        type = props.details.metaData.type && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-building icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span className=\"sr-only\">Type:</span>{' '}\n                <span>\n                    {props.details.metaData.type.split('|').length > 2\n                        ? uppercaseFirstLetterLowercaseRest(\n                              props.details.metaData.type\n                          )\n                              .split('|')\n                              .slice(0, -1)\n                              .join(', ') +\n                          ' or ' +\n                          uppercaseFirstLetterLowercaseRest(\n                              props.details.metaData.type\n                          )\n                              .split('|')\n                              .slice(-1)\n                        : uppercaseFirstLetterLowercaseRest(\n                              props.details.metaData.type\n                          )\n                              .split('|')\n                              .join(' or ')}\n                    {features && ' (' + features + ')'}\n                </span>\n            </p>\n        ),\n        price = props.details.metaData.price && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-pound-sign icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span className=\"sr-only\">Price:</span>{' '}\n                <span>\n                    {props.details.metaData.price} (\n                    {props.details.metaData.deposit} deposit)\n                </span>\n            </p>\n        ),\n        transport = props.details.metaData.transport && (\n            <React.Fragment>\n                {' '}\n                ({calculateTime(props.details.metaData.transport)} minutes by\n                public transport)\n            </React.Fragment>\n        ),\n        distance = props.details.metaData.walk && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-walking icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span className=\"sr-only\">\n                    Distance to Northampton Square campus:\n                </span>{' '}\n                <span>\n                    {calculateTime(props.details.metaData.walk)} minutes walk to\n                    campus\n                    {transport}\n                </span>\n            </p>\n        );\n\n    return (\n        <li className=\"card card--accommodation\">\n            <a\n                href={props.details.clickTrackingUrl}\n                className=\"card__anchor card__details\"\n            >\n                {thumbnail}\n                <div className=\"card__details__text\">\n                    <h3 className=\"card__heading\">{props.details.title}</h3>\n                    {distance}\n                    {type}\n                    {price}\n                    {level}\n                </div>\n            </a>\n        </li>\n    );\n}\n\nFinder__Results__Accommodation.propTypes = {\n    details: PropTypes.object,\n};\n\nexport default Finder__Results__Accommodation;\n","/**\n * @module patterns/finder/components/cards/finder__results__casestudy\n * @author Web Development\n * @copyright City, University of London 2020\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Render a Funnelback result as a case study card.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction Finder__Results__CaseStudy(props) {\n    const subtitle = props.details.metaData.status ? (\n            <p className=\"card__type\">{props.details.metaData.status}</p>\n        ) : (\n            props.details.metaData.type && (\n                <p className=\"card__type\">{props.details.metaData.type}</p>\n            )\n        ),\n        school = props.details.metaData.school && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-university icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span>School:</span>{' '}\n                <span>\n                    {props.details.metaData.school.split('|').length > 2\n                        ? props.details.metaData.school\n                              .split('|')\n                              .slice(0, -1)\n                              .join(', ') +\n                          ', and ' +\n                          props.details.metaData.school.split('|').slice(-1)\n                        : props.details.metaData.school\n                              .split('|')\n                              .join(', and ')}\n                </span>\n            </p>\n        ),\n        department = props.details.metaData.department && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-building icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span>Department:</span>{' '}\n                <span>\n                    {props.details.metaData.department.split('|').length > 2\n                        ? props.details.metaData.department\n                              .split('|')\n                              .slice(0, -1)\n                              .join(', ') +\n                          ', and ' +\n                          props.details.metaData.department.split('|').slice(-1)\n                        : props.details.metaData.department\n                              .split('|')\n                              .join(', and ')}\n                </span>\n            </p>\n        ),\n        centre = props.details.metaData.centre && (\n            <p className=\"card__tag\">\n                <span className=\"fas fa-fw fa-vial icon\" aria-hidden=\"true\" />{' '}\n                <span>Research centre:</span>{' '}\n                <span>\n                    {props.details.metaData.centre.split('|').length > 2\n                        ? props.details.metaData.centre\n                              .split('|')\n                              .slice(0, -1)\n                              .join(', ') +\n                          ', and ' +\n                          props.details.metaData.centre.split('|').slice(-1)\n                        : props.details.metaData.centre\n                              .split('|')\n                              .join(', and ')}\n                </span>\n            </p>\n        );\n\n    return (\n        <li className=\"card card--casestudy\">\n            <a\n                href={props.details.clickTrackingUrl}\n                className=\"card__anchor card__details\"\n            >\n                <div className=\"card__details__text\">\n                    <h3 className=\"card__heading\">{props.details.title}</h3>\n                    {subtitle}\n                    <p className=\"card__description\">\n                        {props.details.metaData.c && props.details.metaData.c}\n                    </p>\n                    {school}\n                    {department}\n                    {centre}\n                </div>\n            </a>\n        </li>\n    );\n}\n\nFinder__Results__CaseStudy.propTypes = {\n    details: PropTypes.object,\n};\n\nexport default Finder__Results__CaseStudy;\n","/**\n * @module patterns/finder/components/cards/finder__results__centre\n * @author Web Development\n * @copyright City, University of London 2020\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { uppercaseFirstLetterLowercaseRest } from '../../../../util';\n\n/**\n * Render a Funnelback result as a centre card.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction Finder__Results__Centre(props) {\n    const school = props.details.metaData.school && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-university icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span>School:</span>{' '}\n                <span>\n                    {props.details.metaData.school.split('|').length > 2\n                        ? props.details.metaData.school\n                              .split('|')\n                              .slice(0, -1)\n                              .join(', ') +\n                          ', and ' +\n                          props.details.metaData.school.split('|').slice(-1)\n                        : props.details.metaData.school\n                              .split('|')\n                              .join(', and ')}\n                </span>\n            </p>\n        ),\n        department = props.details.metaData.department && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-building icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span>Department:</span>{' '}\n                <span>\n                    {props.details.metaData.department.split('|').length > 2\n                        ? props.details.metaData.department\n                              .split('|')\n                              .slice(0, -1)\n                              .join(', ') +\n                          ', and ' +\n                          props.details.metaData.department.split('|').slice(-1)\n                        : props.details.metaData.department\n                              .split('|')\n                              .join(', and ')}\n                </span>\n            </p>\n        ),\n        subject = props.details.metaData.related && (\n            <p className=\"card__type\">\n                {props.details.metaData.related.split('|').length > 2\n                    ? uppercaseFirstLetterLowercaseRest(\n                          props.details.metaData.related\n                      )\n                          .split('|')\n                          .slice(0, -1)\n                          .join(', ') +\n                      ' and ' +\n                      uppercaseFirstLetterLowercaseRest(\n                          props.details.metaData.related\n                      )\n                          .split('|')\n                          .slice(-1)\n                    : uppercaseFirstLetterLowercaseRest(\n                          props.details.metaData.related\n                      )\n                          .split('|')\n                          .join(' and ')}\n            </p>\n        );\n    return (\n        <li className=\"card card--centre\">\n            <a\n                href={props.details.clickTrackingUrl}\n                className=\"card__anchor card__details\"\n            >\n                <div className=\"card__details__text\">\n                    <h3 className=\"card__heading\">{props.details.title}</h3>\n                    {subject}\n                    <p className=\"card__description\">\n                        {props.details.metaData.c && props.details.metaData.c}\n                    </p>\n                    {school}\n                    {department}\n                </div>\n            </a>\n        </li>\n    );\n}\n\nFinder__Results__Centre.propTypes = {\n    details: PropTypes.object,\n    query: PropTypes.object,\n};\n\nexport default Finder__Results__Centre;\n","/**\n * @module patterns/finder/components/cards/finder__results__contact\n * @author Web Development\n * @copyright City, University of London 2019\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Render a Funnelback result as a contact card.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction Finder__Results__Contact(props) {\n    const department = props.details.metaData.department && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-building icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span>Department:</span> {props.details.metaData.department}\n            </p>\n        ), \n        school = props.details.metaData.school && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-university icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span>School:</span> {props.details.metaData.school}\n            </p>\n        ),\n        jobtitle = props.details.metaData.jobtitle && (\n            <p className=\"card__type\">{props.details.metaData.jobtitle}</p>\n        ),\n        email = props.details.metaData.email && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-envelope icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span>Email:</span>{' '}\n                <a href={'mailto:' + props.details.metaData.email}>\n                    {props.details.metaData.email}\n                </a>\n            </p>\n        ),\n        telephone = props.details.metaData.telephone && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-phone fa-rotate-90 icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span>Telephone:</span>{' '}\n                <a href={'tel:' + props.details.metaData.telephone}>\n                    {props.details.metaData.friendlytelephone}\n                </a>\n            </p>\n        ),\n        room = props.details.metaData.room && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-door-open icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span>Room:</span> {props.details.metaData.room}\n            </p>\n        ),\n        enquiry = props.details.metaData.enquiryurl && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-edit icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span>Enquiries:</span> <a href={props.details.metaData.enquiryurl}>{props.details.metaData.enquirylabel}</a>\n            </p>\n        );\n\n    return (\n        <li className=\"card card--contact\">\n            <div className=\"card__details\">\n                <div className=\"card__details__text\">\n                    <h3 className=\"card__heading\">{props.details.title}</h3>\n                    {jobtitle}\n                    {school}\n                    {department}\n                    {room}\n                    {email}\n                    {telephone}\n                    {enquiry}\n                </div>\n            </div>\n        </li>\n    );\n}\n\nFinder__Results__Contact.propTypes = {\n    details: PropTypes.object,\n};\n\nexport default Finder__Results__Contact;\n","/**\n * @module patterns/finder/components/cards/finder__results__course\n * @author Web Development\n * @copyright City, University of London 2019\n */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport formatLabel from '../results/formatLabel';\nimport { uppercaseFirstLetterLowercaseRest } from '../../../../util';\n\n/**\n * Render a Funnelback result as a course card.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction Finder__Results__Course(props) {\n    const subtitle =\n            props.details.metaData.type || props.details.metaData.level || null,\n        award = props.details.metaData.qualification && (\n            <p className=\"card__tag\">\n                <span className=\"fas fa-fw fa-award icon\" aria-hidden=\"true\" />{' '}\n                <span>\n                    Award\n                    {props.details.metaData.qualification.split('|').length >\n                        1 && 's'}\n                    :\n                </span>{' '}\n                <span>\n                    {props.details.metaData.qualification.split('|').join(', ')}\n                </span>\n            </p>\n        ),\n        duration = props.details.metaData.duration && (\n            <p className=\"card__tag\">\n                <span className=\"fal fa-fw fa-clock icon\" aria-hidden=\"true\" />{' '}\n                <span>Duration:</span>{' '}\n                <span>{props.details.metaData.duration}</span>\n            </p>\n        ),\n        method = props.details.metaData.method &&\n            props.details.metaData.level !==\n                'Short courses and professional development' &&\n            ((props.query.facets && props.query.facets.method) ||\n                props.query.query.indexOf(props.details.metaData.method) >= 0 ||\n                props.details.metaData.method.indexOf('Online') >= 0) && (\n                <p className=\"card__tag\">\n                    <span\n                        className=\"fas fa-fw fa-book-reader icon\"\n                        aria-hidden=\"true\"\n                    />{' '}\n                    <span>\n                        Method\n                        {props.details.metaData.method.split('|').length > 1 &&\n                            's'}{' '}\n                        of study:\n                    </span>{' '}\n                    <span>\n                        {uppercaseFirstLetterLowercaseRest(\n                            props.details.metaData.method\n                        )\n                            .split('|')\n                            .join(', ')}\n                    </span>\n                </p>\n            ),\n        location = props.details.metaData.location &&\n            props.query.facets &&\n            props.query.facets.location && (\n                <p className=\"card__tag\">\n                    <span\n                        className=\"fas fa-fw fa-map-marker-alt icon\"\n                        aria-hidden=\"true\"\n                    />{' '}\n                    <span>Location:</span>{' '}\n                    <span>\n                        {/* Avoid duplication of 'Online' location label if location and method of study are both online */}\n                        {props.details.metaData.location === 'Online|Online'\n                            ? 'Online'\n                            : props.details.metaData.location\n                                  .split('|')\n                                  .join(', ')}\n                    </span>\n                </p>\n            ),\n        school = props.details.metaData.school && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-university icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span>School:</span>{' '}\n                <span>{props.details.metaData.school}</span>\n            </p>\n        ),\n        // City and Business School use different metadata values; check for both\n        clearing = ['Yes', 'yes'].includes(props.details.metaData.clearing) && (\n            <div className=\"card__label card--course__label--clearing\">\n                <p className=\"card__label card--course__label--clearing\">\n                    Clearing\n                </p>\n            </div>\n        ),\n        external = props.details.indexUrl.indexOf('cass.city.ac.uk') >= 0 && (\n            <>\n                {' '}\n                <span\n                    className=\"fas fa-external-link icon\"\n                    aria-label=\"(external link)\"\n                ></span>\n            </>\n        ),\n        courseCode =\n            props.details.metaData.code &&\n            ([\n                'Undergraduate degree',\n                'Foundation course',\n                'Postgraduate taught degree',\n            ].some((s) => props.details.metaData.level.indexOf(s) >= 0) ||\n                props.query.query.indexOf(props.details.metaData.code) >= 0) ? (\n                <p className=\"card__tag\">\n                    <span\n                        className=\"fas fa-fw fa-graduation-cap icon\"\n                        aria-hidden=\"true\"\n                    />{' '}\n                    <span>\n                        Course code\n                        {props.details.metaData.code.split('|').length > 1 &&\n                            's'}\n                        :\n                    </span>{' '}\n                    <span>\n                        {props.details.metaData.code.split('|').join('/')}\n                    </span>\n                </p>\n            ) : null;\n\n    return (\n        <li className=\"card card--course\">\n            <a\n                href={props.details.clickTrackingUrl}\n                className=\"card__anchor card__details\"\n            >\n                <div className=\"wrapper--card__label__details\">\n                    {clearing}\n                    <div className=\"card__details__text\">\n                        <h3 className=\"card__heading\">\n                            {props.query.query\n                                ? formatLabel(\n                                      props.details.title,\n                                      props.query.query\n                                  )\n                                : props.details.title}\n                            {external}\n                        </h3>\n                        <p className=\"card__type\">\n                            {props.query.query\n                                ? formatLabel(subtitle, props.query.query)\n                                : subtitle && subtitle}\n                        </p>\n                        <p className=\"card__description\">\n                            {props.query.query\n                                ? formatLabel(\n                                      props.details.metaData.c,\n                                      props.query.query\n                                  )\n                                : props.details.metaData.c &&\n                                  props.details.metaData.c}\n                        </p>\n                        {school}\n                        {award}\n                        {duration}\n                        {courseCode}\n                        {method}\n                        {location}\n                    </div>\n                </div>\n            </a>\n        </li>\n    );\n}\n\nFinder__Results__Course.propTypes = {\n    details: PropTypes.object,\n    query: PropTypes.object,\n};\n\nexport default Finder__Results__Course;\n","/**\n * @module patterns/finder/components/cards/finder__results__event\n * @author Web Development\n * @copyright City, University of London 2020\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n// import { formatReactDate } from '../../../../util';\n\nfunction formatShortDate(dateString) {\n    const months = [\n            'Jan',\n            'Feb',\n            'Mar',\n            'Apr',\n            'May',\n            'Jun',\n            'Jul',\n            'Aug',\n            'Sep',\n            'Oct',\n            'Nov',\n            'Dec',\n        ],\n        date = new Date(dateString),\n        month = months[date.getUTCMonth()];\n\n    return (\n        <p className=\"card--event__label--shortdate\">\n            {month} <span>{date.getUTCDate()}</span>\n        </p>\n    );\n}\n\n/**\n * Render a Funnelback result as an event card.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction Finder__Results__Event(props) {\n    const shortDate =\n            props.details.metaData.d &&\n            formatShortDate(props.details.metaData.d.split('|')[0]),\n        location = props.details.metaData.location && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw icon fa-map-marker-alt\"\n                    aria-hidden=\"true\"\n                ></span>{' '}\n                <span>Location:</span>{' '}\n                <span>\n                    {props.details.metaData.location.split('|').join(', ')}\n                </span>\n            </p>\n        ),\n        audience = props.details.metaData.audience && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw icon fa-users\"\n                    aria-hidden=\"true\"\n                ></span>{' '}\n                <span>Audience:</span>{' '}\n                <span>{props.details.metaData.audience}</span>\n            </p>\n        ),\n        thumbnail = props.details.metaData.thumbnail && (\n            <img\n                src={props.details.metaData.thumbnail}\n                alt=\"\"\n                className=\"card__thumbnail\"\n            />\n        );\n\n    return (\n        <li className=\"card card--event card--landscape\">\n            <a\n                href={props.details.clickTrackingUrl}\n                className=\"card__anchor card__details\"\n            >\n                {thumbnail}\n                {shortDate}\n                <div className=\"card__details__text\">\n                    <h3 className=\"card__heading\">{props.details.title}</h3>\n                    <p className=\"card__description\">\n                        {props.details.metaData.c && props.details.metaData.c}\n                    </p>\n                    {location}\n                    {audience}\n                </div>\n            </a>\n        </li>\n    );\n}\n\nFinder__Results__Event.propTypes = {\n    details: PropTypes.object,\n};\n\nexport default Finder__Results__Event;\n","/**\n * @module patterns/finder/components/cards/finder__results__funding\n * @author Web Development\n * @copyright City, University of London 2020\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { uppercaseFirstLetterLowercaseRest } from '../../../../util';\n\n/**\n * Render a Funnelback result as a funding card.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction Finder__Results__Funding(props) {\n    const school = props.details.metaData.school &&\n            props.query.facets &&\n            props.query.facets.school && (\n                <p className=\"card__tag\">\n                    <span\n                        className=\"fas fa-fw fa-university icon\"\n                        aria-hidden=\"true\"\n                    />{' '}\n                    <span>School:</span>{' '}\n                    <span>\n                        {props.details.metaData.school.split('|').length > 2\n                            ? props.details.metaData.school\n                                  .split('|')\n                                  .slice(0, -1)\n                                  .join(', ') +\n                              ', or ' +\n                              props.details.metaData.school.split('|').slice(-1)\n                            : props.details.metaData.school\n                                  .split('|')\n                                  .join(', or ')}\n                    </span>\n                </p>\n            ),\n        hardship = props.details.metaData.hardship === '1' && (\n            <div className=\"card--funding__label--hardship\">\n                <p>Hardship funding</p>\n            </div>\n        ),\n        programme = props.details.metaData.level && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-graduation-cap icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span>Funding for:</span>{' '}\n                <span>\n                    {props.details.metaData.level.split('|').length > 2\n                        ? uppercaseFirstLetterLowercaseRest(\n                              props.details.metaData.level\n                          )\n                              .split('|')\n                              .slice(0, -1)\n                              .join(', ') +\n                          ' or ' +\n                          uppercaseFirstLetterLowercaseRest(\n                              props.details.metaData.level\n                          )\n                              .split('|')\n                              .slice(-1)\n                        : uppercaseFirstLetterLowercaseRest(\n                              props.details.metaData.level\n                          )\n                              .split('|')\n                              .join(' or ')}\n                </span>\n            </p>\n        ),\n        feestatus = props.details.metaData.feestatus && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"far fa-fw fa-globe-europe icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span>Fee status:</span>{' '}\n                <span>\n                    {props.details.metaData.feestatus.split('|').length > 2\n                        ? props.details.metaData.feestatus\n                              .split('|')\n                              .slice(0, -1)\n                              .join(', ') +\n                          ' or ' +\n                          props.details.metaData.feestatus.split('|').slice(-1)\n                        : props.details.metaData.feestatus\n                              .split('|')\n                              .join(' or ')}\n                </span>\n            </p>\n        );\n\n    return (\n        <li className=\"card card--funding\">\n            <a\n                href={props.details.clickTrackingUrl}\n                className=\"card__anchor card__details\"\n            >\n                {hardship}\n                <div className=\"card__details__text\">\n                    <h3 className=\"card__heading\">{props.details.title}</h3>\n                    <p className=\"card__type\">{props.details.metaData.type}</p>\n                    <p className=\"card__description\">\n                        {props.details.metaData.c && props.details.metaData.c}\n                    </p>\n                    {programme}\n                    {feestatus}\n                    {school}\n                </div>\n            </a>\n        </li>\n    );\n}\n\nFinder__Results__Funding.propTypes = {\n    details: PropTypes.object,\n    query: PropTypes.object,\n};\n\nexport default Finder__Results__Funding;\n","/**\n * @module patterns/finder/components/cards/finder__results__generic\n * @author Web Development\n * @copyright City, University of London 2019\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Render a Funnelback result as a generic card.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction Finder__Results__Generic(props) {\n    const school = props.details.metaData.school && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-university icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span>School:</span>{' '}\n                <span>\n                    {props.details.metaData.school.split('|').length > 2\n                        ? props.details.metaData.school\n                              .split('|')\n                              .slice(0, -1)\n                              .join(', ') +\n                          ', and ' +\n                          props.details.metaData.school.split('|').slice(-1)\n                        : props.details.metaData.school\n                              .split('|')\n                              .join(', and ')}\n                </span>\n            </p>\n        ),\n        department = props.details.metaData.department && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-building icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span>Department:</span>{' '}\n                <span>\n                    {props.details.metaData.department.split('|').length > 2\n                        ? props.details.metaData.department\n                              .split('|')\n                              .slice(0, -1)\n                              .join(', ') +\n                          ', and ' +\n                          props.details.metaData.department.split('|').slice(-1)\n                        : props.details.metaData.department\n                              .split('|')\n                              .join(', and ')}\n                </span>\n            </p>\n        );\n\n    return (\n        <li className=\"card card--generic\">\n            <a\n                href={props.details.clickTrackingUrl}\n                className=\"card__anchor card__details\"\n            >\n                <div className=\"card__details__text\">\n                    <h3 className=\"card__heading\">{props.details.title}</h3>\n                    <p className=\"card__description\">\n                        {props.details.metaData.c && props.details.metaData.c}\n                    </p>\n                    {school}\n                    {department}\n                </div>\n            </a>\n        </li>\n    );\n}\n\nFinder__Results__Generic.propTypes = {\n    details: PropTypes.object,\n};\n\nexport default Finder__Results__Generic;\n","/**\n * @module patterns/finder/components/cards/finder__results__module\n * @author Web Development\n * @copyright City, University of London 2020\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Render a Funnelback result as a module card.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction Finder__Results__Module(props) {\n    const location = props.details.metaData.location && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-map-marker-alt icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span>Location:</span>{' '}\n                <span>{props.details.metaData.location}</span>\n            </p>\n        ),\n        title = props.details.metaData.code ? (\n            <React.Fragment>\n                <span className=\"card--module__code\">\n                    {props.details.metaData.code}\n                </span>{' '}\n                <span>{props.details.title}</span>\n            </React.Fragment>\n        ) : (\n            <React.Fragment>\n                <span>{props.details.title}</span>\n            </React.Fragment>\n        ),\n        school = props.details.metaData.school && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-university icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span>School:</span>{' '}\n                <span>\n                    {props.details.metaData.school.split('|').length > 2\n                        ? props.details.metaData.school\n                              .split('|')\n                              .slice(0, -1)\n                              .join(', ') +\n                          ', and ' +\n                          props.details.metaData.school.split('|').slice(-1)\n                        : props.details.metaData.school\n                              .split('|')\n                              .join(', and ')}\n                </span>\n            </p>\n        ),\n        term = props.details.metaData.term && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"far fa-fw fa-calendar icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span>Semester:</span>{' '}\n                <span>\n                    {props.details.metaData.term.split('|').length > 2\n                        ? 'All year'\n                        : props.details.metaData.term.split('|').join(' or ')}\n                </span>\n            </p>\n        ),\n        topic = props.details.metaData.related && (\n            <p className=\"card__type\">\n                {props.details.metaData.related\n                    .split('|')\n                    .sort()\n                    .map((topic, i) => (i > 0 ? topic.toLowerCase() : topic))\n                    .join(', ')}\n            </p>\n        ),\n        specification = props.details.metaData.specification && (\n            <p className=\"card__tag\">\n                <span className=\"far fa-fw fa-file-pdf icon\" aria-label=\"PDF\" />{' '}\n                <a href={props.details.metaData.specification}>\n                    Download module specification\n                </a>\n            </p>\n        );\n\n    return (\n        <li className=\"card card--module\">\n            <div className=\"card__details\">\n                <div className=\"card__details__text\">\n                    <h3 className=\"card__heading\">{title}</h3>\n                    {topic}\n                    <p className=\"card__description\">\n                        {props.details.metaData.c}\n                    </p>\n                    {term}\n                    {school}\n                    {location}\n                    {specification}\n                </div>\n            </div>\n        </li>\n    );\n}\n\nFinder__Results__Module.propTypes = {\n    details: PropTypes.object,\n    query: PropTypes.object,\n};\n\nexport default Finder__Results__Module;\n","/**\n * @module patterns/finder/components/cards/finder__results__news\n * @author Web Development\n * @copyright City, University of London 2020\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatReactDate } from '../../../../util';\n\n/**\n * Render a Funnelback result as a generic card.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction Finder__Results__News(props) {\n    const formattedDate = formatReactDate(new Date(props.details.metaData.d)),\n        dateString = props.details.metaData.d && (\n            <p className=\"card__type\">{formattedDate}</p>\n        ),\n        hashtags = props.details.metaData.hashtagtext && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fad fa-fw fa-hashtag icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span>\n                    Hashtag\n                    {props.details.metaData.hashtagtext.split('|').length > 1 &&\n                        's'}\n                    :\n                </span>{' '}\n                <span>\n                    {props.details.metaData.hashtagtext.split('|').join(', ')}\n                </span>\n            </p>\n        ),\n        thumbnail = props.details.metaData.thumbnail && (\n            <img\n                src={props.details.metaData.thumbnail}\n                alt=\"\"\n                className=\"card__thumbnail\"\n            />\n        );\n\n    return (\n        <li className=\"card card--news\">\n            <a\n                href={props.details.clickTrackingUrl}\n                className=\"card__anchor card__details\"\n            >\n                {thumbnail}\n                <div className=\"card__details__text\">\n                    {dateString}\n                    <h3 className=\"card__heading\">{props.details.title}</h3>\n                    <p className=\"card__description\">\n                        {props.details.metaData.c && props.details.metaData.c}\n                    </p>\n                    {hashtags}\n                </div>\n            </a>\n        </li>\n    );\n}\n\nFinder__Results__News.propTypes = {\n    details: PropTypes.object,\n};\n\nexport default Finder__Results__News;\n","/**\n * @module patterns/finder/components/cards/finder__results__profile\n * @author Web Development\n * @copyright City, University of London 2019\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Render a Funnelback result as a profile card.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction Finder__Results__Profile(props) {\n    const school = props.details.metaData.school && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-university icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span>School:</span> {props.details.metaData.school}\n            </p>\n        ),\n        department = props.details.metaData.department && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-building icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span>Department:</span> {props.details.metaData.department}\n            </p>\n        ),\n        headshot = props.details.metaData.thumbnail && (\n            <div className=\"card__thumbnail\">\n                <img\n                    src={props.details.metaData.thumbnail}\n                    alt={'Photo of ' + props.details.title}\n                />\n            </div>\n        ),\n        thumbnailExist =\n            props.details.metaData.thumbnail &&\n            'card--profile--thumbnailAvailable',\n        country = props.query.facets &&\n            props.query.facets.country &&\n            props.details.metaData.country && (\n                <div className=\"card__tag\">\n                    <span\n                        className=\"fad fa-fw fa-globe-europe icon\"\n                        aria-hidden=\"true\"\n                    />{' '}\n                    <span>Country:</span>{' '}\n                    {props.details.metaData.country.split('|').length > 2\n                        ? props.details.metaData.country\n                              .split('|')\n                              .slice(0, -1)\n                              .join(', ') +\n                          ' and ' +\n                          props.details.metaData.country.split('|').slice(-1)\n                        : props.details.metaData.country\n                              .split('|')\n                              .join(' and ')}\n                </div>\n            );\n\n    return (\n        <li className=\"card card--profile\">\n            <a\n                href={props.details.clickTrackingUrl}\n                className={`card__anchor card__details ${thumbnailExist}`}\n            >\n                {headshot}\n                <div className=\"card__details__text\">\n                    <h3 className=\"card__heading\">{props.details.title}</h3>\n                    <p className=\"card__type\">\n                        {props.details.metaData.jobtitle}\n                    </p>\n                    {school}\n                    {department}\n                    {country}\n                </div>\n            </a>\n        </li>\n    );\n}\n\nFinder__Results__Profile.propTypes = {\n    details: PropTypes.object,\n    query: PropTypes.object,\n};\n\nexport default Finder__Results__Profile;\n","/**\n * @module patterns/finder/components/cards/finder__results__research\n * @author Web Development\n * @copyright City, University of London 2021\n */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport parse from 'html-react-parser';\n\n/**\n * Render a Funnelback result as a PhD research project card.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction Finder__Results__Research(props) {\n    const school = props.details.metaData.school && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-university icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span>School:</span>{' '}\n                <span>\n                    {props.details.metaData.school.split('|').length > 2\n                        ? props.details.metaData.school\n                              .split('|')\n                              .slice(0, -1)\n                              .join(', ') +\n                          ' and ' +\n                          props.details.metaData.school.split('|').slice(-1)\n                        : props.details.metaData.school\n                              .split('|')\n                              .join(' and ')}\n                </span>\n            </p>\n        ),\n        department = props.details.metaData.department && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-building icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span>Department:</span>{' '}\n                <span>\n                    {props.details.metaData.department.split('|').length > 2\n                        ? props.details.metaData.department\n                              .split('|')\n                              .slice(0, -1)\n                              .join(', ') +\n                          ' and ' +\n                          props.details.metaData.department.split('|').slice(-1)\n                        : props.details.metaData.department\n                              .split('|')\n                              .join(' and ')}\n                </span>\n            </p>\n        ),\n        centre = props.details.metaData.researchcentre && (\n            <p className=\"card__tag\">\n                <span className=\"fas fa-fw fa-vial icon\" aria-hidden=\"true\" />{' '}\n                {props.details.metaData.researchcentre.split('|').length > 1 ? (\n                    <span>Reseearch centres: </span>\n                ) : (\n                    <span>Reseearch centre: </span>\n                )}\n                <span>\n                    {props.details.metaData.researchcentre.split('|').length > 2\n                        ? parse(props.details.metaData.researchcentre)\n                              .split('|')\n                              .slice(0, -1)\n                              .join(', ') +\n                          ' and ' +\n                          parse(\n                              props.details.metaData.researchcentre\n                                  .split('|')\n                                  .slice(-1)\n                          )\n                        : parse(\n                              props.details.metaData.researchcentre\n                                  .split('|')\n                                  .join(' and ')\n                          )}\n                </span>\n            </p>\n        ),\n        academic = props.details.metaData.academic && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-chalkboard-teacher icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                {props.details.metaData.academic.split('|').length > 1 ? (\n                    <span>Academics: </span>\n                ) : (\n                    <span>Academic: </span>\n                )}\n                <span>\n                    {props.details.metaData.academic.split('|').length > 2\n                        ? parse(\n                              props.details.metaData.academic\n                                  .split('|')\n                                  .slice(0, -1)\n                                  .join(', ') +\n                                  ' and ' +\n                                  props.details.metaData.academic\n                                      .split('|')\n                                      .slice(-1)\n                          )\n                        : parse(\n                              props.details.metaData.academic\n                                  .split('|')\n                                  .join(' and ')\n                          )}\n                </span>\n            </p>\n        ),\n        student = props.details.metaData.student && (\n            <p className=\"card__tag\">\n                <span className=\"fas fa-fw fa-users icon\" aria-hidden=\"true\" />{' '}\n                {props.details.metaData.student.split('|').length > 1 ? (\n                    <span>Students: </span>\n                ) : (\n                    <span>Student: </span>\n                )}\n                <span>\n                    {props.details.metaData.student.split('|').length > 2\n                        ? parse(\n                              props.details.metaData.student\n                                  .split('|')\n                                  .slice(0, -1)\n                                  .join(', ') +\n                                  ' and ' +\n                                  props.details.metaData.student\n                                      .split('|')\n                                      .slice(-1)\n                          )\n                        : parse(\n                              props.details.metaData.student\n                                  .split('|')\n                                  .join(' and ')\n                          )}\n                </span>\n            </p>\n        ),\n        degree = props.details.metaData.relatedDegree && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"far fa-fw fa-diploma icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                {props.details.metaData.relatedDegree.split('|').length > 1 ? (\n                    <span>Related degrees: </span>\n                ) : (\n                    <span>Related degree: </span>\n                )}\n                <span>\n                    {props.details.metaData.relatedDegree.split('|').length > 2\n                        ? parse(\n                              props.details.metaData.relatedDegree\n                                  .split('|')\n                                  .slice(0, -1)\n                                  .join(', ') +\n                                  ' and ' +\n                                  props.details.metaData.relatedDegree\n                                      .split('|')\n                                      .slice(-1)\n                          )\n                        : parse(\n                              props.details.metaData.relatedDegree\n                                  .split('|')\n                                  .join(' and ')\n                          )}\n                </span>\n            </p>\n        ),\n        status = props.details.metaData.status && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"far fa-fw fa-hourglass icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span>Status:</span>{' '}\n                <span>{props.details.metaData.status} </span>\n                {props.details.metaData.status === 'Completed project' ? (\n                    <span\n                        className=\"far fa-fw fa-check-circle icon\"\n                        aria-hidden=\"true\"\n                    />\n                ) : null}\n            </p>\n        );\n\n    return (\n        <li className=\"card card--research\">\n            <div className=\"card__details\">\n                <div className=\"card__details__text\">\n                    <h3 className=\"card--research__title-link\">\n                        {props.details.title}\n                    </h3>\n                    <p className=\"card__description\">\n                        {props.details.metaData.c && props.details.metaData.c}\n                    </p>\n                    {school}\n                    {department}\n                    {centre}\n                    {degree}\n                    {academic}\n                    {student}\n                    {status}\n                </div>\n            </div>\n        </li>\n    );\n}\n\nFinder__Results__Research.propTypes = {\n    details: PropTypes.object,\n};\n\nexport default Finder__Results__Research;\n","/**\n * @module patterns/finder/components/cards/finder__results__card\n * @author Web Development\n * @copyright City, University of London 2019\n */\n\nimport Accommodation from './finder__results__accommodation';\nimport CaseStudy from './finder__results__casestudy';\nimport Centre from './finder__results__centre';\nimport Contact from './finder__results__contact';\nimport Course from './finder__results__course';\nimport Event from './finder__results__event';\nimport Funding from './finder__results__funding';\nimport Generic from './finder__results__generic';\nimport Module from './finder__results__module';\nimport News from './finder__results__news';\nimport Profile from './finder__results__profile';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Research from './finder__results__research';\n\n/**\n * Render a Funnelback result as the appropriate card type.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction Finder__Results__Card(props) {\n    switch (props.type) {\n        case 'accommodation':\n            return <Accommodation details={props.details} />;\n        case 'casestudy':\n            return <CaseStudy details={props.details} />;\n        case 'centre':\n            return <Centre details={props.details} query={props.query} />;\n        case 'contact':\n            return <Contact details={props.details} query={props.query} />;\n        case 'course':\n            return <Course details={props.details} query={props.query} />;\n        case 'event':\n            return <Event details={props.details} />;\n        case 'funding':\n            return <Funding details={props.details} query={props.query} />;\n        case 'module':\n            return <Module details={props.details} query={props.query} />;\n        case 'news':\n            return <News details={props.details} />;\n        case 'profile':\n            return <Profile details={props.details} query={props.query} />;\n        case 'research':\n            return <Research details={props.details} query={props.query} />;\n        default:\n            return <Generic details={props.details} />;\n    }\n}\n\nFinder__Results__Card.propTypes = {\n    details: PropTypes.object,\n    query: PropTypes.object,\n    type: PropTypes.string,\n};\n\nexport default Finder__Results__Card;\n","import React from 'react';\n\nconst formatLabel = (label, value) => {\n    if (value) {\n        return label;\n    } else {\n        return (\n            <React.Fragment>\n                {label.split(value).reduce((prev, current, i) => {\n                    if (!i) {\n                        return [current];\n                    }\n                    return prev.concat(\n                        <span className=\"highlightText\" key={value + current}>\n                            {value}\n                        </span>,\n                        current\n                    );\n                }, [])}\n            </React.Fragment>\n        );\n    }\n};\n\nexport default formatLabel;\n","/**\n * Useful utility functions\n *\n * @module util\n * @author Web Development\n * @copyright City, University of London 2018-2020\n */\n\nimport axios from 'axios';\nimport React from 'react';\n\n/**\n * Turns string boolean into real boolean.\n *\n * @param {string} s - A string that may be 'true'.\n * @returns {boolean} True if 'true'.\n */\nexport function toBool(s) {\n    return s === 'true' ? true : false;\n}\n\nconst partialMatchFn = (m) => (s) => s.indexOf(m) < 0,\n    fullMatchFn = (m) => (s) => s !== m;\n\n/**\n * Remove a class name from an HTML element.\n *\n * @param {HTMLElement} elem - An HTML element.\n * @param {string} className - A string representing the class to remove.\n * @param {boolean} [removePartials] - If true, remove partially matching classes.\n */\nexport function removeClass(elem, className, removePartials) {\n    const matchFn = removePartials\n        ? partialMatchFn(className)\n        : fullMatchFn(className);\n    elem.className = elem.className\n        .split(/\\s+/)\n        .filter((s) => matchFn(s))\n        .join(' ');\n}\n\n/**\n * Detect whether reduced motion is enabled.\n *\n * If it is, you should shortcut animations, disable autoplay elements, avoid\n * smooth scrolling in favour of jump scrolling, etc.\n *\n * Currently unsupported by Chrome, but works in Safari and Firefox.\n *\n * @returns {boolean} Boolean indicating that the reduce motion media query matches.\n */\nexport function reduceMotion() {\n    const reducedMotionQuery = window.matchMedia(\n        '(prefers-reduced-motion: reduce)'\n    );\n    return reducedMotionQuery.matches ? true : false;\n}\n\n/**\n * Predicate testing whether an element is currently visible, as opposed to\n * displayed: none; or similar. Doesn't necessarily mean it's visible in the\n * window.\n *\n * @param {HTMLElement} elem - An HTML element.\n * @returns {boolean} - Is it visible?\n */\nexport function isVisible(elem) {\n    return elem.offsetHeight !== 0 && elem.offsetWidth !== 0 ? true : false;\n}\n\n/**\n * Predicate testing whether an element is positioned in the window.\n *\n *\n * @param {HTMLElement} elem - An HTML element.\n * @returns {boolean} - Is it onscreen?\n */\nexport function verticallyInWindow(elem) {\n    return elem.getBoundingClientRect().top >= 0 &&\n        elem.getBoundingClientRect().top <= window.innerHeight\n        ? true\n        : false;\n}\n\n/**\n * Turn a query string into an object.\n *\n * @param {string} parameterString - An HTML query string.\n * @returns {object} An object containing the parameters.\n */\nexport function parametersToObject(parameterString) {\n    const parameters = {};\n    parameterString\n        .substr(1)\n        .split('&')\n        .forEach((parameter) => {\n            const [k, v] = parameter.split('=');\n            parameters[k] = v;\n        });\n    return parameters;\n}\n\n/**\n * Turn an object into a query string.\n *\n * @param {object} parameterObj - An object containing the parameters and their values.\n * @returns {string} A string of the parameters.\n */\nexport function objectToParameters(parameterObj) {\n    if (Object.keys(parameterObj).length > 0) {\n        let parameters = '?';\n        for (const key in parameterObj) {\n            parameters.length !== 1 && (parameters += '&');\n            parameters += key + '=' + parameterObj[key];\n        }\n        return parameters;\n    } else {\n        return '';\n    }\n}\n\n/**\n * Track a Google Analytics event.\n *\n * @param {string} event - The event key for Tag Manager.\n * @param {string} eventCategory - The event category.\n * @param {string} eventAction - The event action.\n * @param {string} [eventLabel] - The event label.\n * @param {number} [eventValue] - The event value.\n * @param {boolean} [nonInteractionHit] - Does this count as interacting with the page?\n */\nexport function gaEvent(\n    event,\n    eventCategory,\n    eventAction,\n    eventLabel,\n    eventValue,\n    nonInteractionHit\n) {\n    window.dataLayer = window.dataLayer || [];\n    window.dataLayer.push({\n        event: event,\n        eventCategory: eventCategory,\n        eventAction: eventAction,\n        eventLabel: eventLabel,\n        eventValue: eventValue,\n        nonInteractionHit: nonInteractionHit,\n    });\n}\n\n/**\n * Append an array of elements to an element.\n *\n * @param {HTMLElement} elem - The parent element.\n * @param {HTMLElement[]} children - An array of elements to append to it.\n */\nexport function appendAll(elem, children) {\n    children.forEach((child) => elem.appendChild(child));\n}\n\n/**\n * Extract number from string, e.g. return '123' from string 'a1b2c3'.\n *\n * @param {string} string - String\n */\nexport function numberFromString(string) {\n    let number = string.replace(/\\D/g, '');\n    return number;\n}\n\n/**\n * Calculates viewport width to determinte if using mobile\n * @param {number} number - width of screen, with default value = 432.\n *\n */\nexport function isMobile(screen = 432) {\n    const viewPortWidth = window.innerWidth;\n    const mobileScreen = screen;\n\n    if (viewPortWidth < mobileScreen) {\n        return true;\n    }\n}\n\n/**\n *\n * Turn DOM elements to array e.g return [li, li, li] from DOM element selecting 'li' <ul><li></li><li></li><li></li></ul>\n *\n * @param {object} object - Object\n */\n\nexport function toArray(obj) {\n    let array = [];\n    // iterate backwards ensuring that length is an UInt32\n    for (let i = obj.length >>> 0; i--; ) {\n        array[i] = obj[i];\n    }\n    return array;\n}\n\n/**\n * Check browser user agent is IE or edge and return version number\n */\nexport function detectIE() {\n    const ua = window.navigator.userAgent,\n        versionLength = 10,\n        msie = ua.indexOf('MSIE '),\n        msieVersionOffset = 5;\n\n    if (msie > 0) {\n        // IE 10 or older => return version number\n        return parseInt(\n            ua.substring(msie + msieVersionOffset, ua.indexOf('.', msie)),\n            versionLength\n        );\n    }\n\n    const trident = ua.indexOf('Trident/'),\n        tridentVersionOffset = 3;\n\n    if (trident > 0) {\n        // IE 11 => return version number\n        let rv = ua.indexOf('rv:');\n        return parseInt(\n            ua.substring(rv + tridentVersionOffset, ua.indexOf('.', rv)),\n            versionLength\n        );\n    }\n\n    const edge = ua.indexOf('Edge/'),\n        edgeVersionOffset = 5;\n\n    if (edge > 0) {\n        // Edge (IE 12+) => return version number\n        return parseInt(\n            ua.substring(edge + edgeVersionOffset, ua.indexOf('.', edge)),\n            versionLength\n        );\n    }\n\n    // other browser\n    return false;\n}\n\n/**\n * Check if browser supports IntersectionObserver API\n *\n * @returns {Boolean} -\n */\nexport function checkIntersectionObserver() {\n    if (\n        'IntersectionObserver' in window &&\n        'IntersectionObserverEntry' in window &&\n        'intersectionRatio' in window.IntersectionObserverEntry.prototype\n    ) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n/**\n * Create elements containing classes, content and any other attributes\n *\n * @param {string} type - Type of element to create, e.g. \"div\", \"button\".\n * @param {array} attributes - Array of objects specifying which attributes to assign to the element i.e. {label : \"class\", val : \"container\"}\n */\nexport function createHTMLElement(type, attributes) {\n    let el = document.createElement(type);\n    attributes.map(function (att) {\n        att.label === 'content'\n            ? el.appendChild(document.createTextNode(att.val))\n            : att.label === 'html'\n            ? (el.innerHTML = att.val)\n            : el.setAttribute(att.label, att.val);\n    });\n    return el;\n}\n\nexport function uppercaseFirstLetterLowercaseRest(s) {\n    return s.charAt(0).toUpperCase() + s.slice(1).toLowerCase();\n}\n\n/**\n * Asynchronous request to Funnelback web service.\n *\n * @param {object} config An axios configuration object.\n * @return {Promise} - A promise of a Funnelback response.\n */\nexport function axiosRequest(config) {\n    const httpOK = 200;\n\n    return axios(config)\n        .then((response) => {\n            if (httpOK === response.status) {\n                return response.data;\n            } else {\n                throw `Bad response: ${response.status}`;\n            }\n        })\n        .catch((e) => {\n            if (!axios.isCancel(e)) {\n                gaEvent(\n                    'jsError',\n                    'JavaScript error',\n                    `Line ${e.lineNumber} – ${e.message}`,\n                    `axiosRequest ${e.fileName} (${window.location})`,\n                    true\n                );\n            }\n        });\n}\n\n/**\n * Returns the correct English suffix for a number.\n *\n * @param  {number} day - The day of the month.\n * @returns {string} The correct suffix.\n */\nfunction daySuffix(day) {\n    const eleventh = 11,\n        thirteenth = 13,\n        lastDigit = day.toString().slice(-1);\n\n    return day >= eleventh || day <= thirteenth\n        ? 'th'\n        : lastDigit === '1'\n        ? 'st'\n        : lastDigit === '2'\n        ? 'nd'\n        : lastDigit === '3'\n        ? 'rd'\n        : 'th';\n}\n\n/**\n * Format a date for React.\n *\n * @param {Date} date - A date object.\n * @returns {ReactFragment} The formatted date.\n */\nexport function formatReactDate(date) {\n    const months = [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December',\n        ],\n        days = [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday',\n        ];\n\n    return (\n        <time dateTime={date.toISOString().split('T')[0]}>\n            {days[date.getUTCDay()]}, {date.getUTCDate()}\n            <sup>{daySuffix(date.getUTCDate())}</sup>{' '}\n            {months[date.getUTCMonth()]} {date.getUTCFullYear()}\n        </time>\n    );\n}\n\n/**\n * Array slicer\n *\n * @param {array} arr - array to be split up into subarrays\n * @param {number} len - max number items that goes into each subarray\n */\nexport function arraySlicer(arr, len) {\n    let newArray = [],\n        i = 0,\n        n = arr.length;\n\n    while (i < n) {\n        newArray.push(arr.slice(i, (i += len)));\n    }\n    return newArray;\n}\n","/**\n * @module patterns/search/components/main/results/search__bestbets\n * @author Web Development\n * @copyright City, University of London 2020\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst maximumBestBetsToDisplay = 3;\n\n/**\n * Render Funnelback results.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction Search__BestBets(props) {\n    return (\n        <div className=\"wrapper--search__bestbets\">\n            <div className=\"search__bestbets\">\n                <h2 className=\"search__bestbets__heading sr-only\">Best bets</h2>\n                <ul className=\"search__bestbets__list\">\n                    {props.bestbets\n                        .slice(0, maximumBestBetsToDisplay)\n                        .map((bestBet, i) => (\n                            <li\n                                className=\"card--search card--bestbet\"\n                                key={'bestBet' + i}\n                            >\n                                <a\n                                    href={bestBet.linkUrl}\n                                    className=\"card__anchor card__details\"\n                                >\n                                    <div className=\"card__details__text\">\n                                        <h3 className=\"card__heading\">\n                                            {bestBet.titleHtml}\n                                        </h3>\n                                        <p className=\"card__description\">\n                                            {bestBet.descriptionHtml}\n                                        </p>\n                                        <p className=\"card__url\">\n                                            {bestBet.displayUrl}\n                                        </p>\n                                    </div>\n                                </a>\n                            </li>\n                        ))}\n                </ul>\n            </div>\n        </div>\n    );\n}\n\nSearch__BestBets.propTypes = {\n    bestbets: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default Search__BestBets;\n","/**\n * @module patterns/search/components/main/results/search__othersites\n * @author Web Development\n * @copyright City, University of London 2020\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// FIXME for go live\nconst siteUrl = 'city.ac.uk';\n\nconst maximumResultsToDisplay = 0;\n\nfunction genericResult(result, collection, i) {\n    const thumbnail = result.metaData.thumbnail && (\n            <div className=\"card__thumbnail\">\n                <picture>\n                    <img src={result.metaData.thumbnail} alt=\"\" />\n                </picture>\n            </div>\n        ),\n        external = result.liveUrl.indexOf(siteUrl) < 0 && (\n            <>\n                {' '}\n                <span\n                    className=\"fas fa-external-link icon\"\n                    aria-label=\"(external link)\"\n                ></span>\n            </>\n        );\n\n    return (\n        <li className=\"card--search\" key={collection + i}>\n            <a\n                href={result.clickTrackingUrl}\n                className=\"card__details card__anchor\"\n            >\n                {thumbnail}\n                <div className=\"card__details__text\">\n                    <h4 className=\"card__heading\">\n                        {result.title}\n                        {external}\n                    </h4>\n                    <p className=\"card__description\">{result.metaData.c}</p>\n                </div>\n            </a>\n        </li>\n    );\n}\n\n/**\n * Render Funnelback results.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction Search__OtherSites(props) {\n    return (\n        <div className=\"wrapper--search__othersites\">\n            <div className=\"search__othersites\">\n                <h2 className=\"search__othersites__heading\">\n                    Results on other City sites\n                </h2>\n                {props.collections.map((collection, i) => {\n                    if (\n                        !collection.updating &&\n                        collection.response &&\n                        collection.response.summary.totalMatching > 0\n                    ) {\n                        return (\n                            <div\n                                className=\"search__othersites__site\"\n                                key={'site' + i}\n                            >\n                                <h3 className=\"search__othersites__site__heading\">\n                                    <a\n                                        href={\n                                            collection.search +\n                                            '?query=' +\n                                            props.query.query\n                                        }\n                                    >\n                                        {collection.label} (\n                                        {\n                                            collection.response.summary\n                                                .totalMatching\n                                        }\n                                        )\n                                    </a>{' '}\n                                    <span\n                                        className=\"fas fa-arrow-right icon\"\n                                        aria-hidden=\"true\"\n                                    ></span>\n                                </h3>\n                                <div className=\"search__results\">\n                                    <ul className=\"search__results__list\">\n                                        {collection.response.results\n                                            .slice(0, maximumResultsToDisplay)\n                                            .map((result, j) =>\n                                                genericResult(\n                                                    result,\n                                                    collection.collection,\n                                                    j\n                                                )\n                                            )}\n                                    </ul>\n                                </div>\n                            </div>\n                        );\n                    } else {\n                        return null;\n                    }\n                })}\n                {props.nonpublic.map((collection, i) => {\n                    if (\n                        !collection.updating &&\n                        collection.response &&\n                        collection.response.summary.totalMatching > 0\n                    ) {\n                        return (\n                            <div\n                                className=\"search__othersites__site\"\n                                key={'site' + i}\n                            >\n                                <h3 className=\"search__othersites__site__heading\">\n                                    <a\n                                        href={\n                                            collection.search +\n                                            '?query=' +\n                                            props.query.query\n                                        }\n                                    >\n                                        {collection.label} (\n                                        {\n                                            collection.response.summary\n                                                .totalMatching\n                                        }\n                                        )\n                                    </a>{' '}\n                                    <span\n                                        className=\"fad fa-lock-alt icon\"\n                                        aria-label=\"Login required\"\n                                    ></span>\n                                </h3>\n                            </div>\n                        );\n                    } else {\n                        return null;\n                    }\n                })}\n                <div className=\"search__othersites__noresults\">\n                    <p>No results found.</p>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nSearch__OtherSites.propTypes = {\n    query: PropTypes.object,\n    collections: PropTypes.arrayOf(PropTypes.object),\n    nonpublic: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default Search__OtherSites;\n","/**\n * @module patterns/search/components/search__clear\n * @author Web Development\n * @copyright City, University of London 2019\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Clear input button.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction Search__Clear(props) {\n    return (\n        <button\n            className=\"search__clear\"\n            type=\"button\"\n            onClick={() => {\n                props.clear();\n            }}\n        >\n            <span className=\"fad fa-fw fa-times-circle icon\" />\n            <span className=\"search__clear__text\">Clear query</span>\n        </button>\n    );\n}\n\nSearch__Clear.propTypes = {\n    clear: PropTypes.func,\n};\n\nexport default Search__Clear;\n","/**<\n * @module patterns/search/components/main/query/search__collection\n * @author Web Development\n * @copyright City, University of London 2020\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Search__Collection(props) {\n    const currentValue =\n        props.query.collection || props.config.primary[0].collection;\n\n    const setCollection = (value) => {\n        const newQuery = props.query;\n\n        newQuery.startRank = 1;\n        newQuery.misspelling = null;\n        newQuery.interacted = true;\n        newQuery.collection = value;\n\n        props.update.query(newQuery);\n        props.update.results(!props.update.updateState);\n    };\n\n    return (\n        <div\n            className={`search__filter search__select ${\n                currentValue !==\n                    props.config.primary.collections[0].collection &&\n                'search__select--selected'\n            }`}\n        >\n            <label htmlFor=\"search__collection\">\n                {props.config.primary.collections[0].label}\n            </label>\n            <select\n                name=\"collection\"\n                id=\"search__collection\"\n                onChange={(e) => setCollection(e.target.value)}\n                value={currentValue}\n            >\n                {props.config.primary.collections.map((collection, i) => {\n                    return (\n                        <option\n                            key={i}\n                            value={collection.collection.toLowerCase()}\n                        >\n                            {collection.label}\n                        </option>\n                    );\n                })}\n            </select>\n        </div>\n    );\n}\n\nSearch__Collection.propTypes = {\n    config: PropTypes.object,\n    query: PropTypes.object,\n    update: PropTypes.object,\n};\n\nexport default Search__Collection;\n","/**\n * @module patterns/search/components/search__query\n * @author Web Development\n * @copyright City, University of London 2020\n */\n\nimport { suggest } from '../../../../finder/funnelback';\nimport Clear from './search__clear';\nimport Collection from './search__collection';\nimport PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\n\nconst maximumSuggestions = 5,\n    escapeKey = 'Escape',\n    endKey = 'End',\n    homeKey = 'Home',\n    arrowUp = 'ArrowUp',\n    arrowDown = 'ArrowDown';\n\nfunction highlightQueryTerm(suggestion, partialQuery) {\n    return (\n        <React.Fragment>\n            <span>\n                <span className=\"sr-only\">{suggestion}</span>\n                <span aria-hidden=\"true\">\n                    <span className=\"search__suggestion\">\n                        {suggestion.slice(\n                            suggestion.indexOf(partialQuery.toLowerCase()),\n                            partialQuery.length\n                        )}\n                    </span>\n                    {suggestion.slice(\n                        suggestion.indexOf(partialQuery.toLowerCase()) +\n                            partialQuery.length\n                    )}\n                </span>\n            </span>\n        </React.Fragment>\n    );\n}\n\n/**\n * Search input field and autocomplete.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction Search__Query(props) {\n    // save what they're typing\n    const [partialQuery, setPartialQuery] = useState(props.query.query);\n    // Funnelback suggestions for the currently typed text\n    const [suggestions, setSuggestions] = useState([]);\n    // Request token for calls to the Funnelback suggestions service, so we\n    // can cancel it\n    const [call, setCall] = useState({ cancel: () => {} });\n    // ref for the input field, so we can .focus() it\n    const stringLength = 16,\n        stringOffset = -4,\n        [inputId] = useState(\n            'search--' +\n                props.query.collection +\n                '--' +\n                Math.random().toString(stringLength).slice(stringOffset)\n        );\n\n    const [showSuggestions, setShowSuggestions] = useState(false),\n        [activeSuggestionID, setActiveSuggestionID] = useState('');\n\n    useEffect(() => {\n        setPartialQuery(props.query.query);\n    }, [props.query.query, props.updating]);\n\n    let textInput = null;\n    function focusInput() {\n        textInput.focus();\n    }\n\n    // on clear, make a default request for results\n    const clearQuery = () => {\n        call.cancel();\n        setPartialQuery('');\n        setSuggestions([]);\n        focusInput();\n\n        const newQuery = props.query;\n\n        newQuery.misspelling = null;\n        newQuery.query = '';\n        newQuery.sortType = '';\n        newQuery.startRank = 1;\n        newQuery.interacted = true;\n\n        props.update.query(newQuery);\n        props.update.results(!props.update.updateState);\n    };\n\n    const submitForm = (query) => {\n        call.cancel();\n        setSuggestions([]);\n\n        const newQuery = props.query;\n\n        newQuery.misspelling = null;\n        newQuery.query = query ? query : partialQuery ? partialQuery : '';\n        newQuery.sortType = '';\n        newQuery.startRank = 1;\n        newQuery.interacted = true;\n\n        props.update.query(newQuery);\n        props.update.results(!props.update.updateState);\n    };\n\n    const clear = partialQuery && (\n        <Clear\n            clear={() => {\n                clearQuery();\n            }}\n        />\n    );\n\n    const submitSuggestion = (suggestion) => {\n        setShowSuggestions(false);\n        setSuggestions([]);\n        focusInput();\n        submitForm(suggestion);\n    };\n\n    // render suggestions\n    const suggestionsList = suggestions && suggestions.length > 0 && (\n        <ul\n            role=\"listbox\"\n            aria-label=\"Search suggestions\"\n            aria-activedescendant={activeSuggestionID}\n            className={\n                showSuggestions\n                    ? 'search__query__suggestions show'\n                    : 'search__query__suggestions hide'\n            }\n        >\n            {[...new Set(suggestions)]\n                .slice(0, maximumSuggestions)\n                .map((suggestion, i) => (\n                    <li key={suggestion} role=\"option\" id={inputId + '--' + i}>\n                        <button\n                            type=\"button\"\n                            onBlur={() => {\n                                setActiveSuggestionID('');\n                                setShowSuggestions(false);\n                            }}\n                            onFocus={() => setShowSuggestions(true)}\n                            onMouseDown={() => submitSuggestion(suggestion)}\n                            onClick={() => submitSuggestion(suggestion)}\n                            onKeyDown={(e) => {\n                                switch (e.key) {\n                                    case escapeKey:\n                                        e.target.parentNode.parentNode.parentNode\n                                            .querySelector('input')\n                                            .focus();\n                                        setSuggestions([]);\n                                        setActiveSuggestionID('');\n                                        break;\n                                    case arrowUp:\n                                        if (\n                                            e.target.parentNode\n                                                .previousElementSibling &&\n                                            e.target.parentNode.previousElementSibling.querySelector(\n                                                'button'\n                                            )\n                                        ) {\n                                            e.preventDefault();\n                                            e.target.parentNode.previousElementSibling\n                                                .querySelector('button')\n                                                .focus();\n                                            setActiveSuggestionID(\n                                                e.target.parentNode\n                                                    .previousElementSibling.id\n                                            );\n                                        } else {\n                                            e.preventDefault();\n                                            e.target.parentNode.parentNode.parentNode\n                                                .querySelector('input')\n                                                .focus();\n                                            setActiveSuggestionID('');\n                                        }\n                                        break;\n                                    case arrowDown:\n                                        e.preventDefault();\n                                        if (\n                                            e.target.parentNode\n                                                .nextElementSibling &&\n                                            e.target.parentNode.nextElementSibling.querySelector(\n                                                'button'\n                                            )\n                                        ) {\n                                            e.preventDefault();\n                                            e.target.parentNode.nextElementSibling\n                                                .querySelector('button')\n                                                .focus();\n                                            setActiveSuggestionID(\n                                                e.target.parentNode\n                                                    .nextElementSibling.id\n                                            );\n                                        }\n                                        break;\n                                    case homeKey:\n                                        e.preventDefault();\n                                        if (\n                                            e.target.parentNode.parentNode\n                                                .firstChild &&\n                                            e.target.parentNode.parentNode.firstChild.querySelector(\n                                                'button'\n                                            )\n                                        ) {\n                                            e.preventDefault();\n                                            e.target.parentNode.parentNode.firstChild\n                                                .querySelector('button')\n                                                .focus();\n                                            setActiveSuggestionID(\n                                                e.target.parentNode.firstChild\n                                                    .id\n                                            );\n                                        }\n                                        break;\n                                    case endKey:\n                                        e.preventDefault();\n                                        if (\n                                            e.target.parentNode.parentNode\n                                                .lastChild &&\n                                            e.target.parentNode.parentNode.lastChild.querySelector(\n                                                'button'\n                                            )\n                                        ) {\n                                            e.preventDefault();\n                                            e.target.parentNode.parentNode.lastChild\n                                                .querySelector('button')\n                                                .focus();\n                                            setActiveSuggestionID(\n                                                e.target.parentNode.lastChild.id\n                                            );\n                                        }\n                                        break;\n                                    default:\n                                        break;\n                                }\n                            }}\n                        >\n                            {highlightQueryTerm(suggestion, partialQuery)}\n                        </button>\n                    </li>\n                ))}\n        </ul>\n    );\n\n    const input = (\n        <div className=\"search__query__input\">\n            <div className=\"search__query__icon--wrapper\">\n                <span\n                    className=\"search__icon fal fa-search icon\"\n                    aria-hidden=\"true\"\n                ></span>\n            </div>\n            <label className=\"sr-only\" htmlFor={inputId}>\n                Search\n            </label>\n            <input\n                autoComplete=\"off\"\n                id={inputId}\n                name=\"query\"\n                placeholder={props.primary[0].placeholder}\n                ref={(input) => {\n                    textInput = input;\n                }}\n                type=\"text\"\n                value={partialQuery}\n                onKeyDown={(e) => {\n                    switch (e.key) {\n                        case escapeKey:\n                            clearQuery();\n                            break;\n                        case arrowDown:\n                            if (suggestions && suggestions.length > 0) {\n                                e.preventDefault();\n                                e.target.parentNode\n                                    .querySelector(\n                                        '.search__query__suggestions button'\n                                    )\n                                    .focus();\n                                setActiveSuggestionID(\n                                    e.target.parentNode.querySelector(\n                                        '.search__query__suggestions li'\n                                    ).id\n                                );\n                            }\n                            break;\n                        default:\n                            break;\n                    }\n                }}\n                onFocus={() => setShowSuggestions(true)}\n                onBlur={() => setShowSuggestions(false)}\n                onChange={(e) => {\n                    //clear old suggestions\n                    setSuggestions([]);\n                    // keep  what they're typing\n                    setPartialQuery(e.target.value);\n\n                    /**\n                     * if we have a request to the suggestions service in progress,\n                     * cancel it. Stops old suggestions overwriting new ones because\n                     * the requests can't keep up with fast typing.\n                     */\n                    call.cancel();\n\n                    if (e.target.value) {\n                        // input is populated, ask for suggestions\n                        const [suggestionsPromise, newCall] = suggest(\n                            props.query.collection,\n                            e.target.value\n                        );\n\n                        // update our request cancel function for the new request\n                        setCall({\n                            cancel: () => {\n                                newCall.cancel();\n                            },\n                        });\n\n                        suggestionsPromise\n                            .then((data) => setSuggestions(data))\n                            .catch(() => setSuggestions([]));\n                    } else {\n                        // input is empty, empty suggestions\n                        setSuggestions([]);\n                    }\n                }}\n            />\n            {suggestionsList}\n            {clear}\n        </div>\n    );\n\n    const collection = (\n        <Collection\n            config={props.config}\n            query={props.query}\n            update={props.update}\n        />\n    );\n\n    return (\n        <fieldset className=\"search-form__query\">\n            <div className=\"wrapper--search-form__query__fields\">\n                {collection}\n                <div className=\"wrapper--search-form__query__fields__input\">\n                    {input}\n                    <button\n                        type=\"submit\"\n                        className=\"search__query__submit\"\n                        onClick={() => submitForm()}\n                    >\n                        <span\n                            className=\"fal fa-search search__query__submit__icon\"\n                            aria-hidden=\"true\"\n                        ></span>{' '}\n                        <span className=\"search__query__submit__text\">\n                            Search\n                        </span>\n                    </button>\n                </div>\n            </div>\n        </fieldset>\n    );\n}\n\nSearch__Query.propTypes = {\n    config: PropTypes.object,\n    query: PropTypes.object,\n    update: PropTypes.object,\n    primary: PropTypes.arrayOf(PropTypes.object),\n    updating: PropTypes.bool,\n};\n\nexport default Search__Query;\n","/**\n * @module patterns/search/components/main/results/search__results\n * @author Web Development\n * @copyright City, University of London 2020\n */\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Card from '../../../../finder/components/cards/finder__results__card';\nimport Pagination from '../../../../finder/components/results/finder__pagination';\n\n// FIXME for go live\nconst siteUrl = 'city.ac.uk';\n\nconst endKey = 'End',\n    homeKey = 'Home',\n    arrowLeft = 'ArrowLeft',\n    arrowUp = 'ArrowUp',\n    arrowRight = 'ArrowRight',\n    arrowDown = 'ArrowDown';\n\nfunction genericResult(result, type, i) {\n    const label = type && <p className=\"card__label\">{type}</p>,\n        external = result.liveUrl.indexOf(siteUrl) < 0 && (\n            <>\n                {' '}\n                <span\n                    className=\"fas fa-external-link icon\"\n                    aria-label=\"(external link)\"\n                ></span>\n            </>\n        );\n\n    return (\n        <li className=\"card--search\" key={'all' + i}>\n            <a\n                href={result.clickTrackingUrl}\n                className=\"card__details card__anchor\"\n            >\n                <div className=\"card__details__text\">\n                    {label}\n                    <h3 className=\"card__heading\">\n                        {result.title}\n                        {external}\n                    </h3>\n                    <p className=\"card__description\">{result.metaData.c}</p>\n                    <p className=\"card__url\">{result.liveUrl}</p>\n                </div>\n            </a>\n        </li>\n    );\n}\n\n/**\n * Render Funnelback results.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction Search__Results(props) {\n    const [currentTab, setCurrentTab] = useState(0);\n\n    const updating = (results) => {\n        return (\n            <p className=\"search__results__updating\" aria-live=\"polite\">\n                <span\n                    className=\"fas fa-spinner fa-pulse icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span>Updating {results}…</span>\n            </p>\n        );\n    };\n\n    /**\n     * Respond to cursor key events inside the tabbed section.\n     *\n     * @param {Event} e - The initiating keydown event.\n     */\n    function keyEvents(e) {\n        switch (e.key) {\n            case arrowLeft:\n                props.element\n                    .querySelector(\n                        `.tabs__links li:nth-child(${\n                            currentTab !== 0 ? currentTab : 1\n                        }) button`\n                    )\n                    .focus();\n\n                currentTab !== 0 && setCurrentTab(currentTab - 1);\n                break;\n            case arrowRight:\n                props.element\n                    .querySelector(\n                        `.tabs__links li:nth-child(${\n                            currentTab !== props.finders.length\n                                ? currentTab + 2\n                                : currentTab + 1\n                        }) button`\n                    )\n                    .focus();\n\n                currentTab !== props.finders.length &&\n                    setCurrentTab(currentTab + 1);\n                break;\n            case arrowUp:\n                /**\n                 * Move focus to the currently selected tab control.\n                 */\n                props.element\n                    .querySelector('.tabs__links button[aria-current=\"true\"]')\n                    .focus();\n                break;\n            case arrowDown:\n                /**\n                 * Move focus into the tab content.\n                 */\n                props.element\n                    .querySelector('.tabs__panel:not([hidden])')\n                    .focus();\n                break;\n            case homeKey:\n                /**\n                 * First tab\n                 */\n                setCurrentTab(0);\n                break;\n            case endKey:\n                /**\n                 * Last tab\n                 */\n                setCurrentTab(props.finders.length);\n                break;\n            default:\n                break;\n        }\n    }\n\n    const links = (\n        <ul className=\"tabs__links\" role=\"tablist\">\n            <li key=\"tabs__links__primary\">\n                <button\n                    role=\"tab\"\n                    id={\n                        'link--search443531__tabs__' +\n                        props.primary[0].collection\n                    }\n                    title={props.primary[0].label}\n                    aria-selected={currentTab === 0}\n                    aria-current={currentTab === 0}\n                    onClick={() => setCurrentTab(0)}\n                >\n                    <span>\n                        {props.primary[0].label} (\n                        {props.primary[0].updating ? (\n                            <span\n                                className=\"fas fa-spinner fa-pulse icon\"\n                                aria-label=\"Updating…\"\n                            />\n                        ) : (\n                            props.primary[0].response &&\n                            props.primary[0].response.summary.totalMatching\n                        )}\n                        )\n                    </span>\n                </button>\n            </li>\n            {props.finders.map((finder, i) => {\n                return (\n                    <li key={'tabs__links__finder' + i} role=\"presentation\">\n                        <button\n                            id={\n                                'link--search443531__tabs__' + finder.collection\n                            }\n                            title={finder.label}\n                            aria-selected={currentTab === i + 1}\n                            aria-current={currentTab === i + 1}\n                            onClick={() => setCurrentTab(i + 1)}\n                        >\n                            <span>\n                                {finder.label} (\n                                {finder.updating || !finder.response ? (\n                                    <span\n                                        className=\"fas fa-spinner fa-pulse icon\"\n                                        aria-label=\"Updating…\"\n                                    />\n                                ) : (\n                                    finder.response.summary.totalMatching\n                                )}\n                                )\n                            </span>\n                        </button>\n                    </li>\n                );\n            })}\n        </ul>\n    );\n\n    // if we have more results than will fit on a single page, we need\n    // pagination\n    const primaryPagination = props.primary[0].response &&\n        props.primary[0].response.summary.totalMatching >\n            props.primary[0].response.summary.numRanks && (\n            <Pagination\n                currStart={props.primary[0].response.summary.currStart}\n                numRanks={props.primary[0].response.summary.numRanks}\n                query={props.query}\n                totalMatching={props.primary[0].response.summary.totalMatching}\n                update={props.update}\n            />\n        );\n\n    const panels = (\n        <React.Fragment>\n            <section\n                className=\"tabs__panel\"\n                id={'search443531__tabs__' + props.primary[0].collection}\n                aria-labelledby={\n                    'link--search443531__tabs__' + props.primary[0].collection\n                }\n                key=\"primary\"\n                role=\"tabpanel\"\n                tabIndex=\"-1\"\n                hidden={currentTab !== 0}\n            >\n                <h2 className=\"tabs__panel__heading sr-only\">\n                    {props.primary[0].label}\n                </h2>\n                <div className=\"tabs__panel__body\">\n                    {props.primary[0].updating ? (\n                        updating('results')\n                    ) : props.primary[0].response &&\n                      props.primary[0].response.summary.totalMatching > 0 ? (\n                        <div className=\"search__results\">\n                            <div className=\"search__results__summary\">\n                                <h3\n                                    aria-live=\"polite\"\n                                    className=\"search__results__summary__heading\"\n                                >\n                                    <span>\n                                        (showing{' '}\n                                        <span>\n                                            {\n                                                props.primary[0].response\n                                                    .summary.currStart\n                                            }\n                                        </span>\n                                        –\n                                        <span>\n                                            {\n                                                props.primary[0].response\n                                                    .summary.currEnd\n                                            }\n                                        </span>{' '}\n                                        of{' '}\n                                        <span>\n                                            {\n                                                props.primary[0].response\n                                                    .summary.totalMatching\n                                            }\n                                        </span>{' '}\n                                        {props.primary[0].response.summary\n                                            .totalMatching === 0\n                                            ? 'results'\n                                            : props.primary[0].response.summary\n                                                  .totalMatching === 1\n                                            ? 'result'\n                                            : 'results'}\n                                        )\n                                    </span>\n                                </h3>\n                            </div>\n                            <ol\n                                className=\"search__results__list\"\n                                start={\n                                    props.primary[0].response.summary.currStart\n                                }\n                            >\n                                {props.primary[0].response.results.map(\n                                    (result, i) => {\n                                        switch (result.collection) {\n                                            case 'web2020-residentialhalls':\n                                                return genericResult(\n                                                    result,\n                                                    'Residential hall',\n                                                    i\n                                                );\n                                            case 'web2020-business-impact':\n                                                return genericResult(\n                                                    result,\n                                                    'Case study',\n                                                    i\n                                                );\n                                            case 'web2020-research':\n                                                return genericResult(\n                                                    result,\n                                                    'Case study',\n                                                    i\n                                                );\n                                            case 'web2020-centres':\n                                                return genericResult(\n                                                    result,\n                                                    'Research centre',\n                                                    i\n                                                );\n                                            case 'web2020-courses':\n                                                return genericResult(\n                                                    result,\n                                                    'Course',\n                                                    i\n                                                );\n                                            case 'web2020-events':\n                                                return genericResult(\n                                                    result,\n                                                    'Event',\n                                                    i\n                                                );\n                                            case 'web2020-facilities':\n                                                return genericResult(\n                                                    result,\n                                                    'Facility',\n                                                    i\n                                                );\n                                            case 'web2020-locations':\n                                                return genericResult(\n                                                    result,\n                                                    'Location',\n                                                    i\n                                                );\n                                            case 'web2020-pathways':\n                                                return genericResult(\n                                                    result,\n                                                    'Career pathway',\n                                                    i\n                                                );\n                                            case 'web2020-funding':\n                                                return genericResult(\n                                                    result,\n                                                    'Funding',\n                                                    i\n                                                );\n                                            case 'web2020-news':\n                                                return genericResult(\n                                                    result,\n                                                    'News',\n                                                    i\n                                                );\n                                            case 'web2020-profiles':\n                                                return genericResult(\n                                                    result,\n                                                    'Profile',\n                                                    i\n                                                );\n                                            default:\n                                                return genericResult(\n                                                    result,\n                                                    null,\n                                                    i\n                                                );\n                                        }\n                                    }\n                                )}\n                            </ol>\n                            {primaryPagination}\n                        </div>\n                    ) : (\n                        <div className=\"search__results__summary search__results__summary--noresults\">\n                            <h3 className=\"search__results__summary__heading\">\n                                Your search did not match any results.\n                            </h3>\n                            <p>Suggestions:</p>\n                            <ul>\n                                <li>\n                                    Make sure that all words are spelled\n                                    correctly\n                                </li>\n                                <li>Try different keywords</li>\n                                <li>Try more general keywords</li>\n                                <li>Try fewer keywords</li>\n                            </ul>\n                        </div>\n                    )}\n                </div>\n            </section>\n            {props.finders.map((finder, i) => {\n                return (\n                    <section\n                        className=\"tabs__panel\"\n                        id={'search443531__tabs__' + finder.collection}\n                        aria-labelledby={\n                            'link--search443531__tabs__' + finder.collection\n                        }\n                        key={'finder' + i}\n                        role=\"tabpanel\"\n                        tabIndex=\"-1\"\n                        hidden={currentTab !== i + 1}\n                    >\n                        <h2 className=\"tabs__panel__heading sr-only\">\n                            {finder.label}\n                        </h2>\n                        <div className=\"tabs__panel__body\">\n                            {finder.updating || !finder.response ? (\n                                updating(finder.summariseAs.plural)\n                            ) : finder.response.summary.totalMatching > 0 ? (\n                                <div className=\"search__results\">\n                                    <div className=\"search__results__summary\">\n                                        <h3\n                                            aria-live=\"polite\"\n                                            className=\"search__results__summary__heading\"\n                                        >\n                                            <span>\n                                                (showing{' '}\n                                                <span>\n                                                    {finder.response &&\n                                                        finder.response.summary\n                                                            .currStart}\n                                                </span>\n                                                –\n                                                <span>\n                                                    {finder.response &&\n                                                        finder.response.summary\n                                                            .currEnd}\n                                                </span>{' '}\n                                                of{' '}\n                                                <span>\n                                                    {finder.response &&\n                                                        finder.response.summary\n                                                            .totalMatching}\n                                                </span>{' '}\n                                                {finder.response &&\n                                                finder.response.summary\n                                                    .totalMatching === 0\n                                                    ? finder.summariseAs.plural\n                                                    : finder.response &&\n                                                      finder.response.summary\n                                                          .totalMatching === 1\n                                                    ? finder.summariseAs\n                                                          .singular\n                                                    : finder.summariseAs.plural}\n                                                )\n                                            </span>\n                                        </h3>\n                                    </div>\n                                    <ol\n                                        className=\"search__results__list\"\n                                        start={\n                                            finder.response &&\n                                            finder.response.summary.currStart\n                                        }\n                                    >\n                                        {finder.response &&\n                                            finder.response.results.map(\n                                                (result, i) => (\n                                                    <Card\n                                                        bestBet={false}\n                                                        details={result}\n                                                        key={\n                                                            finder.collection +\n                                                            i\n                                                        }\n                                                        type={finder.resultCard}\n                                                        query={props.query}\n                                                    />\n                                                )\n                                            )}\n                                    </ol>\n                                    {finder.response &&\n                                        finder.response.summary.totalMatching >\n                                            finder.response.summary.currEnd &&\n                                        finder.search && (\n                                            <p className=\"search__results__more\">\n                                                <a\n                                                    href={\n                                                        finder.search +\n                                                        '?query=' +\n                                                        props.query.query\n                                                    }\n                                                >\n                                                    Browse more{' '}\n                                                    {finder.summariseAs.plural}{' '}\n                                                </a>{' '}\n                                                <span\n                                                    className=\"fas fa-arrow-right icon\"\n                                                    aria-hidden=\"true\"\n                                                ></span>\n                                            </p>\n                                        )}\n                                </div>\n                            ) : (\n                                <p className=\"search__summary__noresults\">\n                                    No matching {finder.summariseAs.plural}.{' '}\n                                    {finder.search && (\n                                        <>\n                                            <a href={finder.search}>\n                                                Browse{' '}\n                                                {finder.summariseAs.plural}{' '}\n                                                instead\n                                            </a>{' '}\n                                            <span\n                                                className=\"fas fa-arrow-right icon\"\n                                                aria-hidden=\"true\"\n                                            ></span>\n                                        </>\n                                    )}\n                                </p>\n                            )}\n                        </div>\n                    </section>\n                );\n            })}\n        </React.Fragment>\n    );\n\n    return (\n        <div\n            className=\"tabs wrapper--search__results\"\n            onKeyDown={(e) => keyEvents(e)}\n        >\n            {links}\n            {panels}\n        </div>\n    );\n}\n\nSearch__Results.propTypes = {\n    config: PropTypes.object,\n    element: PropTypes.object,\n    finders: PropTypes.arrayOf(PropTypes.object),\n    primary: PropTypes.arrayOf(PropTypes.object),\n    query: PropTypes.object,\n    update: PropTypes.object,\n};\n\nexport default Search__Results;\n","/**\n * Search form.\n *\n * Don't run this via patterns.js, it's a separate compilation.\n *\n * @module patterns/search/search\n * @author Web Development\n * @copyright City, University of London 2020\n */\n\nimport { find } from '../finder/funnelback';\nimport { reduceMotion } from '../../util';\nimport BestBets from './components/main/results/search__bestbets';\nimport OtherSites from './components/main/results/search__othersites';\nimport PropTypes from 'prop-types';\nimport Query from './components/main/query/search__query';\nimport React, { useEffect, useState } from 'react';\nimport scroll from 'zenscroll';\nimport TabResults from './components/main/results/search__results';\n\nconst oneSecond = 1000,\n    scrollDuration = reduceMotion() ? 0 : oneSecond,\n    screenOffsetRatio = 10;\n\n/**\n * Preserve the search state in the URL parameters.\n *\n * @param {string} currQuery The search query.\n * @param {integer} currStartRank The start rank.\n * @param {object[]} currFacets A map of facet meta labels to their values.\n * @param {*} facetLabels Array of facet definitions.\n */\nfunction replaceHistory(\n    currQuery,\n    currStartRank,\n    currCollection,\n    defaultCollection\n) {\n    if (window) {\n        const params = new URLSearchParams(window.location.search);\n\n        currQuery !== ''\n            ? params.set('query', currQuery)\n            : params.delete('query');\n\n        currStartRank !== 1\n            ? params.set('start_rank', currStartRank)\n            : params.delete('start_rank');\n\n        currCollection !== defaultCollection\n            ? params.set('collection', currCollection)\n            : params.delete('collection');\n\n        const hasParams = params.toString().length ? '?' : '';\n\n        window.history.replaceState(\n            {},\n            '',\n            `${window.location.pathname}${hasParams}${params.toString()}`\n        );\n    }\n}\n\n/**\n * Launch search.\n *\n * @param {object} props The JSON configuration file for search.\n * @return {object} The React component to render.\n */\nfunction Search(props) {\n    const params = new URLSearchParams(window.location.search);\n\n    /**\n     * initial state for the Funnelback query, taken from URL parameters and\n     * configuration\n     **/\n    const initialQuery = {\n        collection:\n            params.get('collection') ||\n            props.config.primary.collections[0].collection,\n        interacted: false,\n        misspelling: null,\n        numRanks: params.get('num_ranks') || props.config.primary.numRanks,\n        query: params.get('query') || '',\n        sortType: '',\n        startRank: params.get('start_rank') || 1,\n    };\n\n    /**\n     * Dummy, empty Funnelback response object for initial state.\n     */\n    const initialResponse = Object.freeze({\n        bestBets: [],\n        facets: [],\n        results: [],\n        spell: null,\n        summary: {\n            currEnd: 0,\n            currStart: 0,\n            numRanks: 0,\n            totalMatching: 0,\n        },\n    });\n\n    const initialResponses = {\n        primary: props.config.primary.collections.map((collection) => {\n            return {\n                label: collection.label,\n                collection: collection.collection,\n                placeholder: collection.placeholder,\n                response: initialResponse,\n                search: collection.search,\n                updating: false,\n                call: {\n                    cancel: () => {},\n                },\n            };\n        }),\n        finders: props.config.finders.map((finder) => {\n            return {\n                label: finder.label,\n                summariseAs: finder.summariseAs,\n                resultCard: finder.resultCard,\n                search: finder.search,\n                collection: finder.collection,\n                response: initialResponse,\n                updating: false,\n                call: {\n                    cancel: () => {},\n                },\n            };\n        }),\n        nonpublic: props.config.nonpublic.map((collection) => {\n            return {\n                label: collection.label,\n                collection: collection.collection,\n                response: initialResponse,\n                search: collection.search,\n                updating: false,\n                call: {\n                    cancel: () => {},\n                },\n            };\n        }),\n    };\n\n    // eslint-disable-next-line no-unused-vars\n    const [response, setResponse] = useState(0);\n\n    // State objects for the Funnelback query and response\n    const [query, setQuery] = useState(initialQuery);\n    const [fbResponses, setFbResponses] = useState(initialResponses);\n\n    // useEffect doesn't deep inspect objects, so we need an additional, plain\n    // state variable to indicate that the query state has changed and the\n    // component should render\n    // the value isn't important, it's just easy to toggle a bool back and forth\n    const [update, setUpdate] = useState(false);\n\n    // Retrieve Funnelback results\n    useEffect(() => {\n        // preserve the state\n        replaceHistory(\n            query.query,\n            query.startRank,\n            query.collection,\n            props.config.primary.collections[0].collection\n        );\n\n        if (query.query.length > 0) {\n            query.interacted &&\n                props.element.querySelector('.search__results') &&\n                scroll.center(\n                    props.element.querySelector('.search__results'),\n                    scrollDuration,\n                    -window.innerHeight / screenOffsetRatio\n                );\n\n            props.config.primary.collections.forEach((collection, i) => {\n                fbResponses.primary[i].call.cancel();\n\n                const [request, requestToken] = find(\n                        collection.collection,\n                        [],\n                        [],\n                        query.query,\n                        '',\n                        query.startRank,\n                        query.numRanks,\n                        []\n                    ),\n                    newResponses = fbResponses;\n\n                newResponses.primary[i].call = {\n                    cancel: () => {\n                        requestToken.cancel();\n                    },\n                };\n                newResponses.primary[i].updating = true;\n\n                setFbResponses(newResponses);\n                setResponse(Math.random());\n\n                request\n                    .then((data) => {\n                        const responses = fbResponses;\n\n                        responses.primary[i].response = data;\n                        responses.primary[i].updating = false;\n\n                        if (\n                            newResponses.primary[i].collection ===\n                                query.collection &&\n                            data.spell &&\n                            data.summary.totalMatching === 0\n                        ) {\n                            const newQueryText = data.spell.text\n                                    .split(/\\|/)[0]\n                                    .trim(),\n                                newQuery = query;\n\n                            newQuery.misspelling = query.query;\n                            newQuery.query = newQueryText;\n                            newQuery.startRank = 1;\n                            setQuery(newQuery);\n                            setUpdate(!update);\n                        }\n\n                        setFbResponses(responses);\n                        setResponse(Math.random());\n                    })\n                    .catch(() => {\n                        const responses = fbResponses;\n\n                        responses.primary[i].response = initialResponse;\n                        responses.primary[i].updating = false;\n\n                        setFbResponses(responses);\n                        setResponse(Math.random());\n                    });\n            });\n\n            props.config.finders.forEach((finder, i) => {\n                fbResponses.finders[i].call.cancel();\n\n                const [request, requestToken] = find(\n                        finder.collection,\n                        [],\n                        [],\n                        query.query,\n                        '',\n                        1,\n                        finder.numRanks,\n                        []\n                    ),\n                    newResponses = fbResponses;\n\n                newResponses.finders[i].call = {\n                    cancel: () => {\n                        requestToken.cancel();\n                    },\n                };\n                newResponses.finders[i].updating = true;\n\n                setFbResponses(newResponses);\n                setResponse(Math.random());\n\n                request\n                    .then((data) => {\n                        const responses = fbResponses;\n\n                        responses.finders[i].response = data;\n                        responses.finders[i].updating = false;\n\n                        setFbResponses(responses);\n                        setResponse(Math.random());\n                    })\n                    .then(() => {\n                        props.element.querySelector('.tabs__links') &&\n                            query.interacted &&\n                            scroll.center(\n                                props.element.querySelector('.tabs__links'),\n                                scrollDuration\n                            );\n                    })\n                    .catch(() => {\n                        const responses = fbResponses;\n\n                        responses.finders[i].response = initialResponse;\n                        responses.finders[i].updating = false;\n\n                        setFbResponses(responses);\n                        setResponse(Math.random());\n                    });\n            });\n\n            props.config.nonpublic.forEach((nonpublic, i) => {\n                fbResponses.nonpublic[i].call.cancel();\n\n                const [request, requestToken] = find(\n                        nonpublic.collection,\n                        [],\n                        [],\n                        query.query,\n                        '',\n                        1,\n                        0,\n                        []\n                    ),\n                    newResponses = fbResponses;\n\n                newResponses.nonpublic[i].call = {\n                    cancel: () => {\n                        requestToken.cancel();\n                    },\n                };\n                newResponses.nonpublic[i].updating = true;\n\n                setFbResponses(newResponses);\n                setResponse(Math.random());\n\n                request\n                    .then((data) => {\n                        const responses = fbResponses;\n\n                        responses.nonpublic[i].response = data;\n                        responses.nonpublic[i].updating = false;\n\n                        setFbResponses(responses);\n                        setResponse(Math.random());\n                    })\n                    .catch(() => {\n                        const responses = fbResponses;\n\n                        responses.nonpublic[i].response = initialResponse;\n                        responses.nonpublic[i].updating = false;\n\n                        setFbResponses(responses);\n                        setResponse(Math.random());\n                    });\n            });\n        } else {\n            setFbResponses(initialResponses);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [update]);\n\n    // update props so child components can update the query\n    const updater = {\n        query: (newQuery) => setQuery(newQuery),\n        results: (newUpdate) => setUpdate(newUpdate),\n        updateState: update,\n    };\n\n    const queryElement = (\n        <Query\n            config={props.config}\n            query={query}\n            update={updater}\n            primary={fbResponses.primary.filter(\n                (collection) => collection.collection === query.collection\n            )}\n            updating={fbResponses.primary[0].updating}\n        />\n    );\n\n    const otherSites = query.query && !fbResponses.primary[0].updating && (\n        <OtherSites\n            query={query}\n            collections={fbResponses.primary.filter(\n                (collection) => collection.collection !== query.collection\n            )}\n            nonpublic={fbResponses.nonpublic}\n        />\n    );\n\n    const bestBets = query.query &&\n        !fbResponses.primary[0].updating &&\n        fbResponses.primary[0].response &&\n        fbResponses.primary[0].response.bestBets && (\n            <BestBets bestbets={fbResponses.primary[0].response.bestBets} />\n        );\n\n    const results = query.query && (\n        <TabResults\n            config={props.config}\n            query={query}\n            update={updater}\n            primary={fbResponses.primary.filter(\n                (collection) => collection.collection === query.collection\n            )}\n            finders={fbResponses.finders}\n            element={props.element}\n        />\n    );\n\n    return (\n        <form\n            className=\"search-form\"\n            onSubmit={(e) => {\n                e.preventDefault();\n            }}\n        >\n            {queryElement}\n            {bestBets}\n            {results}\n            {otherSites}\n        </form>\n    );\n}\n\nSearch.propTypes = {\n    config: PropTypes.object,\n    element: PropTypes.object,\n};\n\nexport default Search;\n","/**\n * @module patterns/search/components/search--inline__clear\n * @author Web Development\n * @copyright City, University of London 2020\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Clear input button.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction InlineSearch__Clear(props) {\n    return (\n        <button\n            className=\"search--inline__clear\"\n            type=\"button\"\n            onClick={() => {\n                props.clear();\n            }}\n        >\n            <span className=\"fad fa-fw fa-times-circle icon \" />\n            <span className=\"search--inline__clear__text\">Clear query</span>\n        </button>\n    );\n}\n\nInlineSearch__Clear.propTypes = {\n    clear: PropTypes.func,\n};\n\nexport default InlineSearch__Clear;\n","/**\n * @module patterns/search/components/search--inline__query\n * @author Web Development\n * @copyright City, University of London 2020\n */\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Clear from './search--inline__clear';\n\nconst escapeKey = 'Escape';\n\n/**\n * Search input field and autocomplete.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction InlineSearch__Query(props) {\n    // save what they're typing\n    const [partialQuery, setPartialQuery] = useState(props.query.query);\n    // ref for the input field, so we can .focus() it\n    const stringLength = 16,\n        stringOffset = -4,\n        [inputId] = useState(\n            'search--inline--' +\n                props.query.collection +\n                '--' +\n                Math.random().toString(stringLength).slice(stringOffset)\n        );\n\n    useEffect(() => {\n        setPartialQuery(props.query.query);\n    }, [props.query.query, props.updating]);\n\n    let textInput = null;\n    function focusInput() {\n        textInput.focus();\n    }\n\n    // on clear, make a default request for results\n    const clearQuery = () => {\n        setPartialQuery('');\n        focusInput();\n\n        const newQuery = props.query;\n\n        newQuery.query = '';\n        newQuery.startRank = 1;\n\n        props.update.query(newQuery);\n        props.update.results(!props.update.updateState);\n    };\n\n    const fetchSuggestions = (partialQuery) => {\n        const newQuery = props.query;\n\n        newQuery.query = partialQuery;\n        newQuery.startRank = 1;\n\n        props.update.query(newQuery);\n        props.update.results(!props.update.updateState);\n    };\n\n    const clear = partialQuery && (\n        <Clear\n            clear={() => {\n                clearQuery();\n            }}\n        />\n    );\n\n    const input = (\n        <div className=\"search--inline__query__input\">\n            <div className=\"search--inline__query__icon--wrapper\">\n                <span\n                    className=\"search--inline__icon fal fa-search icon\"\n                    aria-hidden=\"true\"\n                ></span>\n            </div>\n            <label className=\"sr-only\" htmlFor={inputId}>\n                Search\n            </label>\n            <input\n                autoComplete=\"off\"\n                id={inputId}\n                name=\"query\"\n                placeholder={props.config.placeholder}\n                ref={(input) => {\n                    textInput = input;\n                }}\n                type=\"text\"\n                required={true}\n                value={partialQuery}\n                onKeyDown={(e) => {\n                    switch (e.key) {\n                        case escapeKey:\n                            clearQuery();\n                            break;\n                        default:\n                            break;\n                    }\n                }}\n                onChange={(e) => {\n                    setPartialQuery(e.target.value);\n                    fetchSuggestions(e.target.value);\n                }}\n            />\n            {clear}\n        </div>\n    );\n\n    return (\n        <fieldset className=\"search--inline__query\">\n            <div>\n                {input}\n                <button type=\"submit\" className=\"search--inline__query__submit\">\n                    <span className=\"search--inline__query__submit__content\">\n                        <span\n                            className=\"fas fa-search search--inline__query__submit__icon\"\n                            aria-hidden=\"true\"\n                        />{' '}\n                        <span className=\"search--inline__query__submit__text\">\n                            Search\n                        </span>\n                    </span>\n                </button>\n            </div>\n        </fieldset>\n    );\n}\n\nInlineSearch__Query.propTypes = {\n    config: PropTypes.object,\n    query: PropTypes.object,\n    update: PropTypes.object,\n    updating: PropTypes.bool,\n};\n\nexport default InlineSearch__Query;\n","/**\n * @module patterns/search/components/search--inline__suggestions\n * @author Web Development\n * @copyright City, University of London 2020\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction highlightQueryTerm(suggestion, partialQuery) {\n    return (\n        <>\n            <span>\n                <span className=\"sr-only\">{suggestion}</span>\n                <span aria-hidden=\"true\">\n                    <span className=\"search--inline__suggestion\">\n                        {suggestion.slice(\n                            suggestion.indexOf(partialQuery.toLowerCase()),\n                            partialQuery.length\n                        )}\n                    </span>\n                    {suggestion.slice(\n                        suggestion.indexOf(partialQuery.toLowerCase()) +\n                            partialQuery.length\n                    )}\n                </span>\n            </span>\n        </>\n    );\n}\n\n/**\n * Suggestions.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction InlineSearch__Suggestions(props) {\n    return (\n        <div className=\"search--inline__suggestions\">\n            <h3>Suggestions</h3>\n            <ul>\n                {props.suggestions.map((suggestion, i) => {\n                    const urlString = suggestion.replace(/\\s+/g, '+'),\n                        highlighted = highlightQueryTerm(\n                            suggestion,\n                            props.query.query\n                        );\n\n                    return (\n                        <li key={i}>\n                            <a href={`/search?query=${urlString}`}>\n                                {highlighted}\n                            </a>\n                        </li>\n                    );\n                })}\n            </ul>\n        </div>\n    );\n}\n\nInlineSearch__Suggestions.propTypes = {\n    query: PropTypes.object,\n    suggestions: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default InlineSearch__Suggestions;\n","/**\n * @module patterns/search/components/search--inline__topresults\n * @author Web Development\n * @copyright City, University of London 2020\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// FIXME for go live\nconst siteUrl = 'city.ac.uk';\n\nfunction genericResult(result, type) {\n    const thumbnail = result.metaData.thumbnail && (\n            <div className=\"card__thumbnail\">\n                <picture>\n                    <img src={result.metaData.thumbnail} alt=\"\" />\n                </picture>\n            </div>\n        ),\n        label = type && <p className=\"card__label\">{type}</p>,\n        external = result.liveUrl.indexOf(siteUrl) < 0 && (\n            <>\n                {' '}\n                <span\n                    className=\"fas fa-external-link icon\"\n                    aria-label=\"(external link)\"\n                ></span>\n            </>\n        );\n\n    return (\n        <li className=\"card--search\" key={result.docNum}>\n            <a\n                href={result.clickTrackingUrl}\n                className=\"card__details card__anchor\"\n            >\n                {thumbnail}\n                <div className=\"card__details__text\">\n                    {label}\n                    <h4 className=\"card__heading\">\n                        {result.title}\n                        {external}\n                    </h4>\n                    <p className=\"card__description\">{result.metaData.c}</p>\n                    <p className=\"card__url\">{result.liveUrl}</p>\n                </div>\n            </a>\n        </li>\n    );\n}\n\n/**\n * Suggestions.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction InlineSearch__TopResults(props) {\n    return (\n        <div className=\"search--inline__topresults\">\n            <h3>Top results</h3>\n            <ul>\n                {props.results.map((result) => {\n                    switch (result.collection) {\n                        case 'web2020-residentialhalls':\n                            return genericResult(result, 'Residential hall');\n                        case 'web2020-business-impact':\n                            return genericResult(result, 'Case study');\n                        case 'web2020-research':\n                            return genericResult(result, 'Case study');\n                        case 'web2020-centres':\n                            return genericResult(result, 'Research centre');\n                        case 'web2020-courses':\n                            return genericResult(result, 'Course');\n                        case 'web2020-events':\n                            return genericResult(result, 'Event');\n                        case 'web2020-facilities':\n                            return genericResult(result, 'Facility');\n                        case 'web2020-locations':\n                            return genericResult(result, 'Location');\n                        case 'web2020-pathways':\n                            return genericResult(result, 'Career pathway');\n                        case 'web2020-funding':\n                            return genericResult(result, 'Funding');\n                        case 'web2020-news':\n                            return genericResult(result, 'News');\n                        case 'web2020-profiles':\n                            return genericResult(result, 'Profile');\n                        default:\n                            return genericResult(result, null);\n                    }\n                })}\n            </ul>\n        </div>\n    );\n}\n\nInlineSearch__TopResults.propTypes = {\n    query: PropTypes.object,\n    results: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default InlineSearch__TopResults;\n","/**\n * Inline search form.\n *\n * Don't run this via patterns.js, it's a separate compilation.\n *\n * @module patterns/search/search--inline\n * @author Web Development\n * @copyright City, University of London 2020\n */\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { find, suggest } from '../finder/funnelback';\nimport createFocusTrap from 'focus-trap';\nimport Query from './components/inline/search--inline__query';\nimport Suggestions from './components/inline/search--inline__suggestions';\nimport TopResults from './components/inline/search--inline__topresults';\n\nlet modal = null;\nconst getmodal = () => modal;\n\n/**\n * Launch the inline search.\n *\n * @param {object} props The JSON configuration file for search.\n * @return {object} The React component to render.\n */\nfunction InlineSearch(props) {\n    const [display, setDisplay] = useState(false);\n    const [focusTrap, setFocusTrap] = useState({});\n\n    const maximumSuggestions = 10;\n\n    const initialQuery = {\n        collection: props.config.collection,\n        misspelling: null,\n        numRanks: props.config.numRanks,\n        query: '',\n        startRank: 1,\n        facets: [],\n        fixedFacets: [],\n        fixedParameters: [],\n    };\n\n    /**\n     * Dummy, empty Funnelback response object for initial state.\n     */\n    const initialResponse = Object.freeze({\n        bestBets: [],\n        facets: [],\n        results: [],\n        spell: null,\n        summary: {\n            currEnd: 0,\n            currStart: 0,\n            numRanks: 0,\n            totalMatching: 0,\n        },\n    });\n\n    const initialSuggestions = [];\n\n    // State objects for the Funnelback query and response\n    const [query, setQuery] = useState(initialQuery);\n    const [funnelbackResponse, setResponse] = useState(initialResponse);\n    const [suggestions, setSuggestions] = useState(initialSuggestions);\n\n    // Boolean to indicate when a query is in progress\n    const [updating, setUpdating] = useState(false);\n\n    // Boolean to indicate when a query is in progress\n    const [suggestionsUpdating, setSuggestionsUpdating] = useState(false);\n\n    // Request token from the Funnelback request object, so we can cancel if\n    // another request is triggered by the user\n    const [call, setCall] = useState({\n        cancel: () => {},\n    });\n\n    // useEffect doesn't deep inspect objects, so we need an additional, plain\n    // state variable to indicate that the query state has changed and the\n    // component should render\n    // the value isn't important, it's just easy to toggle a bool back and forth\n    const [update, setUpdate] = useState(false);\n\n    // Request token from the Funnelback request object, so we can cancel if\n    // another request is triggered by the user\n    const [suggestionsCall, setSuggestionsCall] = useState({\n        cancel: () => {},\n    });\n\n    // Retrieve Funnelback results\n    useEffect(() => {\n        // indicate a request is in progress\n        setUpdating(true);\n        setSuggestionsUpdating(true);\n\n        /**\n         * cancel any requests already in progress\n         *\n         * async requests can return out of order\n         */\n        call.cancel();\n        suggestionsCall.cancel();\n\n        // make new, asynchronous requests to Funnelback\n        const [request, requestToken] = find(\n            query.collection,\n            query.fixedFacets,\n            query.fixedParameters,\n            query.query,\n            query.sortType,\n            query.startRank,\n            query.numRanks,\n            query.facets\n        );\n\n        const [suggestionsRequest, suggestionsRequestToken] = suggest(\n            query.collection,\n            query.query\n        );\n\n        // save the requestTokens\n        setCall({\n            cancel: () => {\n                requestToken.cancel();\n            },\n        });\n\n        setSuggestionsCall({\n            cancel: () => {\n                suggestionsRequestToken.cancel();\n            },\n        });\n\n        // when the response from Funnelback arrives,\n        // update the results and display them\n        request\n            .then((data) => {\n                setResponse(data);\n                setUpdating(false);\n            })\n            .catch(() => {\n                setResponse(initialResponse);\n            });\n\n        suggestionsRequest\n            .then((data) => {\n                if (data) {\n                    setSuggestions(data);\n                    setSuggestionsUpdating(false);\n                }\n            })\n            .catch(() => {\n                setSuggestions(initialSuggestions);\n            });\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [update]);\n\n    // update props so child components can update the query\n    const updater = {\n        query: (newQuery) => setQuery(newQuery),\n        results: (newUpdate) => setUpdate(newUpdate),\n        updateState: update,\n    };\n\n    const updateIndicator = (what) => (\n        <p\n            className={`search--inline__results__updating search--inline__results__updating--${what.replace(\n                / /g,\n                ''\n            )}`}\n            aria-live=\"polite\"\n        >\n            <span className=\"fas fa-spinner fa-pulse icon\" aria-hidden=\"true\" />{' '}\n            <span>Updating {what}…</span>\n        </p>\n    );\n\n    // trap tab focus when the filters are open\n    useEffect(() => {\n        if (!focusTrap.activate) {\n            setFocusTrap(\n                createFocusTrap(getmodal(), {\n                    initialFocus: getmodal().querySelector('input'),\n                    onDeactivate: () => setDisplay(false),\n                    clickOutsideDeactivates: true,\n                })\n            );\n        }\n\n        if (display) {\n            focusTrap.activate && focusTrap.activate();\n        } else {\n            focusTrap.deactivate && focusTrap.deactivate();\n        }\n    }, [display, focusTrap]);\n\n    const iconClass = `global-header__search__icon far fa-fw ${\n            display ? 'fa-times' : 'fa-search'\n        }`,\n        veil = display && <div className=\"veil--search\" data-on=\"true\"></div>,\n        toggleButton = (\n            <button\n                className=\"global-header__search__button\"\n                type=\"button\"\n                id=\"search\"\n                aria-expanded={display}\n                onClick={() => {\n                    setDisplay(!display);\n                }}\n            >\n                <div className=\"global-header__search__wrapper\">\n                    <span className=\"global-header__search__text\">\n                        {display ? 'Close' : 'Search'}\n                    </span>\n                    <span className={iconClass} aria-hidden=\"true\"></span>\n                </div>\n            </button>\n        ),\n        inputField = (\n            <Query\n                config={props.config}\n                query={query}\n                update={updater}\n                updating={updating}\n            />\n        ),\n        suggestionsList = suggestionsUpdating ? (\n            updateIndicator('suggestions')\n        ) : suggestions && suggestions.length > 0 ? (\n            <Suggestions\n                query={query}\n                suggestions={suggestions.slice(0, maximumSuggestions)}\n            />\n        ) : null,\n        topResults = updating ? (\n            updateIndicator('top results')\n        ) : funnelbackResponse && funnelbackResponse.results.length > 0 ? (\n            <TopResults query={query} results={funnelbackResponse.results} />\n        ) : null;\n\n    return (\n        <>\n            {toggleButton}\n            <div\n                className=\"global-header__search__modal\"\n                ref={(modalRef) => (modal = modalRef)}\n            >\n                <div className=\"global-header__search__modal__header\">\n                    <div className=\"header-logo header-logo--city\">\n                        <div className=\"header-logo__responsive\">\n                            <a href=\"https://city.ac.uk\" rel=\"home\">\n                                <img\n                                    className=\"logo\"\n                                    src=\"https://www.city.ac.uk/__data/assets/file/0006/442248/city-university-london-responsive-white.svg\"\n                                    width=\"180\"\n                                    alt=\"City, University of London\"\n                                />\n                            </a>\n                        </div>\n                    </div>\n                    {toggleButton}\n                </div>\n                <div className=\"global-header__search__modal__body\">\n                    <h2>What are you looking for?</h2>\n                    <form action=\"/search\" method=\"get\">\n                        {inputField}\n                    </form>\n                    <div className=\"global-header__search__modal__body__results\">\n                        {suggestionsList}\n                        {topResults}\n                    </div>\n                </div>\n            </div>\n            {veil}\n        </>\n    );\n}\n\nInlineSearch.propTypes = {\n    config: PropTypes.object,\n    element: PropTypes.object,\n};\n\nexport default InlineSearch;\n","/**\n * Search entry\n *\n * @author Web Development\n * @copyright City, University of London 2020\n */\n\nimport React from 'react';\nimport { render } from 'react-dom';\nimport Search from './patterns/search/search';\nimport InlineSearch from './patterns/search/search--inline';\nimport { finderConfig } from './patterns/finder/funnelback';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    if (/(Trident|MSIE)/.test(navigator.userAgent)) {\n        return;\n    } else {\n        const search = document.querySelector('.wrapper--search'),\n            inlineSearch = document.querySelector('.global-header__search');\n\n        inlineSearch &&\n            finderConfig(inlineSearch.dataset.config).then((config) => {\n                render(\n                    <InlineSearch config={config} element={inlineSearch} />,\n                    inlineSearch\n                );\n            });\n\n        search &&\n            finderConfig(search.dataset.config).then((config) => {\n                render(<Search config={config} element={search} />, search);\n            });\n    }\n});\n","/**\n * @module patterns/finder/components/finder__pagination\n * @author Web Development\n * @copyright City, University of London 2019\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Renders standard pagination controls patttern for the results.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction Finder__Pagination(props) {\n    const numberOfPages = Math.ceil(props.totalMatching / props.numRanks),\n        currentPage = Math.ceil(props.currStart / props.numRanks),\n        pages = [];\n\n    const changePage = (pageNumber) => {\n        const newStartRank = 1 + (pageNumber - 1) * props.numRanks,\n            newQuery = props.query;\n\n        newQuery.startRank = newStartRank;\n        newQuery.misspelling = null;\n        newQuery.interacted = true;\n\n        props.update.query(newQuery);\n        props.update.results(!props.update.updateState);\n    };\n\n    pages.push(\n        <button\n            className=\"pagination__controls__button--prev\"\n            key=\"prev\"\n            type=\"button\"\n            disabled={currentPage === 1 ? true : false}\n            onClick={() => {\n                changePage(currentPage - 1);\n            }}\n        >\n            <span>Previous page</span>\n        </button>\n    );\n\n    for (let page = 1; page <= numberOfPages; page++) {\n        let className;\n        switch (page - numberOfPages) {\n            case 0:\n                className =\n                    'pagination__controls__element pagination__controls__button pagination__controls__button--last';\n                break;\n            case -1:\n                className =\n                    'pagination__controls__element pagination__controls__button pagination__controls__button--penultimate';\n                break;\n            default:\n                className =\n                    'pagination__controls__element pagination__controls__button';\n        }\n\n        pages.push(\n            <button\n                aria-current={page === currentPage ? 'page' : null}\n                aria-expanded={page === currentPage ? true : false}\n                aria-label={`Open page ${page}`}\n                className={className}\n                data-page={page}\n                data-proximity={Math.abs(page - currentPage)}\n                disabled={page === currentPage ? true : false}\n                key={page}\n                type=\"button\"\n                onClick={() => {\n                    changePage(page);\n                }}\n            >\n                <span>{page}</span>\n            </button>\n        );\n\n        if (page === 1) {\n            pages.push(\n                <span\n                    key=\"firstEllipsis\"\n                    className=\"pagination__controls__element pagination__controls__ellipsis pagination__controls__ellipsis--first\"\n                >\n                    <span>…</span>\n                </span>\n            );\n        } else if (page === numberOfPages - 1) {\n            pages.push(\n                <span\n                    key=\"lastEllipsis\"\n                    className=\"pagination__controls__element pagination__controls__ellipsis pagination__controls__ellipsis--last\"\n                >\n                    <span>…</span>\n                </span>\n            );\n        }\n    }\n\n    pages.push(\n        <button\n            className=\"pagination__controls__button--next\"\n            key=\"next\"\n            type=\"button\"\n            disabled={currentPage === numberOfPages ? true : false}\n            onClick={() => {\n                changePage(currentPage + 1);\n            }}\n        >\n            <span>Next page</span>\n        </button>\n    );\n\n    return (\n        <div className=\"pagination__wrapper\">\n            <nav\n                className=\"pagination__controls\"\n                data-pagecount={numberOfPages}\n            >\n                {pages}\n            </nav>\n        </div>\n    );\n}\n\nFinder__Pagination.propTypes = {\n    currStart: PropTypes.number,\n    query: PropTypes.object,\n    numRanks: PropTypes.number,\n    totalMatching: PropTypes.number,\n    update: PropTypes.object,\n};\n\nexport default Finder__Pagination;\n","/**\n * Functions for making requests to Funnelback\n *\n * @module funnelback\n * @author Web Development\n * @copyright City, University of London 2019\n */\n\nimport axios from 'axios';\nimport https from 'https';\nimport { axiosRequest } from '../../util.js';\n\n/**\n * LAUNCH: change web2020.city.ac.uk to www.city.ac.uk\n */\nconst baseUrl = 'https://www.city.ac.uk/web-services',\n    findRootUrl = '/funnelback-find',\n    suggestRootUrl = '/funnelback-suggest',\n    maximumSuggestions = 100,\n    timeout = 30000;\n\n/**\n * Funnelback search query.\n *\n * @param {string} collection The Funnelback collection to query.\n * @param {string} [query] The query string.\n * @param {string} [sortType] The field to sort by.\n * @param {integer} startRank The first result to return.\n * @param {integer} numRank The number of results to return.\n * @param {object} [facets] A map of facets to query strings.\n * @return {Promise} - A promise of search results.\n */\nexport function find(\n    collection,\n    fixedFacets,\n    fixedParameters,\n    query,\n    sortType,\n    startRank,\n    numRank,\n    facets,\n    events\n) {\n    const fixedParams = {};\n    fixedParameters.forEach((param) => {\n        fixedParams[`${param.name}`] = param.value;\n    });\n\n    const fixedFacetParams = {};\n    fixedFacets.forEach((facet) => {\n        fixedFacetParams[`meta_${facet.meta}_sand`] = facet.value;\n    });\n\n    const facetParams = {},\n        facetKeys = Object.keys(facets);\n\n    facetKeys.forEach((key) => (facetParams[`meta_${key}_sand`] = facets[key]));\n\n    const CancelToken = axios.CancelToken,\n        call = CancelToken.source(),\n        config = {\n            baseURL: baseUrl,\n            cancelToken: call.token,\n            httpsAgent: new https.Agent({ keepAlive: true }),\n            url: findRootUrl,\n            timeout: timeout,\n            params: {\n                ...fixedParams,\n                ...fixedFacetParams,\n                ...facetParams,\n                collection: collection,\n                num_ranks: numRank,\n                query: query,\n                sort: sortType || '',\n                start_rank: startRank,\n                events: events || '',\n            },\n        };\n\n    return [axiosRequest(config), call];\n}\n\n/**\n * Funnelback suggestion query.\n *\n * @param {string} collection The Funnelback collection to query.\n * @param {string} partialQuery The string to make suggestions for.\n * @return {Promise} - A promise of an array of suggestion strings.\n */\nexport function suggest(collection, partialQuery) {\n    const CancelToken = axios.CancelToken,\n        call = CancelToken.source(),\n        config = {\n            baseURL: baseUrl,\n            cancelToken: call.token,\n            url: suggestRootUrl,\n            timeout: timeout,\n            params: {\n                collection: collection,\n                partial_query: partialQuery,\n                show: maximumSuggestions,\n            },\n        };\n\n    return [axiosRequest(config), call];\n}\n\n/**\n * Finder configuration.\n *\n * @param {string} url The Finder configuration file.\n * @return {Promise} - A promise of  configuration object.\n */\nexport function finderConfig(url) {\n    const config = {\n        timeout: timeout,\n        url: url,\n    };\n\n    return axiosRequest(config);\n}\n"],"sourceRoot":""}