{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/patterns/finder/components/filters/finder__sort.js","webpack:///./src/patterns/finder/components/filters/finder__reset.js","webpack:///./src/util.js","webpack:///./src/patterns/destination-leavers-higher-ed/components/filters/select__filter.js","webpack:///./src/patterns/destination-leavers-higher-ed/components/filters/filters.js","webpack:///./src/patterns/destination-leavers-higher-ed/components/filters/mobile__select-filter.js","webpack:///./src/patterns/destination-leavers-higher-ed/components/filters/filtersmobile.js","webpack:///./src/patterns/destination-leavers-higher-ed/components/results/chart.js","webpack:///./src/patterns/destination-leavers-higher-ed/components/results/companys.js","webpack:///./src/patterns/destination-leavers-higher-ed/components/results/institutions.js","webpack:///./src/patterns/destination-leavers-higher-ed/components/results/job.js","webpack:///./src/patterns/destination-leavers-higher-ed/components/results/salary.js","webpack:///./src/patterns/destination-leavers-higher-ed/components/results/content.js","webpack:///./src/patterns/destination-leavers-higher-ed/components/results/content__container.js","webpack:///./src/patterns/destination-leavers-higher-ed/components/results/results.js","webpack:///./src/patterns/destination-leavers-higher-ed/destinationHE.js","webpack:///./src/destination-leavers-higher-ed.js","webpack:///./src/patterns/finder/components/filters/finder__checkbox.js","webpack:///./src/patterns/finder/components/filters/finder__tag.js","webpack:///./src/patterns/finder/funnelback.js"],"names":["randomNumber","Math","validSorts","props","sortType","Object","className","htmlFor","name","id","onChange","newQuery","setSort","e","value","type","Finder__Sort","config","PropTypes","query","update","object","onClick","Finder__Reset","clear","resetSort","bool","s","r","matchFn","removePartials","elem","window","parameters","parameterString","parameter","o","key","nonInteractionHit","children","screen","array","i","obj","a","ua","msie","parseInt","rv","edge","el","document","attributes","att","response","axios","gaEvent","dateTime","date","lastDigit","day","daySuffix","partialMatchFn","fullMatchFn","currentValue","allFacets","responseFacets","data","hiddenFacets","facet","setFacet","responseFacetDetails","responseFacetValue","clearFiltersDesktop","clearFiltersMobile","sort","aria-hidden","setFacets","facetMap","dependencyMet","responseFacet","funnelbackFacet","dependencies","candidate","useState","useEffect","focusTrap","setFocusTrap","createFocusTrap","initialFocus","getFilters","onDeactivate","clickOutsideDeactivates","disableBodyScroll","enableBodyScroll","totalMatchingMessage","filtersCount","toggle","display","setDisplay","data-filters-applied","ref","filters","href","disabled","updating","aria-live","row","parseFloat","firstSegmentFull","secondSegmentFull","sum","acc","arcAcc","valueElements","arc","largeAngle","x0","y0","x1","y1","d","fill","strokeWidth","stroke","legend","Number","val","text","randomNum","height","width","cx","cy","preserveAspectRatio","viewBox","transform","dangerouslySetInnerHTML","__html","company","companys","institutions","jobT","salary","charts","JSON","count","k","c","chartsLength","title","chartId","data-length","details","resultsClass","results","start","resultsContent","g","param","params","URLSearchParams","initialQuery","collection","facets","getFacetParams","fixedFacets","misspelling","numRanks","startRank","initialResponse","freeze","bestBets","spell","summary","currEnd","currStart","totalMatching","cancel","currQuery","currStartRank","currSort","facetLabels","currFacets","hasParams","replaceHistory","setUpdating","scroll","call","find","setCall","requestToken","request","setResponse","newQueryText","setQuery","setUpdate","updater","updateState","onSubmit","summariseAs","Finder__Select","Finder__Filters","func","Finder__FiltersMobile","Finder__Chart","number","Company__Container","string","Institutions__Container","Jobs__Container","Salary__Container","Finder__Results__Generic","Finder__Results__Card","Finder__Results","scrollDuration","reduceMotion","screenOffsetRatio","DestinationLeaversHE","element","test","navigator","destinations","Array","from","finderConfig","destination","render","toggleChecked","toggleFacet","checked","t","Finder__Checkbox","Finder__Tag","fixedParams","fixedParameters","fixedFacetParams","facetParams","facetKeys","cancelToken","httpsAgent","https","keepAlive","events","axiosRequest","show","url","baseUrl","findRootUrl","suggestRootUrl","maximumSuggestions","timeout"],"mappings":"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","file":"destination-leavers-higher-ed.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t5: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([239,1,0,4,3,2]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/**\n * @module patterns/finder/components/finder__sort\n * @author Web Development\n * @copyright City, University of London 2020\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Component to change the sort order of the query.\n *\n * @param {object} props React props.\n * @returns {object} - React component.\n */\nfunction Finder__Sort(props) {\n    const stringLength = 16,\n        stringOffset = -4,\n        randomNumber = Math.random().toString(stringLength).slice(stringOffset);\n\n    const setSort = (type) => {\n        const newQuery = props.query;\n\n        newQuery.sortType = type;\n        newQuery.startRank = 1;\n        newQuery.misspelling = null;\n        newQuery.interacted = true;\n\n        props.update.query(newQuery);\n        props.update.results(!props.update.updateState);\n    };\n\n    const validSorts = props.config.sort.filter((sortType) =>\n        sortType.type === ''\n            ? props.query.query !== '' ||\n              Object.keys(props.query.facets).length > 0 ||\n              props.query.sortType === ''\n                ? true\n                : false\n            : true\n    );\n\n    return validSorts.length > 1 ? (\n        <div\n            className={`finder__select--sort finder__select${\n                props.query.sortType !== props.config.sort[0].type\n                    ? ' finder__select--selected'\n                    : ''\n            }`}\n        >\n            <label\n                className=\"finder__select__overline\"\n                htmlFor={`sort--${randomNumber}`}\n            >\n                Sort by\n            </label>\n            <select\n                name=\"sort\"\n                id={`sort--${randomNumber}`}\n                onChange={(e) => setSort(e.target.value)}\n                value={props.query.sortType}\n            >\n                {validSorts.map((sortType, i) => {\n                    return (\n                        <option key={i} value={sortType.type}>\n                            {sortType.label}\n                        </option>\n                    );\n                })}\n            </select>\n        </div>\n    ) : null;\n}\n\nFinder__Sort.propTypes = {\n    config: PropTypes.object,\n    query: PropTypes.object,\n    update: PropTypes.object,\n};\n\nexport default Finder__Sort;\n","/**\n * @module patterns/finder/components/filters/finder__reset\n * @author Web Development\n * @copyright City, University of London 2019\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Clear input button.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction Finder__Reset(props) {\n    return (\n        <button\n            className=\"finder__reset\"\n            type=\"button\"\n            onClick={() => {\n                props.clear(props.resetSort);\n            }}\n        >\n            <span className=\"far fa-fw fa-times icon\" />\n            <span className=\"finder__reset__text\">Reset</span>\n        </button>\n    );\n}\n\nFinder__Reset.propTypes = {\n    clear: PropTypes.func,\n    resetSort: PropTypes.bool,\n};\n\nexport default Finder__Reset;\n","/**\n * Useful utility functions\n *\n * @module util\n * @author Web Development\n * @copyright City, University of London 2018-2020\n */\n\nimport axios from 'axios';\nimport React from 'react';\n\n/**\n * Turns string boolean into real boolean.\n *\n * @param {string} s - A string that may be 'true'.\n * @returns {boolean} True if 'true'.\n */\nexport function toBool(s) {\n    return s === 'true' ? true : false;\n}\n\nconst partialMatchFn = (m) => (s) => s.indexOf(m) < 0,\n    fullMatchFn = (m) => (s) => s !== m;\n\n/**\n * Remove a class name from an HTML element.\n *\n * @param {HTMLElement} elem - An HTML element.\n * @param {string} className - A string representing the class to remove.\n * @param {boolean} [removePartials] - If true, remove partially matching classes.\n */\nexport function removeClass(elem, className, removePartials) {\n    const matchFn = removePartials\n        ? partialMatchFn(className)\n        : fullMatchFn(className);\n    elem.className = elem.className\n        .split(/\\s+/)\n        .filter((s) => matchFn(s))\n        .join(' ');\n}\n\n/**\n * Detect whether reduced motion is enabled.\n *\n * If it is, you should shortcut animations, disable autoplay elements, avoid\n * smooth scrolling in favour of jump scrolling, etc.\n *\n * Currently unsupported by Chrome, but works in Safari and Firefox.\n *\n * @returns {boolean} Boolean indicating that the reduce motion media query matches.\n */\nexport function reduceMotion() {\n    const reducedMotionQuery = window.matchMedia(\n        '(prefers-reduced-motion: reduce)'\n    );\n    return reducedMotionQuery.matches ? true : false;\n}\n\n/**\n * Predicate testing whether an element is currently visible, as opposed to\n * displayed: none; or similar. Doesn't necessarily mean it's visible in the\n * window.\n *\n * @param {HTMLElement} elem - An HTML element.\n * @returns {boolean} - Is it visible?\n */\nexport function isVisible(elem) {\n    return elem.offsetHeight !== 0 && elem.offsetWidth !== 0 ? true : false;\n}\n\n/**\n * Predicate testing whether an element is positioned in the window.\n *\n *\n * @param {HTMLElement} elem - An HTML element.\n * @returns {boolean} - Is it onscreen?\n */\nexport function verticallyInWindow(elem) {\n    return elem.getBoundingClientRect().top >= 0 &&\n        elem.getBoundingClientRect().top <= window.innerHeight\n        ? true\n        : false;\n}\n\n/**\n * Turn a query string into an object.\n *\n * @param {string} parameterString - An HTML query string.\n * @returns {object} An object containing the parameters.\n */\nexport function parametersToObject(parameterString) {\n    const parameters = {};\n    parameterString\n        .substr(1)\n        .split('&')\n        .forEach((parameter) => {\n            const [k, v] = parameter.split('=');\n            parameters[k] = v;\n        });\n    return parameters;\n}\n\n/**\n * Turn an object into a query string.\n *\n * @param {object} parameterObj - An object containing the parameters and their values.\n * @returns {string} A string of the parameters.\n */\nexport function objectToParameters(parameterObj) {\n    if (Object.keys(parameterObj).length > 0) {\n        let parameters = '?';\n        for (const key in parameterObj) {\n            parameters.length !== 1 && (parameters += '&');\n            parameters += key + '=' + parameterObj[key];\n        }\n        return parameters;\n    } else {\n        return '';\n    }\n}\n\n/**\n * Track a Google Analytics event.\n *\n * @param {string} event - The event key for Tag Manager.\n * @param {string} eventCategory - The event category.\n * @param {string} eventAction - The event action.\n * @param {string} [eventLabel] - The event label.\n * @param {number} [eventValue] - The event value.\n * @param {boolean} [nonInteractionHit] - Does this count as interacting with the page?\n */\nexport function gaEvent(\n    event,\n    eventCategory,\n    eventAction,\n    eventLabel,\n    eventValue,\n    nonInteractionHit\n) {\n    window.dataLayer = window.dataLayer || [];\n    window.dataLayer.push({\n        event: event,\n        eventCategory: eventCategory,\n        eventAction: eventAction,\n        eventLabel: eventLabel,\n        eventValue: eventValue,\n        nonInteractionHit: nonInteractionHit,\n    });\n}\n\n/**\n * Append an array of elements to an element.\n *\n * @param {HTMLElement} elem - The parent element.\n * @param {HTMLElement[]} children - An array of elements to append to it.\n */\nexport function appendAll(elem, children) {\n    children.forEach((child) => elem.appendChild(child));\n}\n\n/**\n * Extract number from string, e.g. return '123' from string 'a1b2c3'.\n *\n * @param {string} string - String\n */\nexport function numberFromString(string) {\n    let number = string.replace(/\\D/g, '');\n    return number;\n}\n\n/**\n * Calculates viewport width to determinte if using mobile\n * @param {number} number - width of screen, with default value = 432.\n *\n */\nexport function isMobile(screen = 432) {\n    const viewPortWidth = window.innerWidth;\n    const mobileScreen = screen;\n\n    if (viewPortWidth < mobileScreen) {\n        return true;\n    }\n}\n\n/**\n *\n * Turn DOM elements to array e.g return [li, li, li] from DOM element selecting 'li' <ul><li></li><li></li><li></li></ul>\n *\n * @param {object} object - Object\n */\n\nexport function toArray(obj) {\n    let array = [];\n    // iterate backwards ensuring that length is an UInt32\n    for (let i = obj.length >>> 0; i--; ) {\n        array[i] = obj[i];\n    }\n    return array;\n}\n\n/**\n * Check browser user agent is IE or edge and return version number\n */\nexport function detectIE() {\n    const ua = window.navigator.userAgent,\n        versionLength = 10,\n        msie = ua.indexOf('MSIE '),\n        msieVersionOffset = 5;\n\n    if (msie > 0) {\n        // IE 10 or older => return version number\n        return parseInt(\n            ua.substring(msie + msieVersionOffset, ua.indexOf('.', msie)),\n            versionLength\n        );\n    }\n\n    const trident = ua.indexOf('Trident/'),\n        tridentVersionOffset = 3;\n\n    if (trident > 0) {\n        // IE 11 => return version number\n        let rv = ua.indexOf('rv:');\n        return parseInt(\n            ua.substring(rv + tridentVersionOffset, ua.indexOf('.', rv)),\n            versionLength\n        );\n    }\n\n    const edge = ua.indexOf('Edge/'),\n        edgeVersionOffset = 5;\n\n    if (edge > 0) {\n        // Edge (IE 12+) => return version number\n        return parseInt(\n            ua.substring(edge + edgeVersionOffset, ua.indexOf('.', edge)),\n            versionLength\n        );\n    }\n\n    // other browser\n    return false;\n}\n\n/**\n * Check if browser supports IntersectionObserver API\n *\n * @returns {Boolean} -\n */\nexport function checkIntersectionObserver() {\n    if (\n        'IntersectionObserver' in window &&\n        'IntersectionObserverEntry' in window &&\n        'intersectionRatio' in window.IntersectionObserverEntry.prototype\n    ) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n/**\n * Create elements containing classes, content and any other attributes\n *\n * @param {string} type - Type of element to create, e.g. \"div\", \"button\".\n * @param {array} attributes - Array of objects specifying which attributes to assign to the element i.e. {label : \"class\", val : \"container\"}\n */\nexport function createHTMLElement(type, attributes) {\n    let el = document.createElement(type);\n    attributes.map(function (att) {\n        att.label === 'content'\n            ? el.appendChild(document.createTextNode(att.val))\n            : att.label === 'html'\n            ? (el.innerHTML = att.val)\n            : el.setAttribute(att.label, att.val);\n    });\n    return el;\n}\n\nexport function uppercaseFirstLetterLowercaseRest(s) {\n    return s.charAt(0).toUpperCase() + s.slice(1).toLowerCase();\n}\n\n/**\n * Asynchronous request to Funnelback web service.\n *\n * @param {object} config An axios configuration object.\n * @return {Promise} - A promise of a Funnelback response.\n */\nexport function axiosRequest(config) {\n    const httpOK = 200;\n\n    return axios(config)\n        .then((response) => {\n            if (httpOK === response.status) {\n                return response.data;\n            } else {\n                throw `Bad response: ${response.status}`;\n            }\n        })\n        .catch((e) => {\n            if (!axios.isCancel(e)) {\n                gaEvent(\n                    'jsError',\n                    'JavaScript error',\n                    `Line ${e.lineNumber} – ${e.message}`,\n                    `axiosRequest ${e.fileName} (${window.location})`,\n                    true\n                );\n            }\n        });\n}\n\n/**\n * Returns the correct English suffix for a number.\n *\n * @param  {number} day - The day of the month.\n * @returns {string} The correct suffix.\n */\nfunction daySuffix(day) {\n    const eleventh = 11,\n        thirteenth = 13,\n        lastDigit = day.toString().slice(-1);\n\n    return day >= eleventh || day <= thirteenth\n        ? 'th'\n        : lastDigit === '1'\n        ? 'st'\n        : lastDigit === '2'\n        ? 'nd'\n        : lastDigit === '3'\n        ? 'rd'\n        : 'th';\n}\n\n/**\n * Format a date for React.\n *\n * @param {Date} date - A date object.\n * @returns {ReactFragment} The formatted date.\n */\nexport function formatReactDate(date) {\n    const months = [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December',\n        ],\n        days = [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday',\n        ];\n\n    return (\n        <time dateTime={date.toISOString().split('T')[0]}>\n            {days[date.getUTCDay()]}, {date.getUTCDate()}\n            <sup>{daySuffix(date.getUTCDate())}</sup>{' '}\n            {months[date.getUTCMonth()]} {date.getUTCFullYear()}\n        </time>\n    );\n}\n\n/**\n * Array slicer\n *\n * @param {array} arr - array to be split up into subarrays\n * @param {number} len - max number items that goes into each subarray\n */\nexport function arraySlicer(arr, len) {\n    let newArray = [],\n        i = 0,\n        n = arr.length;\n\n    while (i < n) {\n        newArray.push(arr.slice(i, (i += len)));\n    }\n    return newArray;\n}\n","/**<\n * @module patterns/finder/components/finder__select\n * @author Web Development\n * @copyright City, University of London 2019\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Finder__Select(props) {\n    const stringLength = 16,\n        stringOffset = -4,\n        randomNumber = Math.random().toString(stringLength).slice(stringOffset),\n        currentValue = props.query.facets[props.facet.meta] || '';\n\n    // reduce the facet configuration to an array of all possible values for\n    // the facet\n    const allFacets = props.facet.values.reduce((acc, data) => {\n        return [...acc, data];\n    }, []);\n\n    // reduce the Funnelback response for the facet to an array of valid\n    // values for the current query\n    const responseFacets =\n        props.responseFacet[0] &&\n        props.responseFacet[0].categories[0] &&\n        props.responseFacet[0].categories[0].values\n            ? props.responseFacet[0].categories[0].values.reduce(\n                  (acc, data) => {\n                      return [...acc, data.data];\n                  },\n                  []\n              )\n            : [];\n\n    // count how many possible facets are not valid for the current query\n    // and will be hidden\n    const hiddenFacets = allFacets\n        .map((facet) => facet.data)\n        .filter((facet) => responseFacets.indexOf(facet.toLowerCase()) < 0)\n        .length;\n\n    const setFacet = (value) => {\n        const newQuery = props.query;\n\n        props.dependencies.map((facet) => {\n            delete newQuery.facets[facet.meta];\n        });\n\n        if (value) {\n            newQuery.facets[props.facet.meta] = value;\n        } else {\n            delete newQuery.facets[props.facet.meta];\n        }\n\n        newQuery.startRank = 1;\n        newQuery.misspelling = null;\n        newQuery.interacted = true;\n\n        props.update.query(newQuery);\n        props.update.results(!props.update.updateState);\n    };\n\n    if (props.facet.values.length > hiddenFacets) {\n        return (\n            <div\n                className={`finder__filter finder__select ${\n                    currentValue && 'finder__select--selected'\n                }`}\n            >\n                <label\n                    htmlFor={`meta_${props.facet.meta}_sand--${randomNumber}`}\n                >\n                    {props.facet.name}\n                </label>\n                <select\n                    name={props.facet.name}\n                    id={`meta_${props.facet.meta}_sand--${randomNumber}`}\n                    onChange={(e) => setFacet(e.target.value)}\n                    value={currentValue}\n                >\n                    <option\n                        value=\"\"\n                        id={`meta${props.facet.meta}all`}\n                        name={`meta_${props.facet.meta}_sand--${randomNumber}`}\n                    >\n                        {props.facet.noSelection}\n                    </option>\n\n                    {props.facet.values.map((value, i) => {\n                        const responseFacetDetails =\n                            props.responseFacet[0] &&\n                            props.responseFacet[0].categories[0] &&\n                            props.responseFacet[0].categories[0].values.filter(\n                                (responseFacetValue) =>\n                                    responseFacetValue.data.toLowerCase() ===\n                                    value.data.toLowerCase()\n                            );\n\n                        if (\n                            currentValue.toLowerCase() ===\n                                value.data.toLowerCase() ||\n                            (responseFacetDetails && responseFacetDetails[0])\n                        ) {\n                            return (\n                                <option\n                                    key={i}\n                                    value={value.data.toLowerCase()}\n                                >\n                                    {value.label}\n                                </option>\n                            );\n                        } else {\n                            return null;\n                        }\n                    })}\n                </select>\n            </div>\n        );\n    } else {\n        return null;\n    }\n}\n\nFinder__Select.propTypes = {\n    facet: PropTypes.object,\n    query: PropTypes.object,\n    responseFacet: PropTypes.arrayOf(PropTypes.object),\n    update: PropTypes.object,\n    dependencies: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default Finder__Select;\n","/**\n * @module patterns/finder/components/finder__filters\n * @author Web Development\n * @copyright City, University of London 2019\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SelectFilter from './select__filter';\nimport Reset from '../../../finder/components/filters/finder__reset';\nimport Sort from '../../../finder/components/filters/finder__sort';\nimport { gaEvent } from '../../../../util';\n\n/**\n * Predicate for whether a facet should be displayed, if it's dependent on\n * another facet being set.\n *\n * @param {object} facet The facet to potentially display.\n * @param {object} facetMap The facets currently set on the query.\n * @return {bool} - Has any dependency been met\n */\nfunction dependencyMet(facet, facetMap) {\n    const setFacets = Object.keys(facetMap);\n\n    if (!facet.dependency) {\n        return true;\n    }\n\n    if (\n        setFacets.indexOf(facet.dependency) >= 0 &&\n        facetMap[facet.dependency] !== ''\n    ) {\n        return true;\n    }\n\n    return false;\n}\n\n/**\n * Component to update facet values in the query.\n *\n * @param {object} props React props.\n * @returns {object} - React component.\n */\nfunction Finder__Filters(props) {\n    const clearFiltersDesktop =\n            Object.keys(props.query.facets).length > 0 ? (\n                <div className=\"finder__filters__reset finder__filters__reset--desktop\">\n                    <Reset clear={props.clear} resetSort={false} />\n                </div>\n            ) : null,\n        clearFiltersMobile =\n            Object.keys(props.query.facets).length > 0 ||\n            props.query.sortType !== props.config.sort[0].type ? (\n                <Reset clear={props.clear} resetSort={true} />\n            ) : null;\n\n    const sort =\n        props.config.sort.length > 1 && props.config.displaySort ? (\n            <div className=\"wrapper--finder__select--sort--mobile\">\n                <Sort\n                    config={props.config}\n                    query={props.query}\n                    update={props.update}\n                />\n            </div>\n        ) : null;\n\n    return (\n        <div className=\"finder__filters\">\n            <h2 className=\"finder__filters__heading\">\n                <span className=\"finder__filters__heading__text\">\n                    <span\n                        className=\"far fa-sliders-h icon\"\n                        aria-hidden=\"true\"\n                    />{' '}\n                    {'Use the filter to show data that is of interest to you'}\n                </span>\n                {clearFiltersMobile}\n            </h2>\n            <fieldset>\n                <div className=\"wrapper--finder_filters--filters\">\n                    {props.config.facetLabels.map((facet) => {\n                        if (dependencyMet(facet, props.query.facets)) {\n                            switch (facet.type) {\n                                case 'select':\n                                    return (\n                                        <SelectFilter\n                                            key={facet.meta}\n                                            facet={facet}\n                                            query={props.query}\n                                            responseFacet={\n                                                props.response &&\n                                                props.response.facets\n                                                    ? props.response.facets.filter(\n                                                          (funnelbackFacet) =>\n                                                              funnelbackFacet.name ===\n                                                              facet.funnelbackName\n                                                      )\n                                                    : []\n                                            }\n                                            update={props.update}\n                                            dependencies={props.config.facetLabels.filter(\n                                                (candidate) =>\n                                                    candidate.dependency ===\n                                                    facet.meta\n                                            )}\n                                        />\n                                    );\n                                default:\n                                    gaEvent(\n                                        'jsError',\n                                        'JavaScript error',\n                                        'finder__filters()',\n                                        'Unknown filter type in finder__filters.js',\n                                        true\n                                    );\n                            }\n                        } else {\n                            return null;\n                        }\n                    })}\n                    <p className=\"finder__filters__nofilters\">\n                        No filters are valid for the current query.\n                    </p>\n                    {clearFiltersDesktop}\n                    {sort}\n                </div>\n            </fieldset>\n        </div>\n    );\n}\n\nFinder__Filters.propTypes = {\n    config: PropTypes.object,\n    query: PropTypes.object,\n    response: PropTypes.object,\n    update: PropTypes.object,\n    clear: PropTypes.func,\n};\n\nexport default Finder__Filters;\n","/**\n * @module patterns/finder/components/finder__filters\n * @author Web Development\n * @copyright City, University of London 2019\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SelectFilter from './select__filter';\nimport CheckboxFilter from '../../../finder/components/filters/finder__checkbox';\nimport TagFilter from '../../../finder/components/filters/finder__tag';\nimport Reset from '../../../finder/components/filters/finder__reset';\nimport Sort from '../../../finder/components/filters/finder__sort';\nimport { gaEvent } from '../../../../util';\n\n/**\n * Predicate for whether a facet should be displayed, if it's dependent on\n * another facet being set.\n *\n * @param {object} facet The facet to potentially display.\n * @param {object} facetMap The facets currently set on the query.\n * @return {bool} - Has any dependency been met\n */\nfunction dependencyMet(facet, facetMap) {\n    const setFacets = Object.keys(facetMap);\n\n    if (!facet.dependency) {\n        return true;\n    }\n\n    if (\n        setFacets.indexOf(facet.dependency) >= 0 &&\n        facetMap[facet.dependency] !== ''\n    ) {\n        return true;\n    }\n\n    return false;\n}\n\n/**\n * Component to update facet values in the query.\n *\n * @param {object} props React props.\n * @returns {object} - React component.\n */\nfunction Finder__Filters(props) {\n    const clearFiltersDesktop =\n            Object.keys(props.query.facets).length > 0 ? (\n                <div className=\"finder__filters__reset finder__filters__reset--desktop\">\n                    <Reset clear={props.clear} resetSort={false} />\n                </div>\n            ) : null,\n        clearFiltersMobile =\n            Object.keys(props.query.facets).length > 0 ||\n            props.query.sortType !== props.config.sort[0].type ? (\n                <Reset clear={props.clear} resetSort={true} />\n            ) : null;\n\n    const sort =\n        props.config.sort.length > 1 && props.config.displaySort ? (\n            <div className=\"wrapper--finder__select--sort--mobile\">\n                <Sort\n                    config={props.config}\n                    query={props.query}\n                    update={props.update}\n                />\n            </div>\n        ) : null;\n\n    return (\n        <div className=\"finder__filters\">\n            <h2 className=\"finder__filters__heading\">\n                <span className=\"finder__filters__heading__text\">\n                    <span\n                        className=\"far fa-sliders-h icon\"\n                        aria-hidden=\"true\"\n                    />{' '}\n                    {`Filter ${props.config.summariseAs.plural}`}\n                </span>\n                {clearFiltersMobile}\n            </h2>\n\n            <fieldset>\n                <div className=\"wrapper--finder_filters--filters\">\n                    {props.config.facetLabels.map((facet) => {\n                        if (dependencyMet(facet, props.query.facets)) {\n                            switch (facet.type) {\n                                case 'select':\n                                    return (\n                                        <SelectFilter\n                                            key={facet.meta}\n                                            facet={facet}\n                                            query={props.query}\n                                            responseFacet={\n                                                props.response &&\n                                                props.response.facets\n                                                    ? props.response.facets.filter(\n                                                          (funnelbackFacet) =>\n                                                              funnelbackFacet.name ===\n                                                              facet.funnelbackName\n                                                      )\n                                                    : []\n                                            }\n                                            update={props.update}\n                                            dependencies={props.config.facetLabels.filter(\n                                                (candidate) =>\n                                                    candidate.dependency ===\n                                                    facet.meta\n                                            )}\n                                        />\n                                    );\n                                case 'checkbox':\n                                    return (\n                                        <CheckboxFilter\n                                            key={facet.meta}\n                                            facet={facet}\n                                            query={props.query}\n                                            responseFacet={\n                                                props.response &&\n                                                props.response.facets\n                                                    ? props.response.facets.filter(\n                                                          (funnelbackFacet) =>\n                                                              funnelbackFacet.name ===\n                                                              facet.funnelbackName\n                                                      )\n                                                    : []\n                                            }\n                                            update={props.update}\n                                            dependencies={props.config.facetLabels.filter(\n                                                (candidate) =>\n                                                    candidate.dependency ===\n                                                    facet.meta\n                                            )}\n                                        />\n                                    );\n                                case 'tag':\n                                    return (\n                                        <TagFilter\n                                            key={facet.meta}\n                                            facet={facet}\n                                            query={props.query}\n                                            responseFacet={\n                                                props.response &&\n                                                props.response.facets\n                                                    ? props.response.facets.filter(\n                                                          (funnelbackFacet) =>\n                                                              funnelbackFacet.name ===\n                                                              facet.funnelbackName\n                                                      )\n                                                    : []\n                                            }\n                                            update={props.update}\n                                            dependencies={props.config.facetLabels.filter(\n                                                (candidate) =>\n                                                    candidate.dependency ===\n                                                    facet.meta\n                                            )}\n                                        />\n                                    );\n                                default:\n                                    gaEvent(\n                                        'jsError',\n                                        'JavaScript error',\n                                        'finder__filters()',\n                                        'Unknown filter type in finder__filters.js',\n                                        true\n                                    );\n                            }\n                        } else {\n                            return null;\n                        }\n                    })}\n                    <p className=\"finder__filters__nofilters\">\n                        No filters are valid for the current query.\n                    </p>\n                    {clearFiltersDesktop}\n                    {sort}\n                </div>\n            </fieldset>\n        </div>\n    );\n}\n\nFinder__Filters.propTypes = {\n    config: PropTypes.object,\n    query: PropTypes.object,\n    response: PropTypes.object,\n    update: PropTypes.object,\n    clear: PropTypes.func,\n};\n\nexport default Finder__Filters;\n","/**\n * @module patterns/finder/components/wrapper--finder__filters--mobile\n * @author Web Development\n * @copyright City, University of London 2019\n */\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Filters from './mobile__select-filter';\nimport createFocusTrap from 'focus-trap';\n// seems to fix most issues with old iPhones and position: fixed\n// may not be necessary long-term, but I was in a hurry\nimport { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\n\nlet filters = null;\nconst getFilters = () => filters;\n\n/**\n * Render the mobile version of the filters.\n *\n * TODO: this is a bit flaky on old iPhones with long facets (i.e. longer than\n * the main body of the page)\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction Finder__FiltersMobile(props) {\n    const [display, setDisplay] = useState(false);\n    const [focusTrap, setFocusTrap] = useState({});\n\n    // trap tab focus when the filters are open\n    useEffect(() => {\n        if (!focusTrap.activate) {\n            setFocusTrap(\n                createFocusTrap(getFilters(), {\n                    initialFocus: getFilters().querySelector(\n                        '.wrapper--finder__filters--mobile__apply'\n                    ),\n                    onDeactivate: () => setDisplay(false),\n                    clickOutsideDeactivates: true,\n                })\n            );\n        }\n\n        if (display) {\n            focusTrap.activate && focusTrap.activate();\n            disableBodyScroll(\n                getFilters().querySelector(\n                    '.wrapper--finder__filters--mobile__filters'\n                )\n            );\n        } else {\n            focusTrap.deactivate && focusTrap.deactivate();\n            enableBodyScroll(\n                getFilters().querySelector(\n                    '.wrapper--finder__filters--mobile__filters'\n                )\n            );\n        }\n    }, [display, focusTrap]);\n\n    const totalMatching =\n        props.response &&\n        props.response.summary &&\n        props.response.summary.totalMatching;\n\n    const totalMatchingMessage = totalMatching\n        ? 'Show Graduate Outcomes'\n        : 'Close';\n\n    const filtersCount = props.config.displaySort ? (\n        props.config.sort[0].type !== props.query.sortType ||\n        Object.keys(props.query.facets).length > 0 ? (\n            <span>\n                Filters{' '}\n                <span className=\"wrapper--finder__filters--mobile__toggle__count\">\n                    (\n                    {props.config.sort[0].type !== props.query.sortType\n                        ? Object.keys(props.query.facets).length + 1\n                        : Object.keys(props.query.facets).length}\n                    )\n                </span>\n            </span>\n        ) : (\n            <span>Filter</span>\n        )\n    ) : Object.keys(props.query.facets).length > 0 ? (\n        <span>\n            Filters{' '}\n            <span className=\"wrapper--finder__filters--mobile__toggle__count\">\n                (\n                {props.config.sort[0].type !== props.query.sortType\n                    ? Object.keys(props.query.facets).length + 1\n                    : Object.keys(props.query.facets).length}\n                )\n            </span>\n        </span>\n    ) : (\n        <span>Filter</span>\n    );\n\n    const toggle = display ? null : (\n        <button\n            type=\"button\"\n            className=\"wrapper--finder__filters--mobile__toggle\"\n            aria-haspopup={true}\n            aria-expanded={display}\n            onClick={() => setDisplay(!display)}\n            data-filters-applied={\n                Object.keys(props.query.facets).length !== 0 ||\n                (props.config.displaySort &&\n                    props.config.sort[0].type !== props.query.sortType)\n                    ? true\n                    : false\n            }\n        >\n            <span>\n                <span className=\"far fa-sliders-h icon\" aria-hidden=\"true\" />{' '}\n                {filtersCount}\n            </span>\n        </button>\n    );\n\n    return (\n        <div\n            className=\"wrapper--finder__filters--mobile\"\n            data-open={display}\n            ref={(mobilefilters) => (filters = mobilefilters)}\n        >\n            {toggle}\n            <div className=\"wrapper--finder__filters--mobile__filters\">\n                <div className=\"wrapper--finder__filters--mobile__filters__content\">\n                    <Filters\n                        config={props.config}\n                        query={props.query}\n                        response={props.response}\n                        update={props.update}\n                        clear={props.clear}\n                    />\n                    <p className=\"wrapper--finder__filters--mobile__filters__content--text\">\n                        If you do not see the course you are interested in,\n                        please contact the{' '}\n                        <a href=\"/prospective-students/career-development/careers-team\">\n                            careers department\n                        </a>{' '}\n                        at City for full details\n                    </p>\n                </div>\n            </div>\n            <div className=\"wrapper--finder__filters--mobile__apply\">\n                <button\n                    type=\"button\"\n                    aria-expanded={display}\n                    onClick={() => setDisplay(!display)}\n                    disabled={props.updating}\n                >\n                    {Object.keys(props.query.facets).length === 0 ? null : (\n                        <span className=\"far fa-chevron-left icon\"></span>\n                    )}\n\n                    <span aria-live=\"polite\">\n                        {props.updating ? (\n                            <React.Fragment>\n                                <span\n                                    className=\"fas fa-spinner fa-pulse icon\"\n                                    aria-hidden=\"true\"\n                                />{' '}\n                                <span className=\"wrapper--finder__filters--mobile__apply__text\">\n                                    Updating {props.summariseAs.plural}…\n                                </span>\n                            </React.Fragment>\n                        ) : (\n                            <React.Fragment>\n                                <span className=\"wrapper--finder__filters--mobile__apply__text\">\n                                    {!props.query.facets.t\n                                        ? 'Close'\n                                        : totalMatchingMessage}\n                                </span>\n                            </React.Fragment>\n                        )}\n                    </span>\n                </button>\n            </div>\n        </div>\n    );\n}\n\nFinder__FiltersMobile.propTypes = {\n    config: PropTypes.object,\n    query: PropTypes.object,\n    response: PropTypes.object,\n    update: PropTypes.object,\n    clear: PropTypes.func,\n    updating: PropTypes.bool,\n    summariseAs: PropTypes.object,\n};\n\nexport default Finder__FiltersMobile;\n","/**\n * @module patterns/finder/components/cards/finder__results__generic\n * @author Web Development\n * @copyright City, University of London 2019\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Render a Funnelback result as a generic card.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction Finder__Chart(props) {\n    const data =\n        props.data &&\n        props.data\n            .filter((row) => !!(row[0] && row[1]))\n            .map((row) => [row[0], parseFloat(row[1]) || 0]);\n\n    let firstSegmentFull = false,\n        secondSegmentFull = false;\n\n    if (data[0][1] === 100) {\n        firstSegmentFull = true;\n    }\n    if (props.chartsLength) {\n        if (data[1][1] === 100) {\n            secondSegmentFull = true;\n        }\n    }\n\n    // Total value of data segments (should be 100)\n    let sum = data.reduce(function (acc, row) {\n        return acc + row[1];\n    }, 0);\n\n    let strokeWidth = 32;\n    let arcAcc = 0;\n\n    let valueElements = data.map(function (row, i) {\n        let value = Math.min(1, row[1] / sum);\n        let arc = 2 * Math.PI * value;\n        let largeAngle = arc > Math.PI ? 1 : 0;\n        let sweep = 1;\n        let key = `${props.title}${row[0].replace(/\\s+/g, '')}${row[1]}${\n            props.chartId\n        }`;\n        let x0 = 100 * Math.sin(arcAcc);\n        let y0 = -100 * Math.cos(arcAcc);\n        arcAcc += arc;\n        let x1 = 100 * Math.sin(arcAcc);\n        let y1 = -100 * Math.cos(arcAcc);\n        let d = `M ${x0} ${y0} A 100 100  0 ${largeAngle} ${sweep} ${x1} ${y1}`;\n\n        // If not single segment, build segments proportionately\n        if (!(firstSegmentFull || secondSegmentFull) && i < 7) {\n            return (\n                <path\n                    key={key}\n                    strokeWidth={strokeWidth}\n                    className=\"chart--piechart__value animate--svg-path\"\n                    d={d}\n                    fill=\"none\"\n                />\n            );\n        } else if (firstSegmentFull) {\n            return (\n                <React.Fragment>\n                    <path\n                        key={key}\n                        strokeWidth=\"32\"\n                        className=\"chart--piechart__value animate--svg-path animate--svg-path--jsinit animate--svg-path--jsrun\"\n                        d=\"M 0 -100 A 100 100  0 1 1 -0.6283143965558805 -99.99802608561372\"\n                        fill=\"none\"\n                    />\n                    <path\n                        key={key}\n                        strokeWidth=\"32\"\n                        className=\"chart--piechart__value animate--svg-path animate--svg-path--jsinit animate--svg-path--jsrun\"\n                        d=\"M -0.6283143965558805 -99.99802608561372 A 100 100  0 0 1 -2.4492127076447545e-14 -100\"\n                        fill=\"none\"\n                    />\n                </React.Fragment>\n            );\n        } else if (secondSegmentFull) {\n            return (\n                <React.Fragment>\n                    <path\n                        key={key}\n                        strokeWidth=\"32\"\n                        className=\"chart--piechart__value animate--svg-path animate--svg-path--jsinit animate--svg-path--jsrun\"\n                        d=\"M -0.6283143965558805 -99.99802608561372 A 100 100  0 0 1 -2.4492127076447545e-14 -100\"\n                        fill=\"none\"\n                    ></path>\n                    <path\n                        key={key}\n                        strokeWidth=\"32\"\n                        className=\"chart--piechart__value animate--svg-path animate--svg-path--jsinit animate--svg-path--jsrun\"\n                        d=\"M 0 -100 A 100 100  0 1 1 -0.6283143965558805 -99.99802608561372\"\n                        fill=\"none\"\n                    ></path>\n                </React.Fragment>\n            );\n        } else {\n            return (\n                <path\n                    key={key}\n                    strokeWidth={strokeWidth}\n                    className=\"chart--piechart__value animate--svg-path\"\n                    d={d}\n                    fill=\"none\"\n                    stroke=\"url(#striped)\"\n                />\n            );\n        }\n    });\n\n    //let scale = 100 / (100 + strokeWidth / 2);\n\n    let legend = data.map(function (e, i) {\n        let val = Math.round((e[1] + Number.EPSILON) * 100) / 100;\n        let text = `${e[0]}: ${\n            Math.round(((100 * val) / sum + Number.EPSILON) * 100) / 100\n        }%`;\n        let randomNum = `legend-${props.title}${e[0].replace(/\\s+/g, '')}${\n            e[1]\n        }${props.chartId}`;\n\n        if (i === 7) {\n            return (\n                <div key={randomNum} className=\"chart__legend__item\">\n                    <span className=\"chart__legend__item__icon\">\n                        <svg height=\"23\" width=\"23\">\n                            <circle\n                                cx=\"12\"\n                                cy=\"10\"\n                                r=\"9\"\n                                stroke=\"black\"\n                                strokeWidth=\"1\"\n                                fill=\"url(#striped)\"\n                            />\n                        </svg>\n                    </span>\n                    <span className=\"chart__legend__item__label\">{text}</span>\n                </div>\n            );\n        } else {\n            return (\n                <div key={randomNum} className=\"chart__legend__item\">\n                    <span\n                        className=\"fa fa-circle chart__legend__item__icon\"\n                        aria-hidden=\"true\"\n                    ></span>\n                    <span className=\"chart__legend__item__label\">{text}</span>\n                </div>\n            );\n        }\n    });\n\n    return (\n        <div className=\"chart\">\n            <h3 className=\"chart__title\">{props.title}</h3>\n            <div className=\"chart__columns\">\n                <div className=\"chart--piechart animate animate-svg\">\n                    <div className=\"chart--pie-chart__svg-wrapper\">\n                        <svg\n                            preserveAspectRatio=\"xMidYMid meet\"\n                            viewBox=\"0 0 200 200\"\n                        >\n                            <g transform=\"translate(100,100) scale(0.8620689655172413)\">\n                                {valueElements}\n                            </g>\n                        </svg>\n                    </div>\n                </div>\n                <div className=\"chart__legend\">{legend}</div>\n            </div>\n        </div>\n    );\n}\n\nFinder__Chart.propTypes = {\n    data: PropTypes.array,\n    title: PropTypes.string,\n    chartsLength: PropTypes.bool,\n    chartId: PropTypes.number,\n};\n\nexport default Finder__Chart;\n","/**\n * @module patterns/finder/components/cards/finder__results__generic\n * @author Web Development\n * @copyright City, University of London 2019\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Render a Funnelback result as a generic card.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\n\nfunction Company__Container(props) {\n    return (\n        <div className=\"company-wrapper\">\n            <h3>Company names</h3>\n            <div\n                className=\"company-list\"\n                dangerouslySetInnerHTML={{ __html: props.text }}\n            />\n        </div>\n    );\n}\n\nCompany__Container.propTypes = {\n    data: PropTypes.array,\n    title: PropTypes.string,\n    text: PropTypes.string,\n};\n\nexport default Company__Container;\n","/**\n * @module patterns/finder/components/cards/finder__results__generic\n * @author Web Development\n * @copyright City, University of London 2019\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Render a Funnelback result as a generic card.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\n\nfunction Institutions__Container(props) {\n    return (\n        <div className=\"institutions-wrapper\">\n            <h3>Institutions of further study</h3>\n            <div\n                className=\"institutions-list\"\n                dangerouslySetInnerHTML={{ __html: props.text }}\n            />\n        </div>\n    );\n}\n\nInstitutions__Container.propTypes = {\n    data: PropTypes.array,\n    title: PropTypes.string,\n    text: PropTypes.string,\n};\n\nexport default Institutions__Container;\n","/**\n * @module patterns/finder/components/cards/finder__results__generic\n * @author Web Development\n * @copyright City, University of London 2019\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Render a Funnelback result as a generic card.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\n\nfunction Jobs__Container(props) {\n    return (\n        <div className=\"jobs-wrapper\">\n            <h3>Jobs titles</h3>\n            <div\n                className=\"jobs-list\"\n                dangerouslySetInnerHTML={{ __html: props.text }}\n            />\n        </div>\n    );\n}\n\nJobs__Container.propTypes = {\n    data: PropTypes.array,\n    title: PropTypes.string,\n    text: PropTypes.string,\n};\n\nexport default Jobs__Container;\n","/**\n * @module patterns/finder/components/cards/finder__results__generic\n * @author Web Development\n * @copyright City, University of London 2019\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Render a Funnelback result as a generic card.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\n\nfunction Salary__Container(props) {\n    return (\n        <div className=\"salary-wrapper\">\n            <h3>Salary</h3>\n            <div\n                className=\"salary-list\"\n                dangerouslySetInnerHTML={{ __html: props.text }}\n            />\n        </div>\n    );\n}\n\nSalary__Container.propTypes = {\n    data: PropTypes.array,\n    title: PropTypes.string,\n    text: PropTypes.string,\n};\n\nexport default Salary__Container;\n","/**\n * @module patterns/finder/components/cards/finder__results__generic\n * @author Web Development\n * @copyright City, University of London 2019\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Charts from './chart';\nimport Company from './companys';\nimport Institutions from './institutions';\nimport Job from './job';\nimport Salary from './salary';\n\n/**\n * Render a Funnelback result as a generic card.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction Finder__Results__Generic(props) {\n    const company = props.details.metaData.companys ? (\n            <Company text={props.details.metaData.companys} />\n        ) : null,\n        institutions = props.details.metaData.institutions ? (\n            <Institutions text={props.details.metaData.institutions} />\n        ) : null,\n        jobT = props.details.metaData.jobT ? (\n            <Job text={props.details.metaData.jobT} />\n        ) : null,\n        salary = props.details.metaData.salary ? (\n            <Salary text={props.details.metaData.salary} />\n        ) : null;\n    const charts = props.details.metaData.chart.split('|'),\n        data = charts.map((d) => JSON.parse(d));\n\n    let count = 0;\n    props.details.metaData.companys && count++;\n    props.details.metaData.institutions && count++;\n    props.details.metaData.jobT && count++;\n    props.details.metaData.salary && count++;\n\n    return (\n        <div className=\"destination-leaver\">\n            <div className=\"card__details__text\">\n                <h2 className=\"card__heading\">\n                    Showing data for {props.details.title}\n                </h2>\n                <p className=\"card__description\">\n                    {props.details.metaData.c && props.details.metaData.c}\n                </p>\n            </div>\n            <div className=\"chart-row chart-row--columns\">\n                {data.map((c, i) => {\n                    let k = `${c[0].title}${i}${c[0].id}`;\n                    let chartsLength = data.length === 1 ? true : false;\n                    return (\n                        <Charts\n                            key={k}\n                            data={c[0].chart}\n                            title={c[0].title}\n                            id={c[0].id}\n                            chartsLength={chartsLength}\n                            chartId={parseInt(c[0].id)}\n                        />\n                    );\n                })}\n            </div>\n            <div className=\"destination-leaver-content\" data-length={count}>\n                {salary}\n                {company}\n                {institutions}\n                {jobT}\n            </div>\n        </div>\n    );\n}\n\nFinder__Results__Generic.propTypes = {\n    details: PropTypes.object,\n};\n\nexport default Finder__Results__Generic;\n","/**\n * @module patterns/finder/components/cards/finder__results__card\n * @author Web Development\n * @copyright City, University of London 2019\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Generic from './content';\n\n/**\n * Render a Funnelback result as the appropriate card type.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction Finder__Results__Card(props) {\n    return <Generic details={props.details} />;\n}\n\nFinder__Results__Card.propTypes = {\n    details: PropTypes.object,\n    query: PropTypes.object,\n    type: PropTypes.string,\n};\n\nexport default Finder__Results__Card;\n","/**\n * @module patterns/finder/components/finder__results\n * @author Web Development\n * @copyright City, University of London 2019\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Card from './content__container';\n\n/**\n * Render Funnelback results.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction Finder__Results(props) {\n    const resultsClass =\n        'resultsVariant' in props.config\n            ? `finder__results__list finder__results__list--${props.config.resultsVariant}`\n            : 'finder__results__list';\n\n    if (props.response && props.query.facets.level && props.query.facets.t) {\n        const results =\n            props.response.bestBets.length > 0 ||\n            props.response.results.length > 0 ? (\n                <div\n                    start={props.response.summary.currStart}\n                    className={resultsClass}\n                >\n                    <Card\n                        bestBet={false}\n                        details={props.response.results[0]}\n                        key={props.response.results[0].docNum}\n                        type={props.type}\n                        query={props.query}\n                    />\n                </div>\n            ) : null;\n\n        // render either the results, or a spinner while we wait for Funnelback\n        const resultsContent = <React.Fragment>{results}</React.Fragment>;\n        return <div className=\"finder__results\">{resultsContent}</div>;\n    } else {\n        return <div className=\"finder__results\"></div>;\n    }\n}\n\nFinder__Results.propTypes = {\n    clear: PropTypes.func,\n    query: PropTypes.object,\n    response: PropTypes.object,\n    summariseAs: PropTypes.object,\n    type: PropTypes.string,\n    update: PropTypes.object,\n    updating: PropTypes.bool,\n};\n\nexport default Finder__Results;\n","/**\n * Universal finder\n *\n * Don't run this via patterns.js, it's a separate compilation.\n *\n * @module patterns/finder/finder\n * @author Web Development\n * @copyright City, University of London 2019\n */\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { find } from '../finder/funnelback';\nimport Filters from './components/filters/filters';\nimport MobileFilters from './components/filters/filtersmobile';\nimport Results from './components/results/results';\nimport scroll from 'zenscroll';\nimport { reduceMotion } from '../../util';\n\nconst oneSecond = 1000,\n    scrollDuration = reduceMotion() ? 0 : oneSecond,\n    screenOffsetRatio = 10;\n\n/**\n * Retrieve current values for facets from the URL parameters.\n *\n * @param {object[]} facets Array of facet definitions.\n * @param {object} params URLSearchParams object for the current page.\n * @return {object} - Map of facet meta labels to their current value from the URL.\n */\nfunction getFacetParams(facets, params) {\n    return facets\n        .map((facet) => {\n            const param = {};\n            if (params.get(`meta_${facet.meta}_sand`)) {\n                param[facet.meta] = params.get(`meta_${facet.meta}_sand`);\n            }\n            return param;\n        })\n        .reduce((facetParams, facet) => Object.assign(facetParams, facet));\n}\n\n/**\n * Preserve the search state in the URL parameters.\n *\n * @param {string} currQuery The search query.\n * @param {integer} currStartRank The start rank.\n * @param {object[]} currFacets A map of facet meta labels to their values.\n * @param {*} facetLabels Array of facet definitions.\n */\nfunction replaceHistory(\n    currQuery,\n    currStartRank,\n    currFacets,\n    currSort,\n    facetLabels,\n    defaultSort\n) {\n    if (window) {\n        const params = new URLSearchParams(window.location.search);\n\n        currQuery !== ''\n            ? params.set('query', currQuery)\n            : params.delete('query');\n\n        currStartRank !== 1\n            ? params.set('start_rank', currStartRank)\n            : params.delete('start_rank');\n\n        currSort !== defaultSort && currSort !== ''\n            ? params.set('sort', currSort)\n            : params.delete('sort');\n\n        facetLabels.forEach((facet) => {\n            if (currFacets[facet.meta]) {\n                params.set(`meta_${facet.meta}_sand`, currFacets[facet.meta]);\n            } else {\n                params.delete(`meta_${facet.meta}_sand`);\n            }\n        });\n\n        const hasParams = params.toString().length ? '?' : '';\n\n        window.history.replaceState(\n            {},\n            '',\n            `${window.location.pathname}${hasParams}${params.toString()}`\n        );\n    }\n}\n\n/**\n * Launch the universal Finder.\n *\n * @param {object} props The JSON configuration file for the Finder.\n * @return {object} The React component to render.\n */\nfunction DestinationLeaversHE(props) {\n    const params = new URLSearchParams(window.location.search);\n\n    /**\n     * initial state for the Funnelback query, taken from URL parameters and\n     * configuration\n     **/\n    const initialQuery = {\n        collection: props.config.collection,\n        facets:\n            props.config.facetLabels.length > 0\n                ? getFacetParams(props.config.facetLabels, params)\n                : {},\n        fixedFacets: props.config.fixedFacets,\n        interacted: false,\n        misspelling: null,\n        numRanks: params.get('num_ranks') || props.config.numRanks,\n        query: params.get('query') || '',\n        sortType: params.get('query')\n            ? ''\n            : params.get('sort') || props.config.sort[0].type,\n        startRank: params.get('start_rank') || 1,\n    };\n\n    /**\n     * Dummy, empty Funnelback response object for initial state.\n     */\n    const initialResponse = Object.freeze({\n        bestBets: [],\n        facets: [],\n        results: [],\n        spell: null,\n        summary: {\n            currEnd: 0,\n            currStart: 0,\n            numRanks: 0,\n            totalMatching: 0,\n        },\n    });\n\n    // State objects for the Funnelback query and response\n    const [query, setQuery] = useState(initialQuery);\n    const [funnelbackResponse, setResponse] = useState(initialResponse);\n\n    // Boolean to indicate when a query is in progress\n    const [updating, setUpdating] = useState(true);\n\n    // Request token from the Funnelback request object, so we can cancel if\n    // another request is triggered by the user\n    const [call, setCall] = useState({\n        cancel: () => {},\n    });\n\n    // useEffect doesn't deep inspect objects, so we need an additional, plain\n    // state variable to indicate that the query state has changed and the\n    // component should render\n    // the value isn't important, it's just easy to toggle a bool back and forth\n    const [update, setUpdate] = useState(false);\n\n    // Retrieve Funnelback results\n    useEffect(() => {\n        // preserve the state\n        replaceHistory(\n            query.query,\n            query.startRank,\n            query.facets,\n            query.sortType,\n            props.config.facetLabels,\n            props.config.sort[0].type\n        );\n\n        // indicate a request is in progress\n        setUpdating(true);\n\n        query.interacted &&\n            scroll.center(\n                props.element.querySelector('.finder__results'),\n                scrollDuration,\n                -window.innerHeight / screenOffsetRatio\n            );\n\n        /**\n         * cancel any request already in progress\n         *\n         * async requests can return out of order\n         */\n        call.cancel();\n\n        // make a new, asynchronous request to Funnelback\n        const [request, requestToken] = find(\n            query.collection,\n            query.fixedFacets,\n            query.query,\n            query.sortType,\n            query.startRank,\n            query.numRanks,\n            query.facets\n        );\n\n        // save the requestToken\n        setCall({\n            cancel: () => {\n                requestToken.cancel();\n            },\n        });\n\n        // when the response from Funnelback arrives,\n        // update the results and display them\n        request\n            .then((data) => {\n                setResponse(data);\n                setUpdating(false);\n\n                if (data.spell && data.summary.totalMatching === 0) {\n                    const newQueryText = data.spell.text.split(/\\|/)[0].trim(),\n                        newQuery = query;\n\n                    newQuery.misspelling = query.query;\n                    newQuery.query = newQueryText;\n                    newQuery.startRank = 1;\n                    setQuery(newQuery);\n                    setUpdate(!update);\n                }\n            })\n            .catch(() => {\n                setResponse(initialResponse);\n                setUpdating(false);\n            });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [update]);\n\n    // update props so child components can update the query\n    const updater = {\n        query: (newQuery) => setQuery(newQuery),\n        results: (newUpdate) => setUpdate(newUpdate),\n        updateState: update,\n    };\n\n    /**\n     * @param  {boolean} resetSort - Reset the sort order too?\n     */\n    const clear = (resetSort) => {\n        const newQuery = query;\n\n        call.cancel();\n\n        newQuery.sortType = resetSort\n            ? props.config.sort[0].type\n            : newQuery.sortType;\n        newQuery.facets = {};\n        newQuery.startRank = 1;\n        newQuery.misspelling = null;\n        newQuery.interacted = true;\n\n        setQuery(newQuery);\n        setUpdate(!update);\n    };\n\n    return (\n        <form\n            className={\n                props.config.facetLabels.length > 0\n                    ? 'finder'\n                    : 'finder finder--nofilters'\n            }\n            onSubmit={(e) => {\n                e.preventDefault();\n            }}\n        >\n            {props.config.facetLabels.length > 0 && (\n                <React.Fragment>\n                    <MobileFilters\n                        config={props.config}\n                        query={query}\n                        response={funnelbackResponse}\n                        update={updater}\n                        updating={updating}\n                        summariseAs={props.config.summariseAs}\n                        clear={clear}\n                    />\n\n                    <div className=\"wrapper--finder__filters--desktop\">\n                        <Filters\n                            config={props.config}\n                            query={query}\n                            response={funnelbackResponse}\n                            update={updater}\n                            clear={clear}\n                        />\n                    </div>\n                </React.Fragment>\n            )}\n            <div className=\"wrapper--destination-leavers-HE__info-text\">\n                <p>\n                    If you do not see the course you are interested in, please\n                    contact the{' '}\n                    <a href=\"/prospective-students/career-development/careers-team\">\n                        careers department\n                    </a>{' '}\n                    at City for full details\n                </p>\n            </div>\n            <Results\n                clear={clear}\n                config={props.config}\n                query={query}\n                response={funnelbackResponse}\n                summariseAs={props.config.summariseAs}\n                type={props.config.resultCard}\n                update={updater}\n                updating={updating}\n            />\n        </form>\n    );\n}\n\nDestinationLeaversHE.propTypes = {\n    config: PropTypes.object,\n    element: PropTypes.object,\n};\n\nexport default DestinationLeaversHE;\n","/**\n * Destination leavers higher education entry\n *\n * @author Web Development\n * @copyright City, University of London 2019\n */\nimport React from 'react';\nimport { render } from 'react-dom';\nimport DestinationHE from './patterns/destination-leavers-higher-ed/destinationHE';\nimport { finderConfig } from './patterns/finder/funnelback';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    if (/(Trident|MSIE)/.test(navigator.userAgent)) {\n        return;\n    } else {\n        const destinations = document.querySelectorAll(\n            '.wrapper--destination-leavers-HE'\n        );\n        destinations &&\n            Array.from(destinations).forEach((destination) => {\n                finderConfig(destination.dataset.config).then((config) => {\n                    render(\n                        <DestinationHE config={config} element={destination} />,\n                        destination\n                    );\n                });\n            });\n    }\n});\n","/**\n * @module patterns/finder/components/finder__checkbox\n * @author Web Development\n * @copyright City, University of London 2019\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Finder__Checkbox(props) {\n    const stringLength = 16,\n        stringOffset = -4,\n        randomNumber = Math.random().toString(stringLength).slice(stringOffset),\n        toggleChecked = props.facet.meta in props.query.facets,\n        responseFacetValue =\n            props.responseFacet[0] &&\n            props.responseFacet[0].categories[0] &&\n            props.responseFacet[0].categories[0].values.filter(\n                (value) =>\n                    value.data.toLowerCase() ===\n                    props.facet.checkedValue.toLowerCase()\n            );\n\n    if (\n        responseFacetValue &&\n        responseFacetValue[0] &&\n        responseFacetValue[0].count > 0\n    ) {\n        const toggleFacet = () => {\n            const newQuery = props.query;\n\n            props.dependencies.map((facet) => {\n                delete newQuery.facets[facet.meta];\n            });\n\n            toggleChecked\n                ? delete newQuery.facets[props.facet.meta]\n                : (newQuery.facets[props.facet.meta] =\n                      props.facet.checkedValue);\n\n            newQuery.startRank = 1;\n            newQuery.misspelling = null;\n            newQuery.interacted = true;\n\n            props.update.query(newQuery);\n            props.update.results(!props.update.updateState);\n        };\n\n        return (\n            <div className=\"finder__filter finder__checkbox\">\n                <input\n                    type=\"checkbox\"\n                    id={`meta_${props.facet.meta}_sand--${randomNumber}`}\n                    name={`meta_${props.facet.meta}_sand`}\n                    value={props.facet.checkedValue}\n                    onChange={() => toggleFacet()}\n                    checked={toggleChecked}\n                />\n                <div\n                    className=\"finder__checkbox__indicator finder__checkbox__indicator\"\n                    aria-hidden=\"true\"\n                    onClick={() => toggleFacet()}\n                >\n                    {toggleChecked ? (\n                        <span className=\"fa fa-fw fas fa-check icon\"></span>\n                    ) : null}\n                </div>\n                <label\n                    className=\"finder__filters__label--always\"\n                    htmlFor={`meta_${props.facet.meta}_sand--${randomNumber}`}\n                >\n                    {props.facet.name}\n                    {!toggleChecked &&\n                        responseFacetValue &&\n                        ' (' + responseFacetValue[0].count + ')'}\n                </label>\n            </div>\n        );\n    } else {\n        return null;\n    }\n}\n\nFinder__Checkbox.propTypes = {\n    facet: PropTypes.object,\n    query: PropTypes.object,\n    responseFacet: PropTypes.arrayOf(PropTypes.object),\n    update: PropTypes.object,\n    dependencies: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default Finder__Checkbox;\n","/**\n * @module patterns/finder/components/finder__tag\n * @author Web Development\n * @copyright City, University of London 2020\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Finder__Tag(props) {\n    const deleteFacet = () => {\n        const newQuery = props.query;\n\n        props.dependencies.map((facet) => {\n            delete newQuery.facets[facet.meta];\n        });\n\n        delete newQuery.facets[props.facet.meta];\n\n        newQuery.startRank = 1;\n        newQuery.misspelling = null;\n        newQuery.interacted = true;\n\n        props.update.query(newQuery);\n        props.update.results(!props.update.updateState);\n    };\n\n    return props.query.facets[props.facet.meta] ? (\n        <div className=\"finder__filter finder__tag\">\n            <button onClick={() => deleteFacet()} type=\"button\">\n                <span\n                    className=\"fa-fw far fa-times icon\"\n                    aria-hidden=\"true\"\n                ></span>\n                <span className=\"finder__tag__text\">\n                    <span className=\"sr-only\">Remove filter for </span>\n                    {props.facet.name}:{' '}\n                    {\n                        props.facet.values.filter(\n                            (value) =>\n                                value.data.toLowerCase() ===\n                                props.query.facets[\n                                    props.facet.meta\n                                ].toLowerCase()\n                        )[0].label\n                    }\n                </span>\n            </button>\n        </div>\n    ) : null;\n}\n\nFinder__Tag.propTypes = {\n    facet: PropTypes.object,\n    query: PropTypes.object,\n    responseFacet: PropTypes.arrayOf(PropTypes.object),\n    update: PropTypes.object,\n    dependencies: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default Finder__Tag;\n","/**\n * Functions for making requests to Funnelback\n *\n * @module funnelback\n * @author Web Development\n * @copyright City, University of London 2019\n */\n\nimport axios from 'axios';\nimport https from 'https';\nimport { axiosRequest } from '../../util.js';\n\n/**\n * LAUNCH: change web2020.city.ac.uk to www.city.ac.uk\n */\nconst baseUrl = 'https://www.city.ac.uk/web-services',\n    findRootUrl = '/funnelback-find',\n    suggestRootUrl = '/funnelback-suggest',\n    maximumSuggestions = 100,\n    timeout = 30000;\n\n/**\n * Funnelback search query.\n *\n * @param {string} collection The Funnelback collection to query.\n * @param {string} [query] The query string.\n * @param {string} [sortType] The field to sort by.\n * @param {integer} startRank The first result to return.\n * @param {integer} numRank The number of results to return.\n * @param {object} [facets] A map of facets to query strings.\n * @return {Promise} - A promise of search results.\n */\nexport function find(\n    collection,\n    fixedFacets,\n    fixedParameters,\n    query,\n    sortType,\n    startRank,\n    numRank,\n    facets,\n    events\n) {\n    const fixedParams = {};\n    fixedParameters.forEach((param) => {\n        fixedParams[`${param.name}`] = param.value;\n    });\n\n    const fixedFacetParams = {};\n    fixedFacets.forEach((facet) => {\n        fixedFacetParams[`meta_${facet.meta}_sand`] = facet.value;\n    });\n\n    const facetParams = {},\n        facetKeys = Object.keys(facets);\n\n    facetKeys.forEach((key) => (facetParams[`meta_${key}_sand`] = facets[key]));\n\n    const CancelToken = axios.CancelToken,\n        call = CancelToken.source(),\n        config = {\n            baseURL: baseUrl,\n            cancelToken: call.token,\n            httpsAgent: new https.Agent({ keepAlive: true }),\n            url: findRootUrl,\n            timeout: timeout,\n            params: {\n                ...fixedParams,\n                ...fixedFacetParams,\n                ...facetParams,\n                collection: collection,\n                num_ranks: numRank,\n                query: query,\n                sort: sortType || '',\n                start_rank: startRank,\n                events: events || '',\n            },\n        };\n\n    return [axiosRequest(config), call];\n}\n\n/**\n * Funnelback suggestion query.\n *\n * @param {string} collection The Funnelback collection to query.\n * @param {string} partialQuery The string to make suggestions for.\n * @return {Promise} - A promise of an array of suggestion strings.\n */\nexport function suggest(collection, partialQuery) {\n    const CancelToken = axios.CancelToken,\n        call = CancelToken.source(),\n        config = {\n            baseURL: baseUrl,\n            cancelToken: call.token,\n            url: suggestRootUrl,\n            timeout: timeout,\n            params: {\n                collection: collection,\n                partial_query: partialQuery,\n                show: maximumSuggestions,\n            },\n        };\n\n    return [axiosRequest(config), call];\n}\n\n/**\n * Finder configuration.\n *\n * @param {string} url The Finder configuration file.\n * @return {Promise} - A promise of  configuration object.\n */\nexport function finderConfig(url) {\n    const config = {\n        timeout: timeout,\n        url: url,\n    };\n\n    return axiosRequest(config);\n}\n"],"sourceRoot":""}