{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/patterns/finder/components/filters/finder__sort.js","webpack:///./src/patterns/finder/components/filters/finder__reset.js","webpack:///./src/patterns/finder/components/cards/finder__results__accommodation.js","webpack:///./src/patterns/finder/components/cards/finder__results__casestudy.js","webpack:///./src/patterns/finder/components/cards/finder__results__centre.js","webpack:///./src/patterns/finder/components/cards/finder__results__contact.js","webpack:///./src/patterns/finder/components/cards/finder__results__course.js","webpack:///./src/patterns/finder/components/cards/finder__results__event.js","webpack:///./src/patterns/finder/components/cards/finder__results__funding.js","webpack:///./src/patterns/finder/components/cards/finder__results__generic.js","webpack:///./src/patterns/finder/components/cards/finder__results__module.js","webpack:///./src/patterns/finder/components/cards/finder__results__news.js","webpack:///./src/patterns/finder/components/cards/finder__results__profile.js","webpack:///./src/patterns/finder/components/cards/finder__results__research.js","webpack:///./src/patterns/finder/components/cards/finder__results__card.js","webpack:///./src/patterns/finder/components/results/formatLabel.js","webpack:///./src/util.js","webpack:///./src/patterns/finder/components/query/finder__query.js","webpack:///./src/patterns/finder/components/filters/finder__select.js","webpack:///./src/patterns/finder/components/filters/finder__filters.js","webpack:///./src/patterns/finder/components/filters/finder__filtersmobile.js","webpack:///./src/patterns/finder/finder.js","webpack:///./src/finder.js","webpack:///./src/patterns/finder/components/filters/finder__checkbox.js","webpack:///./src/patterns/finder/components/filters/finder__tag.js","webpack:///./src/patterns/finder/components/results/finder__pagination.js","webpack:///./src/patterns/finder/components/query/finder__clear.js","webpack:///./src/patterns/finder/components/cards/finder__results__bestbet.js","webpack:///./src/patterns/finder/components/results/finder__didyoumean.js","webpack:///./src/patterns/finder/components/cards/finder__results__promo.js","webpack:///./src/patterns/finder/components/results/finder__results__summary.js","webpack:///./src/patterns/finder/components/results/finder__results.js","webpack:///./src/patterns/finder/funnelback.js"],"names":["randomNumber","Math","validSorts","props","sortType","Object","className","htmlFor","name","id","onChange","newQuery","setSort","e","value","type","Finder__Sort","config","PropTypes","query","update","object","onClick","Finder__Reset","clear","resetSort","bool","calculateTime","thumbnail","src","alt","level","aria-hidden","uppercaseFirstLetterLowercaseRest","features","meta","price","transport","distance","href","subtitle","school","department","centre","subject","jobtitle","email","telephone","room","enquiry","enquiryurl","award","duration","method","location","clearing","external","aria-label","courseCode","formatLabel","shortDate","date","month","formatShortDate","audience","hardship","programme","feestatus","title","term","topic","i","specification","formattedDate","formatReactDate","Date","dateString","hashtags","headshot","thumbnailExist","country","parse","academic","student","degree","status","details","Finder__Results__Accommodation","Finder__Results__CaseStudy","Finder__Results__Centre","Finder__Results__Contact","prev","key","Finder__Results__Course","Finder__Results__Event","Finder__Results__Funding","Finder__Results__Generic","Finder__Results__Module","Finder__Results__News","Finder__Results__Profile","Finder__Results__Research","Finder__Results__Card","string","s","matchFn","removePartials","elem","r","window","parameters","parameterString","parameter","nonInteractionHit","children","screen","array","obj","a","ua","msie","parseInt","rv","edge","el","document","attributes","att","response","axios","gaEvent","dateTime","lastDigit","day","daySuffix","partialMatchFn","fullMatchFn","textInput","useState","c","cancel","useEffect","setPartialQuery","clearQuery","call","setSuggestions","focusInput","submitForm","partialQuery","submitSuggestion","setShowSuggestions","suggestionsList","suggestions","role","showSuggestions","inputId","onBlur","setActiveSuggestionID","onFocus","onMouseDown","onKeyDown","suggestion","input","autoComplete","placeholder","ref","suggest","setCall","newCall","suggestionsPromise","currentValue","allFacets","responseFacets","data","hiddenFacets","facet","setFacet","responseFacetDetails","responseFacetValue","clearFiltersDesktop","clearFiltersMobile","sort","setFacets","facetMap","dependencyMet","responseFacet","funnelbackFacet","dependencies","candidate","focusTrap","setFocusTrap","createFocusTrap","initialFocus","getFilters","onDeactivate","clickOutsideDeactivates","disableBodyScroll","enableBodyScroll","totalMatching","result","totalMatchingMessage","filtersCount","toggle","display","setDisplay","data-filters-applied","filters","disabled","updating","aria-live","param","params","URLSearchParams","initialQuery","collection","facets","getFacetParams","fixedFacets","fixedParameters","misspelling","numRanks","startRank","initialResponse","freeze","bestBets","results","spell","summary","currEnd","currStart","currQuery","currStartRank","currSort","facetLabels","currFacets","hasParams","replaceHistory","setUpdating","scroll","find","requestToken","request","setResponse","newQueryText","setQuery","setUpdate","updater","updateState","queryElement","onSubmit","summariseAs","maximumSuggestions","escapeKey","endKey","homeKey","arrowUp","arrowDown","Finder__Query","Finder__Select","Finder__Filters","func","Finder__FiltersMobile","scrollDuration","reduceMotion","screenOffsetRatio","Finder","element","test","navigator","finders","Array","from","finder","finderConfig","render","toggleChecked","toggleFacet","checked","t","Finder__Checkbox","Finder__Tag","numberOfPages","currentPage","pages","changePage","newStartRank","pageNumber","page","aria-current","aria-expanded","data-proximity","data-pagecount","Finder__Pagination","Finder__Clear","formatter","Intl","matchedPromoGroup","promoConditions","promoDetails","filterFacets","searchFacets","queryFacetsAll","queryFacetsArray","queries","promoCardConditionGroup","matchedPromoGroupDetails","resultsClass","didYouMean","pagination","secondItemOnwards","promoCardConditionMet","firstItemData","secondItemOnwardsData","start","heading","body","linkRef","linkText","card","docNum","resultsContent","Finder__Results__BestBet","Finder__DidYouMean","Finder__Results__Promo","Finder__Results__Summary","Finder__Results","fixedParams","fixedFacetParams","facetParams","facetKeys","cancelToken","httpsAgent","https","keepAlive","events","axiosRequest","show","url","baseUrl","findRootUrl","suggestRootUrl","timeout"],"mappings":"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","file":"finder.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t7: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([191,1,0,4,3,2]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/**\n * @module patterns/finder/components/finder__sort\n * @author Web Development\n * @copyright City, University of London 2020\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Component to change the sort order of the query.\n *\n * @param {object} props React props.\n * @returns {object} - React component.\n */\nfunction Finder__Sort(props) {\n    const stringLength = 16,\n        stringOffset = -4,\n        randomNumber = Math.random().toString(stringLength).slice(stringOffset);\n\n    const setSort = (type) => {\n        const newQuery = props.query;\n\n        newQuery.sortType = type;\n        newQuery.startRank = 1;\n        newQuery.misspelling = null;\n        newQuery.interacted = true;\n\n        props.update.query(newQuery);\n        props.update.results(!props.update.updateState);\n    };\n\n    const validSorts = props.config.sort.filter((sortType) =>\n        sortType.type === ''\n            ? props.query.query !== '' ||\n              Object.keys(props.query.facets).length > 0 ||\n              props.query.sortType === ''\n                ? true\n                : false\n            : true\n    );\n\n    return validSorts.length > 1 ? (\n        <div\n            className={`finder__select--sort finder__select${\n                props.query.sortType !== props.config.sort[0].type\n                    ? ' finder__select--selected'\n                    : ''\n            }`}\n        >\n            <label\n                className=\"finder__select__overline\"\n                htmlFor={`sort--${randomNumber}`}\n            >\n                Sort by\n            </label>\n            <select\n                name=\"sort\"\n                id={`sort--${randomNumber}`}\n                onChange={(e) => setSort(e.target.value)}\n                value={props.query.sortType}\n            >\n                {validSorts.map((sortType, i) => {\n                    return (\n                        <option key={i} value={sortType.type}>\n                            {sortType.label}\n                        </option>\n                    );\n                })}\n            </select>\n        </div>\n    ) : null;\n}\n\nFinder__Sort.propTypes = {\n    config: PropTypes.object,\n    query: PropTypes.object,\n    update: PropTypes.object,\n};\n\nexport default Finder__Sort;\n","/**\n * @module patterns/finder/components/filters/finder__reset\n * @author Web Development\n * @copyright City, University of London 2019\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Clear input button.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction Finder__Reset(props) {\n    return (\n        <button\n            className=\"finder__reset\"\n            type=\"button\"\n            onClick={() => {\n                props.clear(props.resetSort);\n            }}\n        >\n            <span className=\"far fa-fw fa-times icon\" />\n            <span className=\"finder__reset__text\">Reset</span>\n        </button>\n    );\n}\n\nFinder__Reset.propTypes = {\n    clear: PropTypes.func,\n    resetSort: PropTypes.bool,\n};\n\nexport default Finder__Reset;\n","/**\n * @module patterns/finder/components/cards/finder__results__accommodation\n * @author Web Development\n * @copyright City, University of London 2020\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { uppercaseFirstLetterLowercaseRest } from '../../../../util';\n\n/**\n * Render a Funnelback result as an accommodation card.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction Finder__Results__Accommodation(props) {\n    const mph = 60,\n        calculateTime = (minutes) =>\n            Math.floor(minutes / mph) > 0\n                ? Math.floor(minutes / mph) + ' hour ' + (minutes % mph)\n                : minutes,\n        thumbnail = props.details.metaData.thumbnail && (\n            <img\n                src={props.details.metaData.thumbnail}\n                alt=\"\"\n                className=\"card__thumbnail\"\n            />\n        ),\n        level = props.details.metaData.level && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-graduation-cap icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span className=\"sr-only\">Level:</span>{' '}\n                <span>\n                    {uppercaseFirstLetterLowercaseRest(\n                        props.details.metaData.level\n                    )\n                        .split('|')\n                        .join(' or ')}\n                </span>\n            </p>\n        ),\n        features = Object.keys(props.details.metaData)\n            .filter(\n                (meta) =>\n                    ['accessible', 'catered', 'ensuite'].includes(meta) &&\n                    props.details.metaData[meta] === 'Yes'\n            )\n            .map((meta) => meta.replace(/ensuite/, 'en suite'))\n            .sort()\n            .join(', '),\n        type = props.details.metaData.type && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-building icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span className=\"sr-only\">Type:</span>{' '}\n                <span>\n                    {props.details.metaData.type.split('|').length > 2\n                        ? uppercaseFirstLetterLowercaseRest(\n                              props.details.metaData.type\n                          )\n                              .split('|')\n                              .slice(0, -1)\n                              .join(', ') +\n                          ' or ' +\n                          uppercaseFirstLetterLowercaseRest(\n                              props.details.metaData.type\n                          )\n                              .split('|')\n                              .slice(-1)\n                        : uppercaseFirstLetterLowercaseRest(\n                              props.details.metaData.type\n                          )\n                              .split('|')\n                              .join(' or ')}\n                    {features && ' (' + features + ')'}\n                </span>\n            </p>\n        ),\n        price = props.details.metaData.price && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-pound-sign icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span className=\"sr-only\">Price:</span>{' '}\n                <span>\n                    {props.details.metaData.price} (\n                    {props.details.metaData.deposit} deposit)\n                </span>\n            </p>\n        ),\n        transport = props.details.metaData.transport && (\n            <React.Fragment>\n                {' '}\n                ({calculateTime(props.details.metaData.transport)} minutes by\n                public transport)\n            </React.Fragment>\n        ),\n        distance = props.details.metaData.walk && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-walking icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span className=\"sr-only\">\n                    Distance to Northampton Square campus:\n                </span>{' '}\n                <span>\n                    {calculateTime(props.details.metaData.walk)} minutes walk to\n                    campus\n                    {transport}\n                </span>\n            </p>\n        );\n\n    return (\n        <li className=\"card card--accommodation\">\n            <a\n                href={props.details.clickTrackingUrl}\n                className=\"card__anchor card__details\"\n            >\n                {thumbnail}\n                <div className=\"card__details__text\">\n                    <h3 className=\"card__heading\">{props.details.title}</h3>\n                    {distance}\n                    {type}\n                    {price}\n                    {level}\n                </div>\n            </a>\n        </li>\n    );\n}\n\nFinder__Results__Accommodation.propTypes = {\n    details: PropTypes.object,\n};\n\nexport default Finder__Results__Accommodation;\n","/**\n * @module patterns/finder/components/cards/finder__results__casestudy\n * @author Web Development\n * @copyright City, University of London 2020\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Render a Funnelback result as a case study card.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction Finder__Results__CaseStudy(props) {\n    const subtitle = props.details.metaData.status ? (\n            <p className=\"card__type\">{props.details.metaData.status}</p>\n        ) : (\n            props.details.metaData.type && (\n                <p className=\"card__type\">{props.details.metaData.type}</p>\n            )\n        ),\n        school = props.details.metaData.school && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-university icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span>School:</span>{' '}\n                <span>\n                    {props.details.metaData.school.split('|').length > 2\n                        ? props.details.metaData.school\n                              .split('|')\n                              .slice(0, -1)\n                              .join(', ') +\n                          ', and ' +\n                          props.details.metaData.school.split('|').slice(-1)\n                        : props.details.metaData.school\n                              .split('|')\n                              .join(', and ')}\n                </span>\n            </p>\n        ),\n        department = props.details.metaData.department && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-building icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span>Department:</span>{' '}\n                <span>\n                    {props.details.metaData.department.split('|').length > 2\n                        ? props.details.metaData.department\n                              .split('|')\n                              .slice(0, -1)\n                              .join(', ') +\n                          ', and ' +\n                          props.details.metaData.department.split('|').slice(-1)\n                        : props.details.metaData.department\n                              .split('|')\n                              .join(', and ')}\n                </span>\n            </p>\n        ),\n        centre = props.details.metaData.centre && (\n            <p className=\"card__tag\">\n                <span className=\"fas fa-fw fa-vial icon\" aria-hidden=\"true\" />{' '}\n                <span>Research centre:</span>{' '}\n                <span>\n                    {props.details.metaData.centre.split('|').length > 2\n                        ? props.details.metaData.centre\n                              .split('|')\n                              .slice(0, -1)\n                              .join(', ') +\n                          ', and ' +\n                          props.details.metaData.centre.split('|').slice(-1)\n                        : props.details.metaData.centre\n                              .split('|')\n                              .join(', and ')}\n                </span>\n            </p>\n        );\n\n    return (\n        <li className=\"card card--casestudy\">\n            <a\n                href={props.details.clickTrackingUrl}\n                className=\"card__anchor card__details\"\n            >\n                <div className=\"card__details__text\">\n                    <h3 className=\"card__heading\">{props.details.title}</h3>\n                    {subtitle}\n                    <p className=\"card__description\">\n                        {props.details.metaData.c && props.details.metaData.c}\n                    </p>\n                    {school}\n                    {department}\n                    {centre}\n                </div>\n            </a>\n        </li>\n    );\n}\n\nFinder__Results__CaseStudy.propTypes = {\n    details: PropTypes.object,\n};\n\nexport default Finder__Results__CaseStudy;\n","/**\n * @module patterns/finder/components/cards/finder__results__centre\n * @author Web Development\n * @copyright City, University of London 2020\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { uppercaseFirstLetterLowercaseRest } from '../../../../util';\n\n/**\n * Render a Funnelback result as a centre card.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction Finder__Results__Centre(props) {\n    const school = props.details.metaData.school && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-university icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span>School:</span>{' '}\n                <span>\n                    {props.details.metaData.school.split('|').length > 2\n                        ? props.details.metaData.school\n                              .split('|')\n                              .slice(0, -1)\n                              .join(', ') +\n                          ', and ' +\n                          props.details.metaData.school.split('|').slice(-1)\n                        : props.details.metaData.school\n                              .split('|')\n                              .join(', and ')}\n                </span>\n            </p>\n        ),\n        department = props.details.metaData.department && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-building icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span>Department:</span>{' '}\n                <span>\n                    {props.details.metaData.department.split('|').length > 2\n                        ? props.details.metaData.department\n                              .split('|')\n                              .slice(0, -1)\n                              .join(', ') +\n                          ', and ' +\n                          props.details.metaData.department.split('|').slice(-1)\n                        : props.details.metaData.department\n                              .split('|')\n                              .join(', and ')}\n                </span>\n            </p>\n        ),\n        subject = props.details.metaData.related && (\n            <p className=\"card__type\">\n                {props.details.metaData.related.split('|').length > 2\n                    ? uppercaseFirstLetterLowercaseRest(\n                          props.details.metaData.related\n                      )\n                          .split('|')\n                          .slice(0, -1)\n                          .join(', ') +\n                      ' and ' +\n                      uppercaseFirstLetterLowercaseRest(\n                          props.details.metaData.related\n                      )\n                          .split('|')\n                          .slice(-1)\n                    : uppercaseFirstLetterLowercaseRest(\n                          props.details.metaData.related\n                      )\n                          .split('|')\n                          .join(' and ')}\n            </p>\n        );\n    return (\n        <li className=\"card card--centre\">\n            <a\n                href={props.details.clickTrackingUrl}\n                className=\"card__anchor card__details\"\n            >\n                <div className=\"card__details__text\">\n                    <h3 className=\"card__heading\">{props.details.title}</h3>\n                    {subject}\n                    <p className=\"card__description\">\n                        {props.details.metaData.c && props.details.metaData.c}\n                    </p>\n                    {school}\n                    {department}\n                </div>\n            </a>\n        </li>\n    );\n}\n\nFinder__Results__Centre.propTypes = {\n    details: PropTypes.object,\n    query: PropTypes.object,\n};\n\nexport default Finder__Results__Centre;\n","/**\n * @module patterns/finder/components/cards/finder__results__contact\n * @author Web Development\n * @copyright City, University of London 2019\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Render a Funnelback result as a contact card.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction Finder__Results__Contact(props) {\n    const department = props.details.metaData.department && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-building icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span>Department:</span> {props.details.metaData.department}\n            </p>\n        ), \n        school = props.details.metaData.school && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-university icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span>School:</span> {props.details.metaData.school}\n            </p>\n        ),\n        jobtitle = props.details.metaData.jobtitle && (\n            <p className=\"card__type\">{props.details.metaData.jobtitle}</p>\n        ),\n        email = props.details.metaData.email && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-envelope icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span>Email:</span>{' '}\n                <a href={'mailto:' + props.details.metaData.email}>\n                    {props.details.metaData.email}\n                </a>\n            </p>\n        ),\n        telephone = props.details.metaData.telephone && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-phone fa-rotate-90 icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span>Telephone:</span>{' '}\n                <a href={'tel:' + props.details.metaData.telephone}>\n                    {props.details.metaData.friendlytelephone}\n                </a>\n            </p>\n        ),\n        room = props.details.metaData.room && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-door-open icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span>Room:</span> {props.details.metaData.room}\n            </p>\n        ),\n        enquiry = props.details.metaData.enquiryurl && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-edit icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span>Enquiries:</span> <a href={props.details.metaData.enquiryurl}>{props.details.metaData.enquirylabel}</a>\n            </p>\n        );\n\n    return (\n        <li className=\"card card--contact\">\n            <div className=\"card__details\">\n                <div className=\"card__details__text\">\n                    <h3 className=\"card__heading\">{props.details.title}</h3>\n                    {jobtitle}\n                    {school}\n                    {department}\n                    {room}\n                    {email}\n                    {telephone}\n                    {enquiry}\n                </div>\n            </div>\n        </li>\n    );\n}\n\nFinder__Results__Contact.propTypes = {\n    details: PropTypes.object,\n};\n\nexport default Finder__Results__Contact;\n","/**\n * @module patterns/finder/components/cards/finder__results__course\n * @author Web Development\n * @copyright City, University of London 2019\n */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport formatLabel from '../results/formatLabel';\nimport { uppercaseFirstLetterLowercaseRest } from '../../../../util';\n\n/**\n * Render a Funnelback result as a course card.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction Finder__Results__Course(props) {\n    const subtitle =\n            props.details.metaData.type || props.details.metaData.level || null,\n        award = props.details.metaData.qualification && (\n            <p className=\"card__tag\">\n                <span className=\"fas fa-fw fa-award icon\" aria-hidden=\"true\" />{' '}\n                <span>\n                    Award\n                    {props.details.metaData.qualification.split('|').length >\n                        1 && 's'}\n                    :\n                </span>{' '}\n                <span>\n                    {props.details.metaData.qualification.split('|').join(', ')}\n                </span>\n            </p>\n        ),\n        duration = props.details.metaData.duration && (\n            <p className=\"card__tag\">\n                <span className=\"fal fa-fw fa-clock icon\" aria-hidden=\"true\" />{' '}\n                <span>Duration:</span>{' '}\n                <span>{props.details.metaData.duration}</span>\n            </p>\n        ),\n        method = props.details.metaData.method &&\n            props.details.metaData.level !==\n                'Short courses and professional development' &&\n            ((props.query.facets && props.query.facets.method) ||\n                props.query.query.indexOf(props.details.metaData.method) >= 0 ||\n                props.details.metaData.method.indexOf('Online') >= 0) && (\n                <p className=\"card__tag\">\n                    <span\n                        className=\"fas fa-fw fa-book-reader icon\"\n                        aria-hidden=\"true\"\n                    />{' '}\n                    <span>\n                        Method\n                        {props.details.metaData.method.split('|').length > 1 &&\n                            's'}{' '}\n                        of study:\n                    </span>{' '}\n                    <span>\n                        {uppercaseFirstLetterLowercaseRest(\n                            props.details.metaData.method\n                        )\n                            .split('|')\n                            .join(', ')}\n                    </span>\n                </p>\n            ),\n        location = props.details.metaData.location &&\n            props.query.facets &&\n            props.query.facets.location && (\n                <p className=\"card__tag\">\n                    <span\n                        className=\"fas fa-fw fa-map-marker-alt icon\"\n                        aria-hidden=\"true\"\n                    />{' '}\n                    <span>Location:</span>{' '}\n                    <span>\n                        {/* Avoid duplication of 'Online' location label if location and method of study are both online */}\n                        {props.details.metaData.location === 'Online|Online'\n                            ? 'Online'\n                            : props.details.metaData.location\n                                  .split('|')\n                                  .join(', ')}\n                    </span>\n                </p>\n            ),\n        school = props.details.metaData.school && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-university icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span>School:</span>{' '}\n                <span>{props.details.metaData.school}</span>\n            </p>\n        ),\n        // City and Business School use different metadata values; check for both\n        clearing = ['Yes', 'yes'].includes(props.details.metaData.clearing) && (\n            <div className=\"card__label card--course__label--clearing\">\n                <p className=\"card__label card--course__label--clearing\">\n                    Clearing\n                </p>\n            </div>\n        ),\n        external = props.details.indexUrl.indexOf('cass.city.ac.uk') >= 0 && (\n            <>\n                {' '}\n                <span\n                    className=\"fas fa-external-link icon\"\n                    aria-label=\"(external link)\"\n                ></span>\n            </>\n        ),\n        courseCode =\n            props.details.metaData.code &&\n            ([\n                'Undergraduate degree',\n                'Foundation course',\n                'Postgraduate taught degree',\n            ].some((s) => props.details.metaData.level.indexOf(s) >= 0) ||\n                props.query.query.indexOf(props.details.metaData.code) >= 0) ? (\n                <p className=\"card__tag\">\n                    <span\n                        className=\"fas fa-fw fa-graduation-cap icon\"\n                        aria-hidden=\"true\"\n                    />{' '}\n                    <span>\n                        Course code\n                        {props.details.metaData.code.split('|').length > 1 &&\n                            's'}\n                        :\n                    </span>{' '}\n                    <span>\n                        {props.details.metaData.code.split('|').join('/')}\n                    </span>\n                </p>\n            ) : null;\n\n    return (\n        <li className=\"card card--course\">\n            <a\n                href={props.details.clickTrackingUrl}\n                className=\"card__anchor card__details\"\n            >\n                <div className=\"wrapper--card__label__details\">\n                    {clearing}\n                    <div className=\"card__details__text\">\n                        <h3 className=\"card__heading\">\n                            {props.query.query\n                                ? formatLabel(\n                                      props.details.title,\n                                      props.query.query\n                                  )\n                                : props.details.title}\n                            {external}\n                        </h3>\n                        <p className=\"card__type\">\n                            {props.query.query\n                                ? formatLabel(subtitle, props.query.query)\n                                : subtitle && subtitle}\n                        </p>\n                        <p className=\"card__description\">\n                            {props.query.query\n                                ? formatLabel(\n                                      props.details.metaData.c,\n                                      props.query.query\n                                  )\n                                : props.details.metaData.c &&\n                                  props.details.metaData.c}\n                        </p>\n                        {school}\n                        {award}\n                        {duration}\n                        {courseCode}\n                        {method}\n                        {location}\n                    </div>\n                </div>\n            </a>\n        </li>\n    );\n}\n\nFinder__Results__Course.propTypes = {\n    details: PropTypes.object,\n    query: PropTypes.object,\n};\n\nexport default Finder__Results__Course;\n","/**\n * @module patterns/finder/components/cards/finder__results__event\n * @author Web Development\n * @copyright City, University of London 2020\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n// import { formatReactDate } from '../../../../util';\n\nfunction formatShortDate(dateString) {\n    const months = [\n            'Jan',\n            'Feb',\n            'Mar',\n            'Apr',\n            'May',\n            'Jun',\n            'Jul',\n            'Aug',\n            'Sep',\n            'Oct',\n            'Nov',\n            'Dec',\n        ],\n        date = new Date(dateString),\n        month = months[date.getUTCMonth()];\n\n    return (\n        <p className=\"card--event__label--shortdate\">\n            {month} <span>{date.getUTCDate()}</span>\n        </p>\n    );\n}\n\n/**\n * Render a Funnelback result as an event card.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction Finder__Results__Event(props) {\n    const shortDate =\n            props.details.metaData.d &&\n            formatShortDate(props.details.metaData.d.split('|')[0]),\n        location = props.details.metaData.location && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw icon fa-map-marker-alt\"\n                    aria-hidden=\"true\"\n                ></span>{' '}\n                <span>Location:</span>{' '}\n                <span>\n                    {props.details.metaData.location.split('|').join(', ')}\n                </span>\n            </p>\n        ),\n        audience = props.details.metaData.audience && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw icon fa-users\"\n                    aria-hidden=\"true\"\n                ></span>{' '}\n                <span>Audience:</span>{' '}\n                <span>{props.details.metaData.audience}</span>\n            </p>\n        ),\n        thumbnail = props.details.metaData.thumbnail && (\n            <img\n                src={props.details.metaData.thumbnail}\n                alt=\"\"\n                className=\"card__thumbnail\"\n            />\n        );\n\n    return (\n        <li className=\"card card--event card--landscape\">\n            <a\n                href={props.details.clickTrackingUrl}\n                className=\"card__anchor card__details\"\n            >\n                {thumbnail}\n                {shortDate}\n                <div className=\"card__details__text\">\n                    <h3 className=\"card__heading\">{props.details.title}</h3>\n                    <p className=\"card__description\">\n                        {props.details.metaData.c && props.details.metaData.c}\n                    </p>\n                    {location}\n                    {audience}\n                </div>\n            </a>\n        </li>\n    );\n}\n\nFinder__Results__Event.propTypes = {\n    details: PropTypes.object,\n};\n\nexport default Finder__Results__Event;\n","/**\n * @module patterns/finder/components/cards/finder__results__funding\n * @author Web Development\n * @copyright City, University of London 2020\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { uppercaseFirstLetterLowercaseRest } from '../../../../util';\n\n/**\n * Render a Funnelback result as a funding card.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction Finder__Results__Funding(props) {\n    const school = props.details.metaData.school &&\n            props.query.facets &&\n            props.query.facets.school && (\n                <p className=\"card__tag\">\n                    <span\n                        className=\"fas fa-fw fa-university icon\"\n                        aria-hidden=\"true\"\n                    />{' '}\n                    <span>School:</span>{' '}\n                    <span>\n                        {props.details.metaData.school.split('|').length > 2\n                            ? props.details.metaData.school\n                                  .split('|')\n                                  .slice(0, -1)\n                                  .join(', ') +\n                              ', or ' +\n                              props.details.metaData.school.split('|').slice(-1)\n                            : props.details.metaData.school\n                                  .split('|')\n                                  .join(', or ')}\n                    </span>\n                </p>\n            ),\n        hardship = props.details.metaData.hardship === '1' && (\n            <div className=\"card--funding__label--hardship\">\n                <p>Hardship funding</p>\n            </div>\n        ),\n        programme = props.details.metaData.level && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-graduation-cap icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span>Funding for:</span>{' '}\n                <span>\n                    {props.details.metaData.level.split('|').length > 2\n                        ? uppercaseFirstLetterLowercaseRest(\n                              props.details.metaData.level\n                          )\n                              .split('|')\n                              .slice(0, -1)\n                              .join(', ') +\n                          ' or ' +\n                          uppercaseFirstLetterLowercaseRest(\n                              props.details.metaData.level\n                          )\n                              .split('|')\n                              .slice(-1)\n                        : uppercaseFirstLetterLowercaseRest(\n                              props.details.metaData.level\n                          )\n                              .split('|')\n                              .join(' or ')}\n                </span>\n            </p>\n        ),\n        feestatus = props.details.metaData.feestatus && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"far fa-fw fa-globe-europe icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span>Fee status:</span>{' '}\n                <span>\n                    {props.details.metaData.feestatus.split('|').length > 2\n                        ? props.details.metaData.feestatus\n                              .split('|')\n                              .slice(0, -1)\n                              .join(', ') +\n                          ' or ' +\n                          props.details.metaData.feestatus.split('|').slice(-1)\n                        : props.details.metaData.feestatus\n                              .split('|')\n                              .join(' or ')}\n                </span>\n            </p>\n        );\n\n    return (\n        <li className=\"card card--funding\">\n            <a\n                href={props.details.clickTrackingUrl}\n                className=\"card__anchor card__details\"\n            >\n                {hardship}\n                <div className=\"card__details__text\">\n                    <h3 className=\"card__heading\">{props.details.title}</h3>\n                    <p className=\"card__type\">{props.details.metaData.type}</p>\n                    <p className=\"card__description\">\n                        {props.details.metaData.c && props.details.metaData.c}\n                    </p>\n                    {programme}\n                    {feestatus}\n                    {school}\n                </div>\n            </a>\n        </li>\n    );\n}\n\nFinder__Results__Funding.propTypes = {\n    details: PropTypes.object,\n    query: PropTypes.object,\n};\n\nexport default Finder__Results__Funding;\n","/**\n * @module patterns/finder/components/cards/finder__results__generic\n * @author Web Development\n * @copyright City, University of London 2019\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Render a Funnelback result as a generic card.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction Finder__Results__Generic(props) {\n    const school = props.details.metaData.school && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-university icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span>School:</span>{' '}\n                <span>\n                    {props.details.metaData.school.split('|').length > 2\n                        ? props.details.metaData.school\n                              .split('|')\n                              .slice(0, -1)\n                              .join(', ') +\n                          ', and ' +\n                          props.details.metaData.school.split('|').slice(-1)\n                        : props.details.metaData.school\n                              .split('|')\n                              .join(', and ')}\n                </span>\n            </p>\n        ),\n        department = props.details.metaData.department && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-building icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span>Department:</span>{' '}\n                <span>\n                    {props.details.metaData.department.split('|').length > 2\n                        ? props.details.metaData.department\n                              .split('|')\n                              .slice(0, -1)\n                              .join(', ') +\n                          ', and ' +\n                          props.details.metaData.department.split('|').slice(-1)\n                        : props.details.metaData.department\n                              .split('|')\n                              .join(', and ')}\n                </span>\n            </p>\n        );\n\n    return (\n        <li className=\"card card--generic\">\n            <a\n                href={props.details.clickTrackingUrl}\n                className=\"card__anchor card__details\"\n            >\n                <div className=\"card__details__text\">\n                    <h3 className=\"card__heading\">{props.details.title}</h3>\n                    <p className=\"card__description\">\n                        {props.details.metaData.c && props.details.metaData.c}\n                    </p>\n                    {school}\n                    {department}\n                </div>\n            </a>\n        </li>\n    );\n}\n\nFinder__Results__Generic.propTypes = {\n    details: PropTypes.object,\n};\n\nexport default Finder__Results__Generic;\n","/**\n * @module patterns/finder/components/cards/finder__results__module\n * @author Web Development\n * @copyright City, University of London 2020\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Render a Funnelback result as a module card.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction Finder__Results__Module(props) {\n    const location = props.details.metaData.location && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-map-marker-alt icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span>Location:</span>{' '}\n                <span>{props.details.metaData.location}</span>\n            </p>\n        ),\n        title = props.details.metaData.code ? (\n            <React.Fragment>\n                <span className=\"card--module__code\">\n                    {props.details.metaData.code}\n                </span>{' '}\n                <span>{props.details.title}</span>\n            </React.Fragment>\n        ) : (\n            <React.Fragment>\n                <span>{props.details.title}</span>\n            </React.Fragment>\n        ),\n        school = props.details.metaData.school && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-university icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span>School:</span>{' '}\n                <span>\n                    {props.details.metaData.school.split('|').length > 2\n                        ? props.details.metaData.school\n                              .split('|')\n                              .slice(0, -1)\n                              .join(', ') +\n                          ', and ' +\n                          props.details.metaData.school.split('|').slice(-1)\n                        : props.details.metaData.school\n                              .split('|')\n                              .join(', and ')}\n                </span>\n            </p>\n        ),\n        term = props.details.metaData.term && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"far fa-fw fa-calendar icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span>Semester:</span>{' '}\n                <span>\n                    {props.details.metaData.term.split('|').length > 2\n                        ? 'All year'\n                        : props.details.metaData.term.split('|').join(' or ')}\n                </span>\n            </p>\n        ),\n        topic = props.details.metaData.related && (\n            <p className=\"card__type\">\n                {props.details.metaData.related\n                    .split('|')\n                    .sort()\n                    .map((topic, i) => (i > 0 ? topic.toLowerCase() : topic))\n                    .join(', ')}\n            </p>\n        ),\n        specification = props.details.metaData.specification && (\n            <p className=\"card__tag\">\n                <span className=\"far fa-fw fa-file-pdf icon\" aria-label=\"PDF\" />{' '}\n                <a href={props.details.metaData.specification}>\n                    Download module specification\n                </a>\n            </p>\n        );\n\n    return (\n        <li className=\"card card--module\">\n            <div className=\"card__details\">\n                <div className=\"card__details__text\">\n                    <h3 className=\"card__heading\">{title}</h3>\n                    {topic}\n                    <p className=\"card__description\">\n                        {props.details.metaData.c}\n                    </p>\n                    {term}\n                    {school}\n                    {location}\n                    {specification}\n                </div>\n            </div>\n        </li>\n    );\n}\n\nFinder__Results__Module.propTypes = {\n    details: PropTypes.object,\n    query: PropTypes.object,\n};\n\nexport default Finder__Results__Module;\n","/**\n * @module patterns/finder/components/cards/finder__results__news\n * @author Web Development\n * @copyright City, University of London 2020\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatReactDate } from '../../../../util';\n\n/**\n * Render a Funnelback result as a generic card.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction Finder__Results__News(props) {\n    const formattedDate = formatReactDate(new Date(props.details.metaData.d)),\n        dateString = props.details.metaData.d && (\n            <p className=\"card__type\">{formattedDate}</p>\n        ),\n        hashtags = props.details.metaData.hashtagtext && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fad fa-fw fa-hashtag icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span>\n                    Hashtag\n                    {props.details.metaData.hashtagtext.split('|').length > 1 &&\n                        's'}\n                    :\n                </span>{' '}\n                <span>\n                    {props.details.metaData.hashtagtext.split('|').join(', ')}\n                </span>\n            </p>\n        ),\n        thumbnail = props.details.metaData.thumbnail && (\n            <img\n                src={props.details.metaData.thumbnail}\n                alt=\"\"\n                className=\"card__thumbnail\"\n            />\n        );\n\n    return (\n        <li className=\"card card--news\">\n            <a\n                href={props.details.clickTrackingUrl}\n                className=\"card__anchor card__details\"\n            >\n                {thumbnail}\n                <div className=\"card__details__text\">\n                    {dateString}\n                    <h3 className=\"card__heading\">{props.details.title}</h3>\n                    <p className=\"card__description\">\n                        {props.details.metaData.c && props.details.metaData.c}\n                    </p>\n                    {hashtags}\n                </div>\n            </a>\n        </li>\n    );\n}\n\nFinder__Results__News.propTypes = {\n    details: PropTypes.object,\n};\n\nexport default Finder__Results__News;\n","/**\n * @module patterns/finder/components/cards/finder__results__profile\n * @author Web Development\n * @copyright City, University of London 2019\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Render a Funnelback result as a profile card.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction Finder__Results__Profile(props) {\n    const school = props.details.metaData.school && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-university icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span>School:</span> {props.details.metaData.school}\n            </p>\n        ),\n        department = props.details.metaData.department && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-building icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span>Department:</span> {props.details.metaData.department}\n            </p>\n        ),\n        headshot = props.details.metaData.thumbnail && (\n            <div className=\"card__thumbnail\">\n                <img\n                    src={props.details.metaData.thumbnail}\n                    alt={'Photo of ' + props.details.title}\n                />\n            </div>\n        ),\n        thumbnailExist =\n            props.details.metaData.thumbnail &&\n            'card--profile--thumbnailAvailable',\n        country = props.query.facets &&\n            props.query.facets.country &&\n            props.details.metaData.country && (\n                <div className=\"card__tag\">\n                    <span\n                        className=\"fad fa-fw fa-globe-europe icon\"\n                        aria-hidden=\"true\"\n                    />{' '}\n                    <span>Country:</span>{' '}\n                    {props.details.metaData.country.split('|').length > 2\n                        ? props.details.metaData.country\n                              .split('|')\n                              .slice(0, -1)\n                              .join(', ') +\n                          ' and ' +\n                          props.details.metaData.country.split('|').slice(-1)\n                        : props.details.metaData.country\n                              .split('|')\n                              .join(' and ')}\n                </div>\n            );\n\n    return (\n        <li className=\"card card--profile\">\n            <a\n                href={props.details.clickTrackingUrl}\n                className={`card__anchor card__details ${thumbnailExist}`}\n            >\n                {headshot}\n                <div className=\"card__details__text\">\n                    <h3 className=\"card__heading\">{props.details.title}</h3>\n                    <p className=\"card__type\">\n                        {props.details.metaData.jobtitle}\n                    </p>\n                    {school}\n                    {department}\n                    {country}\n                </div>\n            </a>\n        </li>\n    );\n}\n\nFinder__Results__Profile.propTypes = {\n    details: PropTypes.object,\n    query: PropTypes.object,\n};\n\nexport default Finder__Results__Profile;\n","/**\n * @module patterns/finder/components/cards/finder__results__research\n * @author Web Development\n * @copyright City, University of London 2021\n */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport parse from 'html-react-parser';\n\n/**\n * Render a Funnelback result as a PhD research project card.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction Finder__Results__Research(props) {\n    const school = props.details.metaData.school && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-university icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span>School:</span>{' '}\n                <span>\n                    {props.details.metaData.school.split('|').length > 2\n                        ? props.details.metaData.school\n                              .split('|')\n                              .slice(0, -1)\n                              .join(', ') +\n                          ' and ' +\n                          props.details.metaData.school.split('|').slice(-1)\n                        : props.details.metaData.school\n                              .split('|')\n                              .join(' and ')}\n                </span>\n            </p>\n        ),\n        department = props.details.metaData.department && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-building icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span>Department:</span>{' '}\n                <span>\n                    {props.details.metaData.department.split('|').length > 2\n                        ? props.details.metaData.department\n                              .split('|')\n                              .slice(0, -1)\n                              .join(', ') +\n                          ' and ' +\n                          props.details.metaData.department.split('|').slice(-1)\n                        : props.details.metaData.department\n                              .split('|')\n                              .join(' and ')}\n                </span>\n            </p>\n        ),\n        centre = props.details.metaData.researchcentre && (\n            <p className=\"card__tag\">\n                <span className=\"fas fa-fw fa-vial icon\" aria-hidden=\"true\" />{' '}\n                {props.details.metaData.researchcentre.split('|').length > 1 ? (\n                    <span>Reseearch centres: </span>\n                ) : (\n                    <span>Reseearch centre: </span>\n                )}\n                <span>\n                    {props.details.metaData.researchcentre.split('|').length > 2\n                        ? parse(props.details.metaData.researchcentre)\n                              .split('|')\n                              .slice(0, -1)\n                              .join(', ') +\n                          ' and ' +\n                          parse(\n                              props.details.metaData.researchcentre\n                                  .split('|')\n                                  .slice(-1)\n                          )\n                        : parse(\n                              props.details.metaData.researchcentre\n                                  .split('|')\n                                  .join(' and ')\n                          )}\n                </span>\n            </p>\n        ),\n        academic = props.details.metaData.academic && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"fas fa-fw fa-chalkboard-teacher icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                {props.details.metaData.academic.split('|').length > 1 ? (\n                    <span>Academics: </span>\n                ) : (\n                    <span>Academic: </span>\n                )}\n                <span>\n                    {props.details.metaData.academic.split('|').length > 2\n                        ? parse(\n                              props.details.metaData.academic\n                                  .split('|')\n                                  .slice(0, -1)\n                                  .join(', ') +\n                                  ' and ' +\n                                  props.details.metaData.academic\n                                      .split('|')\n                                      .slice(-1)\n                          )\n                        : parse(\n                              props.details.metaData.academic\n                                  .split('|')\n                                  .join(' and ')\n                          )}\n                </span>\n            </p>\n        ),\n        student = props.details.metaData.student && (\n            <p className=\"card__tag\">\n                <span className=\"fas fa-fw fa-users icon\" aria-hidden=\"true\" />{' '}\n                {props.details.metaData.student.split('|').length > 1 ? (\n                    <span>Students: </span>\n                ) : (\n                    <span>Student: </span>\n                )}\n                <span>\n                    {props.details.metaData.student.split('|').length > 2\n                        ? parse(\n                              props.details.metaData.student\n                                  .split('|')\n                                  .slice(0, -1)\n                                  .join(', ') +\n                                  ' and ' +\n                                  props.details.metaData.student\n                                      .split('|')\n                                      .slice(-1)\n                          )\n                        : parse(\n                              props.details.metaData.student\n                                  .split('|')\n                                  .join(' and ')\n                          )}\n                </span>\n            </p>\n        ),\n        degree = props.details.metaData.relatedDegree && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"far fa-fw fa-diploma icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                {props.details.metaData.relatedDegree.split('|').length > 1 ? (\n                    <span>Related degrees: </span>\n                ) : (\n                    <span>Related degree: </span>\n                )}\n                <span>\n                    {props.details.metaData.relatedDegree.split('|').length > 2\n                        ? parse(\n                              props.details.metaData.relatedDegree\n                                  .split('|')\n                                  .slice(0, -1)\n                                  .join(', ') +\n                                  ' and ' +\n                                  props.details.metaData.relatedDegree\n                                      .split('|')\n                                      .slice(-1)\n                          )\n                        : parse(\n                              props.details.metaData.relatedDegree\n                                  .split('|')\n                                  .join(' and ')\n                          )}\n                </span>\n            </p>\n        ),\n        status = props.details.metaData.status && (\n            <p className=\"card__tag\">\n                <span\n                    className=\"far fa-fw fa-hourglass icon\"\n                    aria-hidden=\"true\"\n                />{' '}\n                <span>Status:</span>{' '}\n                <span>{props.details.metaData.status} </span>\n                {props.details.metaData.status === 'Completed project' ? (\n                    <span\n                        className=\"far fa-fw fa-check-circle icon\"\n                        aria-hidden=\"true\"\n                    />\n                ) : null}\n            </p>\n        );\n\n    return (\n        <li className=\"card card--research\">\n            <div className=\"card__details\">\n                <div className=\"card__details__text\">\n                    <h3 className=\"card--research__title-link\">\n                        {props.details.title}\n                    </h3>\n                    <p className=\"card__description\">\n                        {props.details.metaData.c && props.details.metaData.c}\n                    </p>\n                    {school}\n                    {department}\n                    {centre}\n                    {degree}\n                    {academic}\n                    {student}\n                    {status}\n                </div>\n            </div>\n        </li>\n    );\n}\n\nFinder__Results__Research.propTypes = {\n    details: PropTypes.object,\n};\n\nexport default Finder__Results__Research;\n","/**\n * @module patterns/finder/components/cards/finder__results__card\n * @author Web Development\n * @copyright City, University of London 2019\n */\n\nimport Accommodation from './finder__results__accommodation';\nimport CaseStudy from './finder__results__casestudy';\nimport Centre from './finder__results__centre';\nimport Contact from './finder__results__contact';\nimport Course from './finder__results__course';\nimport Event from './finder__results__event';\nimport Funding from './finder__results__funding';\nimport Generic from './finder__results__generic';\nimport Module from './finder__results__module';\nimport News from './finder__results__news';\nimport Profile from './finder__results__profile';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Research from './finder__results__research';\n\n/**\n * Render a Funnelback result as the appropriate card type.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction Finder__Results__Card(props) {\n    switch (props.type) {\n        case 'accommodation':\n            return <Accommodation details={props.details} />;\n        case 'casestudy':\n            return <CaseStudy details={props.details} />;\n        case 'centre':\n            return <Centre details={props.details} query={props.query} />;\n        case 'contact':\n            return <Contact details={props.details} query={props.query} />;\n        case 'course':\n            return <Course details={props.details} query={props.query} />;\n        case 'event':\n            return <Event details={props.details} />;\n        case 'funding':\n            return <Funding details={props.details} query={props.query} />;\n        case 'module':\n            return <Module details={props.details} query={props.query} />;\n        case 'news':\n            return <News details={props.details} />;\n        case 'profile':\n            return <Profile details={props.details} query={props.query} />;\n        case 'research':\n            return <Research details={props.details} query={props.query} />;\n        default:\n            return <Generic details={props.details} />;\n    }\n}\n\nFinder__Results__Card.propTypes = {\n    details: PropTypes.object,\n    query: PropTypes.object,\n    type: PropTypes.string,\n};\n\nexport default Finder__Results__Card;\n","import React from 'react';\n\nconst formatLabel = (label, value) => {\n    if (value) {\n        return label;\n    } else {\n        return (\n            <React.Fragment>\n                {label.split(value).reduce((prev, current, i) => {\n                    if (!i) {\n                        return [current];\n                    }\n                    return prev.concat(\n                        <span className=\"highlightText\" key={value + current}>\n                            {value}\n                        </span>,\n                        current\n                    );\n                }, [])}\n            </React.Fragment>\n        );\n    }\n};\n\nexport default formatLabel;\n","/**\n * Useful utility functions\n *\n * @module util\n * @author Web Development\n * @copyright City, University of London 2018-2020\n */\n\nimport axios from 'axios';\nimport React from 'react';\n\n/**\n * Turns string boolean into real boolean.\n *\n * @param {string} s - A string that may be 'true'.\n * @returns {boolean} True if 'true'.\n */\nexport function toBool(s) {\n    return s === 'true' ? true : false;\n}\n\nconst partialMatchFn = (m) => (s) => s.indexOf(m) < 0,\n    fullMatchFn = (m) => (s) => s !== m;\n\n/**\n * Remove a class name from an HTML element.\n *\n * @param {HTMLElement} elem - An HTML element.\n * @param {string} className - A string representing the class to remove.\n * @param {boolean} [removePartials] - If true, remove partially matching classes.\n */\nexport function removeClass(elem, className, removePartials) {\n    const matchFn = removePartials\n        ? partialMatchFn(className)\n        : fullMatchFn(className);\n    elem.className = elem.className\n        .split(/\\s+/)\n        .filter((s) => matchFn(s))\n        .join(' ');\n}\n\n/**\n * Detect whether reduced motion is enabled.\n *\n * If it is, you should shortcut animations, disable autoplay elements, avoid\n * smooth scrolling in favour of jump scrolling, etc.\n *\n * Currently unsupported by Chrome, but works in Safari and Firefox.\n *\n * @returns {boolean} Boolean indicating that the reduce motion media query matches.\n */\nexport function reduceMotion() {\n    const reducedMotionQuery = window.matchMedia(\n        '(prefers-reduced-motion: reduce)'\n    );\n    return reducedMotionQuery.matches ? true : false;\n}\n\n/**\n * Predicate testing whether an element is currently visible, as opposed to\n * displayed: none; or similar. Doesn't necessarily mean it's visible in the\n * window.\n *\n * @param {HTMLElement} elem - An HTML element.\n * @returns {boolean} - Is it visible?\n */\nexport function isVisible(elem) {\n    return elem.offsetHeight !== 0 && elem.offsetWidth !== 0 ? true : false;\n}\n\n/**\n * Predicate testing whether an element is positioned in the window.\n *\n *\n * @param {HTMLElement} elem - An HTML element.\n * @returns {boolean} - Is it onscreen?\n */\nexport function verticallyInWindow(elem) {\n    return elem.getBoundingClientRect().top >= 0 &&\n        elem.getBoundingClientRect().top <= window.innerHeight\n        ? true\n        : false;\n}\n\n/**\n * Turn a query string into an object.\n *\n * @param {string} parameterString - An HTML query string.\n * @returns {object} An object containing the parameters.\n */\nexport function parametersToObject(parameterString) {\n    const parameters = {};\n    parameterString\n        .substr(1)\n        .split('&')\n        .forEach((parameter) => {\n            const [k, v] = parameter.split('=');\n            parameters[k] = v;\n        });\n    return parameters;\n}\n\n/**\n * Turn an object into a query string.\n *\n * @param {object} parameterObj - An object containing the parameters and their values.\n * @returns {string} A string of the parameters.\n */\nexport function objectToParameters(parameterObj) {\n    if (Object.keys(parameterObj).length > 0) {\n        let parameters = '?';\n        for (const key in parameterObj) {\n            parameters.length !== 1 && (parameters += '&');\n            parameters += key + '=' + parameterObj[key];\n        }\n        return parameters;\n    } else {\n        return '';\n    }\n}\n\n/**\n * Track a Google Analytics event.\n *\n * @param {string} event - The event key for Tag Manager.\n * @param {string} eventCategory - The event category.\n * @param {string} eventAction - The event action.\n * @param {string} [eventLabel] - The event label.\n * @param {number} [eventValue] - The event value.\n * @param {boolean} [nonInteractionHit] - Does this count as interacting with the page?\n */\nexport function gaEvent(\n    event,\n    eventCategory,\n    eventAction,\n    eventLabel,\n    eventValue,\n    nonInteractionHit\n) {\n    window.dataLayer = window.dataLayer || [];\n    window.dataLayer.push({\n        event: event,\n        eventCategory: eventCategory,\n        eventAction: eventAction,\n        eventLabel: eventLabel,\n        eventValue: eventValue,\n        nonInteractionHit: nonInteractionHit,\n    });\n}\n\n/**\n * Append an array of elements to an element.\n *\n * @param {HTMLElement} elem - The parent element.\n * @param {HTMLElement[]} children - An array of elements to append to it.\n */\nexport function appendAll(elem, children) {\n    children.forEach((child) => elem.appendChild(child));\n}\n\n/**\n * Extract number from string, e.g. return '123' from string 'a1b2c3'.\n *\n * @param {string} string - String\n */\nexport function numberFromString(string) {\n    let number = string.replace(/\\D/g, '');\n    return number;\n}\n\n/**\n * Calculates viewport width to determinte if using mobile\n * @param {number} number - width of screen, with default value = 432.\n *\n */\nexport function isMobile(screen = 432) {\n    const viewPortWidth = window.innerWidth;\n    const mobileScreen = screen;\n\n    if (viewPortWidth < mobileScreen) {\n        return true;\n    }\n}\n\n/**\n *\n * Turn DOM elements to array e.g return [li, li, li] from DOM element selecting 'li' <ul><li></li><li></li><li></li></ul>\n *\n * @param {object} object - Object\n */\n\nexport function toArray(obj) {\n    let array = [];\n    // iterate backwards ensuring that length is an UInt32\n    for (let i = obj.length >>> 0; i--; ) {\n        array[i] = obj[i];\n    }\n    return array;\n}\n\n/**\n * Check browser user agent is IE or edge and return version number\n */\nexport function detectIE() {\n    const ua = window.navigator.userAgent,\n        versionLength = 10,\n        msie = ua.indexOf('MSIE '),\n        msieVersionOffset = 5;\n\n    if (msie > 0) {\n        // IE 10 or older => return version number\n        return parseInt(\n            ua.substring(msie + msieVersionOffset, ua.indexOf('.', msie)),\n            versionLength\n        );\n    }\n\n    const trident = ua.indexOf('Trident/'),\n        tridentVersionOffset = 3;\n\n    if (trident > 0) {\n        // IE 11 => return version number\n        let rv = ua.indexOf('rv:');\n        return parseInt(\n            ua.substring(rv + tridentVersionOffset, ua.indexOf('.', rv)),\n            versionLength\n        );\n    }\n\n    const edge = ua.indexOf('Edge/'),\n        edgeVersionOffset = 5;\n\n    if (edge > 0) {\n        // Edge (IE 12+) => return version number\n        return parseInt(\n            ua.substring(edge + edgeVersionOffset, ua.indexOf('.', edge)),\n            versionLength\n        );\n    }\n\n    // other browser\n    return false;\n}\n\n/**\n * Check if browser supports IntersectionObserver API\n *\n * @returns {Boolean} -\n */\nexport function checkIntersectionObserver() {\n    if (\n        'IntersectionObserver' in window &&\n        'IntersectionObserverEntry' in window &&\n        'intersectionRatio' in window.IntersectionObserverEntry.prototype\n    ) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n/**\n * Create elements containing classes, content and any other attributes\n *\n * @param {string} type - Type of element to create, e.g. \"div\", \"button\".\n * @param {array} attributes - Array of objects specifying which attributes to assign to the element i.e. {label : \"class\", val : \"container\"}\n */\nexport function createHTMLElement(type, attributes) {\n    let el = document.createElement(type);\n    attributes.map(function (att) {\n        att.label === 'content'\n            ? el.appendChild(document.createTextNode(att.val))\n            : att.label === 'html'\n            ? (el.innerHTML = att.val)\n            : el.setAttribute(att.label, att.val);\n    });\n    return el;\n}\n\nexport function uppercaseFirstLetterLowercaseRest(s) {\n    return s.charAt(0).toUpperCase() + s.slice(1).toLowerCase();\n}\n\n/**\n * Asynchronous request to Funnelback web service.\n *\n * @param {object} config An axios configuration object.\n * @return {Promise} - A promise of a Funnelback response.\n */\nexport function axiosRequest(config) {\n    const httpOK = 200;\n\n    return axios(config)\n        .then((response) => {\n            if (httpOK === response.status) {\n                return response.data;\n            } else {\n                throw `Bad response: ${response.status}`;\n            }\n        })\n        .catch((e) => {\n            if (!axios.isCancel(e)) {\n                gaEvent(\n                    'jsError',\n                    'JavaScript error',\n                    `Line ${e.lineNumber} – ${e.message}`,\n                    `axiosRequest ${e.fileName} (${window.location})`,\n                    true\n                );\n            }\n        });\n}\n\n/**\n * Returns the correct English suffix for a number.\n *\n * @param  {number} day - The day of the month.\n * @returns {string} The correct suffix.\n */\nfunction daySuffix(day) {\n    const eleventh = 11,\n        thirteenth = 13,\n        lastDigit = day.toString().slice(-1);\n\n    return day >= eleventh || day <= thirteenth\n        ? 'th'\n        : lastDigit === '1'\n        ? 'st'\n        : lastDigit === '2'\n        ? 'nd'\n        : lastDigit === '3'\n        ? 'rd'\n        : 'th';\n}\n\n/**\n * Format a date for React.\n *\n * @param {Date} date - A date object.\n * @returns {ReactFragment} The formatted date.\n */\nexport function formatReactDate(date) {\n    const months = [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December',\n        ],\n        days = [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday',\n        ];\n\n    return (\n        <time dateTime={date.toISOString().split('T')[0]}>\n            {days[date.getUTCDay()]}, {date.getUTCDate()}\n            <sup>{daySuffix(date.getUTCDate())}</sup>{' '}\n            {months[date.getUTCMonth()]} {date.getUTCFullYear()}\n        </time>\n    );\n}\n\n/**\n * Array slicer\n *\n * @param {array} arr - array to be split up into subarrays\n * @param {number} len - max number items that goes into each subarray\n */\nexport function arraySlicer(arr, len) {\n    let newArray = [],\n        i = 0,\n        n = arr.length;\n\n    while (i < n) {\n        newArray.push(arr.slice(i, (i += len)));\n    }\n    return newArray;\n}\n","/**\n * @module patterns/finder/components/finder__query\n * @author Web Development\n * @copyright City, University of London 2019\n */\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { suggest } from '../../funnelback';\nimport Clear from './finder__clear';\n\nconst maximumSuggestions = 5,\n    escapeKey = 'Escape',\n    endKey = 'End',\n    homeKey = 'Home',\n    arrowUp = 'ArrowUp',\n    arrowDown = 'ArrowDown';\n\nfunction highlightQueryTerm(suggestion, partialQuery) {\n    return (\n        <React.Fragment>\n            <span>\n                <span className=\"sr-only\">{suggestion}</span>\n                <span aria-hidden=\"true\">\n                    <span className=\"finder__suggestion\">\n                        {suggestion.slice(\n                            suggestion.indexOf(partialQuery.toLowerCase()),\n                            partialQuery.length\n                        )}\n                    </span>\n                    {suggestion.slice(\n                        suggestion.indexOf(partialQuery.toLowerCase()) +\n                            partialQuery.length\n                    )}\n                </span>\n            </span>\n        </React.Fragment>\n    );\n}\n\n/**\n * Search input field and autocomplete.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction Finder__Query(props) {\n    // save what they're typing\n    const [partialQuery, setPartialQuery] = useState(props.query.query || '');\n    // Funnelback suggestions for the currently typed text\n    const [suggestions, setSuggestions] = useState([]);\n    // Request token for calls to the Funnelback suggestions service, so we\n    // can cancel it\n    const [call, setCall] = useState({ cancel: () => {} });\n    // ref for the input field, so we can .focus() it\n    const stringLength = 16,\n        stringOffset = -4,\n        [inputId] = useState(\n            'finder--' +\n                props.query.collection +\n                '--' +\n                Math.random().toString(stringLength).slice(stringOffset)\n        );\n\n    const [showSuggestions, setShowSuggestions] = useState(false),\n        [activeSuggestionID, setActiveSuggestionID] = useState('');\n\n    useEffect(() => {\n        setPartialQuery(props.query.query);\n    }, [props.query.query, props.updating]);\n\n    let textInput = null;\n    function focusInput() {\n        textInput.focus();\n    }\n\n    // on clear, make a default request for results\n    const clearQuery = () => {\n        call.cancel();\n        setPartialQuery('');\n        setSuggestions([]);\n        focusInput();\n\n        const newQuery = props.query;\n\n        newQuery.misspelling = null;\n        newQuery.query = '';\n        newQuery.sortType = props.config.sort[0].type;\n        newQuery.startRank = 1;\n        newQuery.interacted = true;\n\n        props.update.query(newQuery);\n        props.update.results(!props.update.updateState);\n    };\n\n    const submitForm = (query) => {\n        call.cancel();\n        setSuggestions([]);\n\n        const newQuery = props.query;\n\n        newQuery.misspelling = null;\n        newQuery.query = query ? query : partialQuery ? partialQuery : '';\n        newQuery.sortType = partialQuery ? '' : props.config.sort[0].type;\n        newQuery.startRank = 1;\n        newQuery.interacted = true;\n\n        props.update.query(newQuery);\n        props.update.results(!props.update.updateState);\n    };\n\n    const clear = partialQuery && (\n        <Clear\n            clear={() => {\n                clearQuery();\n            }}\n        />\n    );\n\n    const submitSuggestion = (suggestion) => {\n        setShowSuggestions(false);\n        setSuggestions([]);\n        focusInput();\n        submitForm(suggestion);\n    };\n\n    // render suggestions\n    const suggestionsList = suggestions && suggestions.length > 0 && (\n        <ul\n            role=\"listbox\"\n            aria-label=\"Search suggestions\"\n            aria-activedescendant={activeSuggestionID}\n            className={\n                showSuggestions\n                    ? 'finder__query__suggestions show'\n                    : 'finder__query__suggestions hide'\n            }\n        >\n            {[...new Set(suggestions)]\n                .slice(0, maximumSuggestions)\n                .map((suggestion, i) => (\n                    <li key={suggestion} role=\"option\" id={inputId + '--' + i}>\n                        <button\n                            type=\"button\"\n                            onBlur={() => {\n                                setActiveSuggestionID('');\n                                setShowSuggestions(false);\n                            }}\n                            onFocus={() => setShowSuggestions(true)}\n                            onMouseDown={() => submitSuggestion(suggestion)}\n                            onClick={() => submitSuggestion(suggestion)}\n                            onKeyDown={(e) => {\n                                switch (e.key) {\n                                    case escapeKey:\n                                        e.target.parentNode.parentNode.parentNode\n                                            .querySelector('input')\n                                            .focus();\n                                        setSuggestions([]);\n                                        setActiveSuggestionID('');\n                                        break;\n                                    case arrowUp:\n                                        if (\n                                            e.target.parentNode\n                                                .previousElementSibling &&\n                                            e.target.parentNode.previousElementSibling.querySelector(\n                                                'button'\n                                            )\n                                        ) {\n                                            e.preventDefault();\n                                            e.target.parentNode.previousElementSibling\n                                                .querySelector('button')\n                                                .focus();\n                                            setActiveSuggestionID(\n                                                e.target.parentNode\n                                                    .previousElementSibling.id\n                                            );\n                                        } else {\n                                            e.preventDefault();\n                                            e.target.parentNode.parentNode.parentNode\n                                                .querySelector('input')\n                                                .focus();\n                                            setActiveSuggestionID('');\n                                        }\n                                        break;\n                                    case arrowDown:\n                                        e.preventDefault();\n                                        if (\n                                            e.target.parentNode\n                                                .nextElementSibling &&\n                                            e.target.parentNode.nextElementSibling.querySelector(\n                                                'button'\n                                            )\n                                        ) {\n                                            e.preventDefault();\n                                            e.target.parentNode.nextElementSibling\n                                                .querySelector('button')\n                                                .focus();\n                                            setActiveSuggestionID(\n                                                e.target.parentNode\n                                                    .nextElementSibling.id\n                                            );\n                                        }\n                                        break;\n                                    case homeKey:\n                                        e.preventDefault();\n                                        if (\n                                            e.target.parentNode.parentNode\n                                                .firstChild &&\n                                            e.target.parentNode.parentNode.firstChild.querySelector(\n                                                'button'\n                                            )\n                                        ) {\n                                            e.preventDefault();\n                                            e.target.parentNode.parentNode.firstChild\n                                                .querySelector('button')\n                                                .focus();\n                                            setActiveSuggestionID(\n                                                e.target.parentNode.firstChild\n                                                    .id\n                                            );\n                                        }\n                                        break;\n                                    case endKey:\n                                        e.preventDefault();\n                                        if (\n                                            e.target.parentNode.parentNode\n                                                .lastChild &&\n                                            e.target.parentNode.parentNode.lastChild.querySelector(\n                                                'button'\n                                            )\n                                        ) {\n                                            e.preventDefault();\n                                            e.target.parentNode.parentNode.lastChild\n                                                .querySelector('button')\n                                                .focus();\n                                            setActiveSuggestionID(\n                                                e.target.parentNode.lastChild.id\n                                            );\n                                        }\n                                        break;\n                                    default:\n                                        break;\n                                }\n                            }}\n                        >\n                            {highlightQueryTerm(suggestion, partialQuery)}\n                        </button>\n                    </li>\n                ))}\n        </ul>\n    );\n\n    const input = (\n        <div className=\"finder__query__input\">\n            <div className=\"finder__query__icon--wrapper\">\n                <span\n                    className=\"finder__icon fal fa-search icon\"\n                    aria-hidden=\"true\"\n                ></span>\n            </div>\n            <label className=\"sr-only\" htmlFor={inputId}>\n                {`Search ${props.config.summariseAs.plural}`}\n            </label>\n            <input\n                autoComplete=\"off\"\n                id={inputId}\n                name=\"query\"\n                placeholder={props.config.placeholder}\n                ref={(input) => {\n                    textInput = input;\n                }}\n                type=\"text\"\n                value={partialQuery}\n                onKeyDown={(e) => {\n                    switch (e.key) {\n                        case escapeKey:\n                            clearQuery();\n                            break;\n                        case arrowDown:\n                            if (suggestions && suggestions.length > 0) {\n                                e.preventDefault();\n                                e.target.parentNode\n                                    .querySelector(\n                                        '.finder__query__suggestions button'\n                                    )\n                                    .focus();\n                                setActiveSuggestionID(\n                                    e.target.parentNode.querySelector(\n                                        '.finder__query__suggestions li'\n                                    ).id\n                                );\n                            }\n                            break;\n                        default:\n                            break;\n                    }\n                }}\n                onFocus={() => setShowSuggestions(true)}\n                onBlur={() => setShowSuggestions(false)}\n                onChange={(e) => {\n                    //clear old suggestions\n                    setSuggestions([]);\n                    // keep  what they're typing\n                    setPartialQuery(e.target.value);\n\n                    /**\n                     * if we have a request to the suggestions service in progress,\n                     * cancel it. Stops old suggestions overwriting new ones because\n                     * the requests can't keep up with fast typing.\n                     */\n                    call.cancel();\n\n                    if (e.target.value) {\n                        // input is populated, ask for suggestions\n                        const [suggestionsPromise, newCall] = suggest(\n                            props.query.collection,\n                            e.target.value\n                        );\n\n                        // update our request cancel function for the new request\n                        setCall({\n                            cancel: () => {\n                                newCall.cancel();\n                            },\n                        });\n\n                        suggestionsPromise\n                            .then((data) => setSuggestions(data))\n                            .catch(() => setSuggestions([]));\n                    } else {\n                        // input is empty, empty suggestions\n                        setSuggestions([]);\n                    }\n                }}\n            />\n            {suggestionsList}\n            {clear}\n        </div>\n    );\n\n    return (\n        <fieldset className=\"finder__query\">\n            <div>\n                {input}\n                <button\n                    type=\"submit\"\n                    className=\"finder__query__submit\"\n                    onClick={() => submitForm()}\n                >\n                    <span\n                        className=\"fal fa-search finder__query__submit__icon\"\n                        aria-hidden=\"true\"\n                    />{' '}\n                    <span className=\"finder__query__submit__text\">Find</span>\n                </button>\n            </div>\n        </fieldset>\n    );\n}\n\nFinder__Query.propTypes = {\n    config: PropTypes.object,\n    query: PropTypes.object,\n    update: PropTypes.object,\n    updating: PropTypes.bool,\n};\n\nexport default Finder__Query;\n","/**<\n * @module patterns/finder/components/finder__select\n * @author Web Development\n * @copyright City, University of London 2019\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Finder__Select(props) {\n    const stringLength = 16,\n        stringOffset = -4,\n        randomNumber = Math.random().toString(stringLength).slice(stringOffset),\n        currentValue = props.query.facets[props.facet.meta] || '';\n\n    // reduce the facet configuration to an array of all possible values for\n    // the facet\n    const allFacets = props.facet.values.reduce((acc, data) => {\n        return [...acc, data];\n    }, []);\n\n    // reduce the Funnelback response for the facet to an array of valid\n    // values for the current query\n    const responseFacets =\n        props.responseFacet[0] &&\n        props.responseFacet[0].categories[0] &&\n        props.responseFacet[0].categories[0].values\n            ? props.responseFacet[0].categories[0].values.reduce(\n                  (acc, data) => {\n                      return [...acc, data.data];\n                  },\n                  []\n              )\n            : [];\n\n    // count how many possible facets are not valid for the current query\n    // and will be hidden\n    const hiddenFacets = allFacets\n        .map((facet) => facet.data)\n        .filter((facet) => responseFacets.indexOf(facet.toLowerCase()) < 0)\n        .length;\n\n    const setFacet = (value) => {\n        const newQuery = props.query;\n\n        props.dependencies.map((facet) => {\n            delete newQuery.facets[facet.meta];\n        });\n\n        if (value) {\n            newQuery.facets[props.facet.meta] = value;\n        } else {\n            delete newQuery.facets[props.facet.meta];\n        }\n\n        newQuery.startRank = 1;\n        newQuery.misspelling = null;\n        newQuery.interacted = true;\n\n        props.update.query(newQuery);\n        props.update.results(!props.update.updateState);\n    };\n\n    if (props.facet.values.length > hiddenFacets) {\n        return (\n            <div\n                className={`finder__filter finder__select ${\n                    currentValue && 'finder__select--selected'\n                }`}\n            >\n                <label\n                    htmlFor={`meta_${props.facet.meta}_sand--${randomNumber}`}\n                >\n                    {props.facet.name}\n                </label>\n                <select\n                    name={props.facet.name}\n                    id={`meta_${props.facet.meta}_sand--${randomNumber}`}\n                    onChange={(e) => setFacet(e.target.value)}\n                    value={currentValue}\n                >\n                    <option\n                        value=\"\"\n                        id={`meta${props.facet.meta}all`}\n                        name={`meta_${props.facet.meta}_sand--${randomNumber}`}\n                    >\n                        {props.facet.noSelection}\n                    </option>\n\n                    {props.facet.values.map((value, i) => {\n                        const responseFacetDetails =\n                            props.responseFacet[0] &&\n                            props.responseFacet[0].categories[0] &&\n                            props.responseFacet[0].categories[0].values.filter(\n                                (responseFacetValue) =>\n                                    responseFacetValue.data.toLowerCase() ===\n                                    value.data.toLowerCase()\n                            );\n\n                        if (\n                            currentValue.toLowerCase() ===\n                                value.data.toLowerCase() ||\n                            (responseFacetDetails && responseFacetDetails[0])\n                        ) {\n                            return (\n                                <option\n                                    key={i}\n                                    value={value.data.toLowerCase()}\n                                >\n                                    {value.label}\n                                    {currentValue !== value.data\n                                        ? responseFacetDetails[0].count > 0 &&\n                                          ` (${responseFacetDetails[0].count})`\n                                        : ''}\n                                </option>\n                            );\n                        } else {\n                            return null;\n                        }\n                    })}\n                </select>\n            </div>\n        );\n    } else {\n        return null;\n    }\n}\n\nFinder__Select.propTypes = {\n    facet: PropTypes.object,\n    query: PropTypes.object,\n    responseFacet: PropTypes.arrayOf(PropTypes.object),\n    update: PropTypes.object,\n    dependencies: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default Finder__Select;\n","/**\n * @module patterns/finder/components/finder__filters\n * @author Web Development\n * @copyright City, University of London 2019\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SelectFilter from './finder__select';\nimport CheckboxFilter from './finder__checkbox';\nimport TagFilter from './finder__tag';\nimport Reset from './finder__reset';\nimport Sort from './finder__sort';\nimport { gaEvent } from '../../../../util';\n\n/**\n * Predicate for whether a facet should be displayed, if it's dependent on\n * another facet being set.\n *\n * @param {object} facet The facet to potentially display.\n * @param {object} facetMap The facets currently set on the query.\n * @return {bool} - Has any dependency been met\n */\nfunction dependencyMet(facet, facetMap) {\n    const setFacets = Object.keys(facetMap);\n\n    if (!facet.dependency) {\n        return true;\n    }\n\n    if (\n        setFacets.indexOf(facet.dependency) >= 0 &&\n        facetMap[facet.dependency] !== ''\n    ) {\n        return true;\n    }\n\n    return false;\n}\n\n/**\n * Component to update facet values in the query.\n *\n * @param {object} props React props.\n * @returns {object} - React component.\n */\nfunction Finder__Filters(props) {\n    const clearFiltersDesktop =\n            Object.keys(props.query.facets).length > 0 ? (\n                <div className=\"finder__filters__reset finder__filters__reset--desktop\">\n                    <Reset clear={props.clear} resetSort={false} />\n                </div>\n            ) : null,\n        clearFiltersMobile =\n            Object.keys(props.query.facets).length > 0 ||\n            props.query.sortType !== props.config.sort[0].type ? (\n                <Reset clear={props.clear} resetSort={true} />\n            ) : null;\n\n    const sort =\n        props.config.sort.length > 1 && props.config.displaySort ? (\n            <div className=\"wrapper--finder__select--sort--mobile\">\n                <Sort\n                    config={props.config}\n                    query={props.query}\n                    update={props.update}\n                />\n            </div>\n        ) : null;\n\n    return (\n        <div className=\"finder__filters\">\n            <h2 className=\"finder__filters__heading\">\n                <span className=\"finder__filters__heading__text\">\n                    <span\n                        className=\"far fa-sliders-h icon\"\n                        aria-hidden=\"true\"\n                    />{' '}\n                    {`Filter ${props.config.summariseAs.plural}`}\n                </span>\n                {clearFiltersMobile}\n            </h2>\n\n            <fieldset>\n                <div className=\"wrapper--finder_filters--filters\">\n                    {props.config.facetLabels.map((facet) => {\n                        if (dependencyMet(facet, props.query.facets)) {\n                            switch (facet.type) {\n                                case 'select':\n                                    return (\n                                        <SelectFilter\n                                            key={facet.meta}\n                                            facet={facet}\n                                            query={props.query}\n                                            responseFacet={\n                                                props.response &&\n                                                props.response.facets\n                                                    ? props.response.facets.filter(\n                                                          (funnelbackFacet) =>\n                                                              funnelbackFacet.name ===\n                                                              facet.funnelbackName\n                                                      )\n                                                    : []\n                                            }\n                                            update={props.update}\n                                            dependencies={props.config.facetLabels.filter(\n                                                (candidate) =>\n                                                    candidate.dependency ===\n                                                    facet.meta\n                                            )}\n                                        />\n                                    );\n                                case 'checkbox':\n                                    return (\n                                        <CheckboxFilter\n                                            key={facet.meta}\n                                            facet={facet}\n                                            query={props.query}\n                                            responseFacet={\n                                                props.response &&\n                                                props.response.facets\n                                                    ? props.response.facets.filter(\n                                                          (funnelbackFacet) =>\n                                                              funnelbackFacet.name ===\n                                                              facet.funnelbackName\n                                                      )\n                                                    : []\n                                            }\n                                            update={props.update}\n                                            dependencies={props.config.facetLabels.filter(\n                                                (candidate) =>\n                                                    candidate.dependency ===\n                                                    facet.meta\n                                            )}\n                                        />\n                                    );\n                                case 'tag':\n                                    return (\n                                        <TagFilter\n                                            key={facet.meta}\n                                            facet={facet}\n                                            query={props.query}\n                                            responseFacet={\n                                                props.response &&\n                                                props.response.facets\n                                                    ? props.response.facets.filter(\n                                                          (funnelbackFacet) =>\n                                                              funnelbackFacet.name ===\n                                                              facet.funnelbackName\n                                                      )\n                                                    : []\n                                            }\n                                            update={props.update}\n                                            dependencies={props.config.facetLabels.filter(\n                                                (candidate) =>\n                                                    candidate.dependency ===\n                                                    facet.meta\n                                            )}\n                                        />\n                                    );\n                                default:\n                                    gaEvent(\n                                        'jsError',\n                                        'JavaScript error',\n                                        'finder__filters()',\n                                        'Unknown filter type in finder__filters.js',\n                                        true\n                                    );\n                            }\n                        } else {\n                            return null;\n                        }\n                    })}\n                    <p className=\"finder__filters__nofilters\">\n                        No filters are valid for the current query.\n                    </p>\n                    {clearFiltersDesktop}\n                    {sort}\n                </div>\n            </fieldset>\n        </div>\n    );\n}\n\nFinder__Filters.propTypes = {\n    config: PropTypes.object,\n    query: PropTypes.object,\n    response: PropTypes.object,\n    update: PropTypes.object,\n    clear: PropTypes.func,\n};\n\nexport default Finder__Filters;\n","/**\n * @module patterns/finder/components/wrapper--finder__filters--mobile\n * @author Web Development\n * @copyright City, University of London 2019\n */\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Filters from './finder__filters';\nimport createFocusTrap from 'focus-trap';\n// seems to fix most issues with old iPhones and position: fixed\n// may not be necessary long-term, but I was in a hurry\nimport { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\n\nlet filters = null;\nconst getFilters = () => filters;\n\n/**\n * Render the mobile version of the filters.\n *\n * TODO: this is a bit flaky on old iPhones with long facets (i.e. longer than\n * the main body of the page)\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction Finder__FiltersMobile(props) {\n    const [display, setDisplay] = useState(false);\n    const [focusTrap, setFocusTrap] = useState({});\n\n    // trap tab focus when the filters are open\n    useEffect(() => {\n        if (!focusTrap.activate) {\n            setFocusTrap(\n                createFocusTrap(getFilters(), {\n                    initialFocus: getFilters().querySelector(\n                        '.wrapper--finder__filters--mobile__apply'\n                    ),\n                    onDeactivate: () => setDisplay(false),\n                    clickOutsideDeactivates: true,\n                })\n            );\n        }\n\n        if (display) {\n            focusTrap.activate && focusTrap.activate();\n            disableBodyScroll(\n                getFilters().querySelector(\n                    '.wrapper--finder__filters--mobile__filters'\n                )\n            );\n        } else {\n            focusTrap.deactivate && focusTrap.deactivate();\n            enableBodyScroll(\n                getFilters().querySelector(\n                    '.wrapper--finder__filters--mobile__filters'\n                )\n            );\n        }\n    }, [display, focusTrap]);\n\n    const totalMatching =\n        props.response &&\n        props.response.summary &&\n        props.response.summary.totalMatching;\n\n    const result =\n        totalMatching === 1\n            ? props.summariseAs.singular\n            : props.summariseAs.plural;\n\n    const totalMatchingMessage = totalMatching\n        ? `Show ${totalMatching} ${result}`\n        : 'Close';\n\n    const filtersCount = props.config.displaySort ? (\n        props.config.sort[0].type !== props.query.sortType ||\n        Object.keys(props.query.facets).length > 0 ? (\n            <span>\n                Filters{' '}\n                <span className=\"wrapper--finder__filters--mobile__toggle__count\">\n                    (\n                    {props.config.sort[0].type !== props.query.sortType\n                        ? Object.keys(props.query.facets).length + 1\n                        : Object.keys(props.query.facets).length}\n                    )\n                </span>\n            </span>\n        ) : (\n            <span>Filter</span>\n        )\n    ) : Object.keys(props.query.facets).length > 0 ? (\n        <span>\n            Filters{' '}\n            <span className=\"wrapper--finder__filters--mobile__toggle__count\">\n                (\n                {props.config.sort[0].type !== props.query.sortType\n                    ? Object.keys(props.query.facets).length + 1\n                    : Object.keys(props.query.facets).length}\n                )\n            </span>\n        </span>\n    ) : (\n        <span>Filter</span>\n    );\n\n    const toggle = display ? null : (\n        <button\n            type=\"button\"\n            className=\"wrapper--finder__filters--mobile__toggle\"\n            aria-haspopup={true}\n            aria-expanded={display}\n            onClick={() => setDisplay(!display)}\n            data-filters-applied={\n                Object.keys(props.query.facets).length !== 0 ||\n                (props.config.displaySort &&\n                    props.config.sort[0].type !== props.query.sortType)\n                    ? true\n                    : false\n            }\n        >\n            <span>\n                <span className=\"far fa-sliders-h icon\" aria-hidden=\"true\" />{' '}\n                {filtersCount}\n            </span>\n        </button>\n    );\n\n    return (\n        <div\n            className=\"wrapper--finder__filters--mobile\"\n            data-open={display}\n            ref={(mobilefilters) => (filters = mobilefilters)}\n        >\n            {toggle}\n            <div className=\"wrapper--finder__filters--mobile__filters\">\n                <div className=\"wrapper--finder__filters--mobile__filters__content\">\n                    <Filters\n                        config={props.config}\n                        query={props.query}\n                        response={props.response}\n                        update={props.update}\n                        clear={props.clear}\n                    />\n                </div>\n            </div>\n            <div className=\"wrapper--finder__filters--mobile__apply\">\n                <button\n                    type=\"button\"\n                    aria-expanded={display}\n                    onClick={() => setDisplay(!display)}\n                    disabled={props.updating}\n                >\n                    {Object.keys(props.query.facets).length === 0 ? null : (\n                        <span className=\"far fa-chevron-left icon\"></span>\n                    )}\n\n                    <span aria-live=\"polite\">\n                        {props.updating ? (\n                            <React.Fragment>\n                                <span\n                                    className=\"fas fa-spinner fa-pulse icon\"\n                                    aria-hidden=\"true\"\n                                />{' '}\n                                <span className=\"wrapper--finder__filters--mobile__apply__text\">\n                                    Updating {props.summariseAs.plural}…\n                                </span>\n                            </React.Fragment>\n                        ) : (\n                            <React.Fragment>\n                                <span className=\"wrapper--finder__filters--mobile__apply__text\">\n                                    {Object.keys(props.query.facets).length ===\n                                    0\n                                        ? 'Close'\n                                        : totalMatchingMessage}\n                                </span>\n                            </React.Fragment>\n                        )}\n                    </span>\n                </button>\n            </div>\n        </div>\n    );\n}\n\nFinder__FiltersMobile.propTypes = {\n    config: PropTypes.object,\n    query: PropTypes.object,\n    response: PropTypes.object,\n    update: PropTypes.object,\n    clear: PropTypes.func,\n    updating: PropTypes.bool,\n    summariseAs: PropTypes.object,\n};\n\nexport default Finder__FiltersMobile;\n","/**\n * Universal finder\n *\n * Don't run this via patterns.js, it's a separate compilation.\n *\n * @module patterns/finder/finder\n * @author Web Development\n * @copyright City, University of London 2019\n */\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { find } from './funnelback';\nimport Query from './components/query/finder__query';\nimport Filters from './components/filters/finder__filters';\nimport MobileFilters from './components/filters/finder__filtersmobile';\nimport Results from './components/results/finder__results';\nimport scroll from 'zenscroll';\nimport { reduceMotion } from '../../util';\n\nconst oneSecond = 1000,\n    scrollDuration = reduceMotion() ? 0 : oneSecond,\n    screenOffsetRatio = 10;\n\n/**\n * Retrieve current values for facets from the URL parameters.\n *\n * @param {object[]} facets Array of facet definitions.\n * @param {object} params URLSearchParams object for the current page.\n * @return {object} - Map of facet meta labels to their current value from the URL.\n */\nfunction getFacetParams(facets, params) {\n    return facets\n        .map((facet) => {\n            const param = {};\n            if (params.get(`meta_${facet.meta}_sand`)) {\n                param[facet.meta] = params.get(`meta_${facet.meta}_sand`);\n            }\n            return param;\n        })\n        .reduce((facetParams, facet) => Object.assign(facetParams, facet));\n}\n\n/**\n * Preserve the search state in the URL parameters.\n *\n * @param {string} currQuery The search query.\n * @param {integer} currStartRank The start rank.\n * @param {object[]} currFacets A map of facet meta labels to their values.\n * @param {*} facetLabels Array of facet definitions.\n */\nfunction replaceHistory(\n    currQuery,\n    currStartRank,\n    currFacets,\n    currSort,\n    facetLabels,\n    defaultSort\n) {\n    if (window) {\n        const params = new URLSearchParams(window.location.search);\n\n        currQuery !== ''\n            ? params.set('query', currQuery)\n            : params.delete('query');\n\n        currStartRank !== 1\n            ? params.set('start_rank', currStartRank)\n            : params.delete('start_rank');\n\n        currSort !== defaultSort && currSort !== ''\n            ? params.set('sort', currSort)\n            : params.delete('sort');\n\n        facetLabels.forEach((facet) => {\n            if (currFacets[facet.meta]) {\n                params.set(`meta_${facet.meta}_sand`, currFacets[facet.meta]);\n            } else {\n                params.delete(`meta_${facet.meta}_sand`);\n            }\n        });\n\n        const hasParams = params.toString().length ? '?' : '';\n\n        window.history.replaceState(\n            {},\n            '',\n            `${window.location.pathname}${hasParams}${params.toString()}`\n        );\n    }\n}\n\n/**\n * Launch the universal Finder.\n *\n * @param {object} props The JSON configuration file for the Finder.\n * @return {object} The React component to render.\n */\nfunction Finder(props) {\n    const params = new URLSearchParams(window.location.search);\n\n    /**\n     * initial state for the Funnelback query, taken from URL parameters and\n     * configuration\n     **/\n    const initialQuery = {\n        collection: props.config.collection,\n        facets:\n            props.config.facetLabels.length > 0\n                ? getFacetParams(props.config.facetLabels, params)\n                : {},\n        fixedFacets: props.config.fixedFacets,\n        fixedParameters: props.config.fixParameters\n            ? props.config.fixParameters\n            : [],\n        interacted: false,\n        misspelling: null,\n        numRanks: params.get('num_ranks') || props.config.numRanks,\n        query: params.get('query') || '',\n        sortType: params.get('query')\n            ? ''\n            : params.get('sort') || props.config.sort[0].type,\n        startRank: params.get('start_rank') || 1,\n    };\n\n    /**\n     * Dummy, empty Funnelback response object for initial state.\n     */\n    const initialResponse = Object.freeze({\n        bestBets: [],\n        facets: [],\n        results: [],\n        spell: null,\n        summary: {\n            currEnd: 0,\n            currStart: 0,\n            numRanks: 0,\n            totalMatching: 0,\n        },\n    });\n\n    // State objects for the Funnelback query and response\n    const [query, setQuery] = useState(initialQuery);\n    const [funnelbackResponse, setResponse] = useState(initialResponse);\n\n    // Boolean to indicate when a query is in progress\n    const [updating, setUpdating] = useState(true);\n\n    // Request token from the Funnelback request object, so we can cancel if\n    // another request is triggered by the user\n    const [call, setCall] = useState({\n        cancel: () => {},\n    });\n\n    // useEffect doesn't deep inspect objects, so we need an additional, plain\n    // state variable to indicate that the query state has changed and the\n    // component should render\n    // the value isn't important, it's just easy to toggle a bool back and forth\n    const [update, setUpdate] = useState(false);\n\n    // Retrieve Funnelback results\n    useEffect(() => {\n        // preserve the state\n        replaceHistory(\n            query.query,\n            query.startRank,\n            query.facets,\n            query.sortType,\n            props.config.facetLabels,\n            props.config.sort[0].type\n        );\n\n        // indicate a request is in progress\n        setUpdating(true);\n\n        query.interacted &&\n            scroll.center(\n                props.element.querySelector('.finder__results'),\n                scrollDuration,\n                -window.innerHeight / screenOffsetRatio\n            );\n\n        /**\n         * cancel any request already in progress\n         *\n         * async requests can return out of order\n         */\n        call.cancel();\n\n        // make a new, asynchronous request to Funnelback\n        const [request, requestToken] = find(\n            query.collection,\n            query.fixedFacets,\n            query.fixedParameters,\n            query.query,\n            query.sortType,\n            query.startRank,\n            query.numRanks,\n            query.facets\n        );\n\n        // save the requestToken\n        setCall({\n            cancel: () => {\n                requestToken.cancel();\n            },\n        });\n\n        // when the response from Funnelback arrives,\n        // update the results and display them\n        request\n            .then((data) => {\n                setResponse(data);\n                setUpdating(false);\n\n                if (data.spell && data.summary.totalMatching === 0) {\n                    const newQueryText = data.spell.text.split(/\\|/)[0].trim(),\n                        newQuery = query;\n\n                    newQuery.misspelling = query.query;\n                    newQuery.query = newQueryText;\n                    newQuery.startRank = 1;\n                    setQuery(newQuery);\n                    setUpdate(!update);\n                }\n            })\n            .then(() => {\n                query.interacted &&\n                    scroll.center(\n                        props.element.querySelector('.finder__results h2'),\n                        scrollDuration\n                    );\n            })\n            .catch(() => {\n                setResponse(initialResponse);\n                setUpdating(false);\n            });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [update]);\n\n    // update props so child components can update the query\n    const updater = {\n        query: (newQuery) => setQuery(newQuery),\n        results: (newUpdate) => setUpdate(newUpdate),\n        updateState: update,\n    };\n\n    /**\n     * @param  {boolean} resetSort - Reset the sort order too?\n     */\n    const clear = (resetSort) => {\n        const newQuery = query;\n\n        call.cancel();\n\n        newQuery.sortType = resetSort\n            ? props.config.sort[0].type\n            : newQuery.sortType;\n        newQuery.facets = {};\n        newQuery.startRank = 1;\n        newQuery.misspelling = null;\n        newQuery.interacted = true;\n\n        setQuery(newQuery);\n        setUpdate(!update);\n    };\n\n    const queryElement =\n        props.config.noQuery && props.config.noQuery === true ? null : (\n            <Query\n                config={props.config}\n                query={query}\n                update={updater}\n                updating={updating}\n            />\n        );\n\n    return (\n        <form\n            className={\n                props.config.facetLabels.length > 0\n                    ? 'finder'\n                    : 'finder finder--nofilters'\n            }\n            onSubmit={(e) => {\n                e.preventDefault();\n            }}\n        >\n            {queryElement}\n\n            {props.config.facetLabels.length > 0 && (\n                <React.Fragment>\n                    <MobileFilters\n                        config={props.config}\n                        query={query}\n                        response={funnelbackResponse}\n                        update={updater}\n                        updating={updating}\n                        summariseAs={props.config.summariseAs}\n                        clear={clear}\n                    />\n\n                    <div className=\"wrapper--finder__filters--desktop\">\n                        <Filters\n                            config={props.config}\n                            query={query}\n                            response={funnelbackResponse}\n                            update={updater}\n                            clear={clear}\n                        />\n                    </div>\n                </React.Fragment>\n            )}\n            <Results\n                clear={clear}\n                config={props.config}\n                query={query}\n                response={funnelbackResponse}\n                summariseAs={props.config.summariseAs}\n                type={props.config.resultCard}\n                update={updater}\n                updating={updating}\n            />\n        </form>\n    );\n}\n\nFinder.propTypes = {\n    config: PropTypes.object,\n    element: PropTypes.object,\n};\n\nexport default Finder;\n","/**\n * Finder entry\n *\n * @author Web Development\n * @copyright City, University of London 2019\n */\nimport React from 'react';\nimport { render } from 'react-dom';\nimport Finder from './patterns/finder/finder';\nimport { finderConfig } from './patterns/finder/funnelback';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    if (/(Trident|MSIE)/.test(navigator.userAgent)) {\n        return;\n    } else {\n        const finders = document.querySelectorAll('.wrapper--finder');\n        finders &&\n            Array.from(finders).forEach(finder => {\n                finderConfig(finder.dataset.config).then(config => {\n                    render(<Finder config={config} element={finder} />, finder);\n                });\n            });\n    }\n});\n","/**\n * @module patterns/finder/components/finder__checkbox\n * @author Web Development\n * @copyright City, University of London 2019\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Finder__Checkbox(props) {\n    const stringLength = 16,\n        stringOffset = -4,\n        randomNumber = Math.random().toString(stringLength).slice(stringOffset),\n        toggleChecked = props.facet.meta in props.query.facets,\n        responseFacetValue =\n            props.responseFacet[0] &&\n            props.responseFacet[0].categories[0] &&\n            props.responseFacet[0].categories[0].values.filter(\n                (value) =>\n                    value.data.toLowerCase() ===\n                    props.facet.checkedValue.toLowerCase()\n            );\n\n    if (\n        responseFacetValue &&\n        responseFacetValue[0] &&\n        responseFacetValue[0].count > 0\n    ) {\n        const toggleFacet = () => {\n            const newQuery = props.query;\n\n            props.dependencies.map((facet) => {\n                delete newQuery.facets[facet.meta];\n            });\n\n            toggleChecked\n                ? delete newQuery.facets[props.facet.meta]\n                : (newQuery.facets[props.facet.meta] =\n                      props.facet.checkedValue);\n\n            newQuery.startRank = 1;\n            newQuery.misspelling = null;\n            newQuery.interacted = true;\n\n            props.update.query(newQuery);\n            props.update.results(!props.update.updateState);\n        };\n\n        return (\n            <div className=\"finder__filter finder__checkbox\">\n                <input\n                    type=\"checkbox\"\n                    id={`meta_${props.facet.meta}_sand--${randomNumber}`}\n                    name={`meta_${props.facet.meta}_sand`}\n                    value={props.facet.checkedValue}\n                    onChange={() => toggleFacet()}\n                    checked={toggleChecked}\n                />\n                <div\n                    className=\"finder__checkbox__indicator finder__checkbox__indicator\"\n                    aria-hidden=\"true\"\n                    onClick={() => toggleFacet()}\n                >\n                    {toggleChecked ? (\n                        <span className=\"fa fa-fw fas fa-check icon\"></span>\n                    ) : null}\n                </div>\n                <label\n                    className=\"finder__filters__label--always\"\n                    htmlFor={`meta_${props.facet.meta}_sand--${randomNumber}`}\n                >\n                    {props.facet.name}\n                    {!toggleChecked &&\n                        responseFacetValue &&\n                        ' (' + responseFacetValue[0].count + ')'}\n                </label>\n            </div>\n        );\n    } else {\n        return null;\n    }\n}\n\nFinder__Checkbox.propTypes = {\n    facet: PropTypes.object,\n    query: PropTypes.object,\n    responseFacet: PropTypes.arrayOf(PropTypes.object),\n    update: PropTypes.object,\n    dependencies: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default Finder__Checkbox;\n","/**\n * @module patterns/finder/components/finder__tag\n * @author Web Development\n * @copyright City, University of London 2020\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Finder__Tag(props) {\n    const deleteFacet = () => {\n        const newQuery = props.query;\n\n        props.dependencies.map((facet) => {\n            delete newQuery.facets[facet.meta];\n        });\n\n        delete newQuery.facets[props.facet.meta];\n\n        newQuery.startRank = 1;\n        newQuery.misspelling = null;\n        newQuery.interacted = true;\n\n        props.update.query(newQuery);\n        props.update.results(!props.update.updateState);\n    };\n\n    return props.query.facets[props.facet.meta] ? (\n        <div className=\"finder__filter finder__tag\">\n            <button onClick={() => deleteFacet()} type=\"button\">\n                <span\n                    className=\"fa-fw far fa-times icon\"\n                    aria-hidden=\"true\"\n                ></span>\n                <span className=\"finder__tag__text\">\n                    <span className=\"sr-only\">Remove filter for </span>\n                    {props.facet.name}:{' '}\n                    {\n                        props.facet.values.filter(\n                            (value) =>\n                                value.data.toLowerCase() ===\n                                props.query.facets[\n                                    props.facet.meta\n                                ].toLowerCase()\n                        )[0].label\n                    }\n                </span>\n            </button>\n        </div>\n    ) : null;\n}\n\nFinder__Tag.propTypes = {\n    facet: PropTypes.object,\n    query: PropTypes.object,\n    responseFacet: PropTypes.arrayOf(PropTypes.object),\n    update: PropTypes.object,\n    dependencies: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default Finder__Tag;\n","/**\n * @module patterns/finder/components/finder__pagination\n * @author Web Development\n * @copyright City, University of London 2019\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Renders standard pagination controls patttern for the results.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction Finder__Pagination(props) {\n    const numberOfPages = Math.ceil(props.totalMatching / props.numRanks),\n        currentPage = Math.ceil(props.currStart / props.numRanks),\n        pages = [];\n\n    const changePage = (pageNumber) => {\n        const newStartRank = 1 + (pageNumber - 1) * props.numRanks,\n            newQuery = props.query;\n\n        newQuery.startRank = newStartRank;\n        newQuery.misspelling = null;\n        newQuery.interacted = true;\n\n        props.update.query(newQuery);\n        props.update.results(!props.update.updateState);\n    };\n\n    pages.push(\n        <button\n            className=\"pagination__controls__button--prev\"\n            key=\"prev\"\n            type=\"button\"\n            disabled={currentPage === 1 ? true : false}\n            onClick={() => {\n                changePage(currentPage - 1);\n            }}\n        >\n            <span>Previous page</span>\n        </button>\n    );\n\n    for (let page = 1; page <= numberOfPages; page++) {\n        let className;\n        switch (page - numberOfPages) {\n            case 0:\n                className =\n                    'pagination__controls__element pagination__controls__button pagination__controls__button--last';\n                break;\n            case -1:\n                className =\n                    'pagination__controls__element pagination__controls__button pagination__controls__button--penultimate';\n                break;\n            default:\n                className =\n                    'pagination__controls__element pagination__controls__button';\n        }\n\n        pages.push(\n            <button\n                aria-current={page === currentPage ? 'page' : null}\n                aria-expanded={page === currentPage ? true : false}\n                aria-label={`Open page ${page}`}\n                className={className}\n                data-page={page}\n                data-proximity={Math.abs(page - currentPage)}\n                disabled={page === currentPage ? true : false}\n                key={page}\n                type=\"button\"\n                onClick={() => {\n                    changePage(page);\n                }}\n            >\n                <span>{page}</span>\n            </button>\n        );\n\n        if (page === 1) {\n            pages.push(\n                <span\n                    key=\"firstEllipsis\"\n                    className=\"pagination__controls__element pagination__controls__ellipsis pagination__controls__ellipsis--first\"\n                >\n                    <span>…</span>\n                </span>\n            );\n        } else if (page === numberOfPages - 1) {\n            pages.push(\n                <span\n                    key=\"lastEllipsis\"\n                    className=\"pagination__controls__element pagination__controls__ellipsis pagination__controls__ellipsis--last\"\n                >\n                    <span>…</span>\n                </span>\n            );\n        }\n    }\n\n    pages.push(\n        <button\n            className=\"pagination__controls__button--next\"\n            key=\"next\"\n            type=\"button\"\n            disabled={currentPage === numberOfPages ? true : false}\n            onClick={() => {\n                changePage(currentPage + 1);\n            }}\n        >\n            <span>Next page</span>\n        </button>\n    );\n\n    return (\n        <div className=\"pagination__wrapper\">\n            <nav\n                className=\"pagination__controls\"\n                data-pagecount={numberOfPages}\n            >\n                {pages}\n            </nav>\n        </div>\n    );\n}\n\nFinder__Pagination.propTypes = {\n    currStart: PropTypes.number,\n    query: PropTypes.object,\n    numRanks: PropTypes.number,\n    totalMatching: PropTypes.number,\n    update: PropTypes.object,\n};\n\nexport default Finder__Pagination;\n","/**\n * @module patterns/finder/components/finder__clear\n * @author Web Development\n * @copyright City, University of London 2019\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Clear input button.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction Finder__Clear(props) {\n    return (\n        <button\n            className=\"finder__clear\"\n            type=\"button\"\n            onClick={() => {\n                props.clear(props.resetSort);\n            }}\n        >\n            <span className=\"fad fa-fw fa-times-circle icon \" />\n            <span className=\"finder__clear__text\">Clear query</span>\n        </button>\n    );\n}\n\nFinder__Clear.propTypes = {\n    clear: PropTypes.func,\n    resetSort: PropTypes.bool,\n};\n\nexport default Finder__Clear;\n","/**\n * @module patterns/finder/components/cards/finder__results__bestbet\n * @author Web Development\n * @copyright City, University of London 2019\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Render a Funnelback best bet as a results card.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction Finder__Results__BestBet(props) {\n    return (\n        <li className=\"card card--bestbet\">\n            <a\n                href={props.details.clickTrackingUrl}\n                className=\"card__anchor card__details\"\n            >\n                <div className=\"card__details__text\">\n                    <h3 className=\"card__heading\">{props.details.title}</h3>\n                    <p className=\"card__description\">\n                        {props.details.description}\n                    </p>\n                </div>\n            </a>\n        </li>\n    );\n}\n\nFinder__Results__BestBet.propTypes = {\n    details: PropTypes.object,\n};\n\nexport default Finder__Results__BestBet;\n","/**\n * @module patterns/finder/components/finder__didyoumean\n * @author Web Development\n * @copyright City, University of London 2019\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Returns a Funnelback spelling suggestion as a button to update the query.\n *\n * @param {object} props React props.\n * @returns {object} - React component.\n */\nfunction Finder__DidYouMean(props) {\n    const didyoumean = props.query.misspelling ? (\n        <p className=\"finder__results__didyoumean\">\n            No {props.summariseAs.plural} found for “{props.query.misspelling}”.\n            Searching instead for “{props.query.query}”.\n        </p>\n    ) : (\n        <p className=\"finder__results__didyoumean\">\n            Did you mean{' '}\n            <button\n                type=\"button\"\n                className=\"finder__didyoumean__button\"\n                onClick={() => {\n                    const newQuery = props.query;\n\n                    newQuery.query = props.response.spell.text\n                        .split(/\\|/)[0]\n                        .trim();\n                    newQuery.startRank = 1;\n                    newQuery.misspelling = null;\n                    newQuery.interacted = true;\n                    newQuery.facets = {};\n\n                    props.update.query(newQuery);\n                    props.update.results(!props.update.updateState);\n                }}\n            >\n                “{props.response.spell.text.split(/\\|/)[0].trim()}”\n            </button>\n            ?\n        </p>\n    );\n\n    return didyoumean;\n}\n\nFinder__DidYouMean.propTypes = {\n    query: PropTypes.object,\n    response: PropTypes.object,\n    summariseAs: PropTypes.object,\n    update: PropTypes.object,\n};\n\nexport default Finder__DidYouMean;\n","/**\n * @module patterns/finder/components/finder__results__summary\n * @author Web Development\n * @copyright City, University of London\n */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nfunction Finder__Results__Promo(props) {\n    return (\n        <li className=\"card card--finder-promo promo-area__wrap\">\n            <div className=\"promo-area layout__left--full\">\n                <div className=\"promo-area__content background--pink90\">\n                    <h3 className=\"promo-area__heading\">{props.heading}</h3>\n                    <div className=\"promo-area__container\">\n                        <div className=\"promo-area__text\">\n                            <p>{props.body}</p>\n                            <p className=\"cta-block__cta\">\n                                <a\n                                    href={props.linkRef}\n                                    className=\"outline-cta-arrow--bright\"\n                                >\n                                    <span>{props.linkText}</span>\n                                </a>\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </li>\n    );\n}\n\nFinder__Results__Promo.propTypes = {\n    heading: PropTypes.string,\n    body: PropTypes.string,\n    linkRef: PropTypes.string,\n    linkText: PropTypes.string,\n};\n\nexport default Finder__Results__Promo;\n","/**\n * @module patterns/finder/components/finder__results__summary\n * @author Web Development\n * @copyright City, University of London 2019\n */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Sort from '../filters/finder__sort';\n\n/**\n * Results heading, summarising the response.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction Finder__Results__Summary(props) {\n    const result =\n            props.totalMatching === 1\n                ? props.summariseAs.singular\n                : props.summariseAs.plural,\n        formatter = new Intl.NumberFormat('en-GB'),\n        sort =\n            props.config.sort.length > 1 && props.config.displaySort ? (\n                <div className=\"wrapper--finder__select--sort--desktop\">\n                    <Sort\n                        config={props.config}\n                        query={props.query}\n                        update={props.update}\n                    />\n                </div>\n            ) : null;\n\n    if (props.totalMatching === 0) {\n        return (\n            <div className=\"finder__results__summary finder__results__summary--noresults\">\n                <h2 className=\"finder__results__summary__heading\">\n                    Your search did not match any {props.summariseAs.plural}.\n                </h2>\n                <p>Suggestions:</p>\n                <ul>\n                    <li>Make sure that all words are spelled correctly</li>\n                    <li>Try different keywords</li>\n                    <li>Try more general keywords</li>\n                    <li>Try fewer keywords</li>\n                    <li>Try fewer filters</li>\n                    {Object.keys(props.query.facets).length > 0 && (\n                        <li>\n                            <button\n                                type=\"button\"\n                                onClick={() => {\n                                    props.clear(true);\n                                }}\n                            >\n                                Reset filters\n                            </button>\n                        </li>\n                    )}\n                    {props.query.query && (\n                        <li>\n                            <button\n                                type=\"button\"\n                                onClick={() => {\n                                    const newQuery = props.query;\n\n                                    newQuery.query = '';\n                                    newQuery.sortType =\n                                        props.config.sort[0].type;\n                                    newQuery.misspelling = null;\n                                    newQuery.startRank = 1;\n                                    newQuery.interacted = true;\n\n                                    props.update.query(newQuery);\n                                    props.update.results(\n                                        !props.update.updateState\n                                    );\n                                }}\n                            >\n                                Reset query\n                            </button>\n                        </li>\n                    )}\n                </ul>\n            </div>\n        );\n    } else {\n        return (\n            <div className=\"finder__results__summary\">\n                <h2\n                    aria-live=\"polite\"\n                    className=\"finder__results__summary__heading\"\n                >\n                    {props.query.query ||\n                    Object.keys(props.query.facets).length > 0\n                        ? 'Matching'\n                        : 'All'}{' '}\n                    {result}{' '}\n                    <span>\n                        (showing{' '}\n                        {props.totalMatching > props.numRanks && (\n                            <>\n                                <span>{formatter.format(props.currStart)}</span>\n                                –<span>{formatter.format(props.currEnd)}</span>{' '}\n                                of{' '}\n                            </>\n                        )}\n                        <span>{formatter.format(props.totalMatching)}</span>{' '}\n                        {result}\n                        {props.query.query && ` for “${props.query.query}”`})\n                    </span>\n                </h2>\n                {sort}\n            </div>\n        );\n    }\n}\n\nFinder__Results__Summary.propTypes = {\n    clear: PropTypes.func,\n    config: PropTypes.object,\n    currEnd: PropTypes.number,\n    currStart: PropTypes.number,\n    numRanks: PropTypes.number,\n    query: PropTypes.object,\n    summariseAs: PropTypes.object,\n    totalMatching: PropTypes.number,\n    update: PropTypes.object,\n};\n\nexport default Finder__Results__Summary;\n","/**\n * @module patterns/finder/components/finder__results\n * @author Web Development\n * @copyright City, University of London 2021\n */\n\nimport BestBet from '../cards/finder__results__bestbet';\nimport Card from '../cards/finder__results__card';\nimport DidYouMean from './finder__didyoumean';\nimport Pagination from './finder__pagination';\nimport PromoCard from '../cards/finder__results__promo';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Summary from './finder__results__summary';\n\n/**\n * Render Funnelback results.\n *\n * @param {object} props React props.\n * @return {object} - React component.\n */\nfunction Finder__Results(props) {\n    const updating = (\n        <p className=\"finder__results__updating\" aria-live=\"polite\">\n            <span className=\"fas fa-spinner fa-pulse icon\" aria-hidden=\"true\" />{' '}\n            <span>Updating {props.summariseAs.plural}…</span>\n        </p>\n    );\n\n    /**\n     * Display promo card based on user search/filter input.\n     *\n     * Props passed from finder. If conditions are met, promo card will display between first\n     * result card and the rest of the returned results.\n     */\n    let promoCardConditionMet = false, // Are conditions met to render promo card?\n        matchedPromoGroup = [], // Matching promo group based on query parameters\n        matchedPromoGroupDetails; // Matched promo group data to render to card\n\n    if (props.promo) {\n        let promoConditions = props.promo[0]['conditions'], // Conditions to render promo card\n            promoDetails = props.promo[0]['details'], // Details rendered to promo card\n            filterFacets = props.query.facets, // User-defined filter/search values\n            searchFacets = props.query.query.toLowerCase(), // User-input search value\n            promoCardConditionGroup, // Group-specific data to render in promo card\n            queryFacetsAll = { ...filterFacets, searchFacets }; // Combine filter and search inputs\n\n        // Promo condition check and define group\n        let queryFacetsArray = [];\n        let queries = Object.values(queryFacetsAll);\n        for (const query of queries) {\n            queryFacetsArray.push(query);\n        }\n\n        // Remove empty array items\n        queries = queries.filter((item) => item);\n\n        // Loop query parameters and check if they match any of the promo card conditions\n        for (const q of queries) {\n            matchedPromoGroup = promoConditions.filter(\n                (el) =>\n                    el.school === q ||\n                    el.level === q ||\n                    el.related === q ||\n                    el.subject === q ||\n                    el.type === q ||\n                    el.searchQuery1 === q\n            );\n        }\n\n        // Assign promo group value and define if promo card conditions are met\n        matchedPromoGroup.length > 0\n            ? (promoCardConditionGroup = matchedPromoGroup[0]['promoGroup']) &&\n              (promoCardConditionMet = true)\n            : (promoCardConditionMet = false);\n\n        // Filter promo card details to match correct group of data\n        matchedPromoGroupDetails = promoDetails.filter(\n            (el) => el.promoGroup === promoCardConditionGroup\n        );\n    }\n\n    const resultsClass =\n        'resultsVariant' in props.config\n            ? `finder__results__list finder__results__list--${props.config.resultsVariant}`\n            : 'finder__results__list';\n\n    if (props.response) {\n        const summary = (\n            <Summary\n                clear={props.clear}\n                config={props.config}\n                currEnd={props.response.summary.currEnd}\n                currStart={props.response.summary.currStart}\n                numRanks={props.response.summary.numRanks}\n                query={props.query}\n                summariseAs={props.summariseAs}\n                totalMatching={props.response.summary.totalMatching}\n                update={props.update}\n            />\n        );\n\n        const didYouMean = (props.query.misspelling ||\n            props.response.spell) && (\n            <DidYouMean\n                query={props.query}\n                summariseAs={props.summariseAs}\n                response={props.response}\n                update={props.update}\n            />\n        );\n\n        // if we have more results than will fit on a single page, we need\n        // pagination\n        const pagination = props.response.summary.totalMatching >\n            props.response.summary.numRanks && (\n            <Pagination\n                currStart={props.response.summary.currStart}\n                numRanks={props.response.summary.numRanks}\n                query={props.query}\n                totalMatching={props.response.summary.totalMatching}\n                update={props.update}\n            />\n        );\n\n        let results,\n            secondItemOnwards = props.response.results;\n\n        if (\n            promoCardConditionMet &&\n            (props.response.bestBets.length > 0 ||\n                props.response.results.length > 0)\n        ) {\n            if (props.query.startRank === 1) {\n                const firstItemData = props.response.results[0];\n                const secondItemOnwardsData = Array.from(\n                    secondItemOnwards.slice(1)\n                );\n\n                results = (\n                    <ol\n                        start={props.response.summary.currStart}\n                        className={resultsClass}\n                    >\n                        <Card\n                            bestBet={false}\n                            details={firstItemData}\n                            type={props.type}\n                            query={props.query}\n                        />\n                        <PromoCard\n                            heading={matchedPromoGroupDetails[0]['heading']}\n                            body={matchedPromoGroupDetails[0]['body']}\n                            linkRef={matchedPromoGroupDetails[0]['linkRef']}\n                            linkText={matchedPromoGroupDetails[0]['linkText']}\n                        />\n                        {secondItemOnwardsData.map((s) => (\n                            <Card\n                                bestBet={false}\n                                details={s}\n                                key={s.docNum}\n                                type={props.type}\n                                query={props.query}\n                            />\n                        ))}\n                    </ol>\n                );\n            } else {\n                results = (\n                    <ol\n                        start={props.response.summary.currStart}\n                        className={resultsClass}\n                    >\n                        {props.response.results.map((card) => (\n                            <Card\n                                bestBet={false}\n                                details={card}\n                                key={card.docNum}\n                                type={props.type}\n                                query={props.query}\n                            />\n                        ))}\n                    </ol>\n                );\n            }\n        }\n\n        if (props.response.results && !promoCardConditionMet) {\n            results =\n                props.response.bestBets.length > 0 ||\n                props.response.results.length > 0 ? (\n                    <ol\n                        start={props.response.summary.currStart}\n                        className={resultsClass}\n                    >\n                        {props.response.bestBets.map((card) => (\n                            <BestBet details={card} key={card.docNum} />\n                        ))}\n\n                        {props.response.results.map((card) => (\n                            <Card\n                                bestBet={false}\n                                details={card}\n                                key={card.docNum}\n                                type={props.type}\n                                query={props.query}\n                            />\n                        ))}\n                    </ol>\n                ) : null;\n        }\n\n        // render either the results, or a spinner while we wait for Funnelback\n        const resultsContent = props.updating ? (\n            <React.Fragment>{updating}</React.Fragment>\n        ) : (\n            <React.Fragment>\n                {didYouMean}\n                {summary}\n                {results}\n                {pagination}\n            </React.Fragment>\n        );\n        return <div className=\"finder__results\">{resultsContent}</div>;\n    } else {\n        return <div className=\"finder__results\">{updating}</div>;\n    }\n}\n\nFinder__Results.propTypes = {\n    clear: PropTypes.func,\n    query: PropTypes.object,\n    response: PropTypes.object,\n    summariseAs: PropTypes.object,\n    type: PropTypes.string,\n    update: PropTypes.object,\n    updating: PropTypes.bool,\n};\n\nexport default Finder__Results;\n","/**\n * Functions for making requests to Funnelback\n *\n * @module funnelback\n * @author Web Development\n * @copyright City, University of London 2019\n */\n\nimport axios from 'axios';\nimport https from 'https';\nimport { axiosRequest } from '../../util.js';\n\n/**\n * LAUNCH: change web2020.city.ac.uk to www.city.ac.uk\n */\nconst baseUrl = 'https://www.city.ac.uk/web-services',\n    findRootUrl = '/funnelback-find',\n    suggestRootUrl = '/funnelback-suggest',\n    maximumSuggestions = 100,\n    timeout = 30000;\n\n/**\n * Funnelback search query.\n *\n * @param {string} collection The Funnelback collection to query.\n * @param {string} [query] The query string.\n * @param {string} [sortType] The field to sort by.\n * @param {integer} startRank The first result to return.\n * @param {integer} numRank The number of results to return.\n * @param {object} [facets] A map of facets to query strings.\n * @return {Promise} - A promise of search results.\n */\nexport function find(\n    collection,\n    fixedFacets,\n    fixedParameters,\n    query,\n    sortType,\n    startRank,\n    numRank,\n    facets,\n    events\n) {\n    const fixedParams = {};\n    fixedParameters.forEach((param) => {\n        fixedParams[`${param.name}`] = param.value;\n    });\n\n    const fixedFacetParams = {};\n    fixedFacets.forEach((facet) => {\n        fixedFacetParams[`meta_${facet.meta}_sand`] = facet.value;\n    });\n\n    const facetParams = {},\n        facetKeys = Object.keys(facets);\n\n    facetKeys.forEach((key) => (facetParams[`meta_${key}_sand`] = facets[key]));\n\n    const CancelToken = axios.CancelToken,\n        call = CancelToken.source(),\n        config = {\n            baseURL: baseUrl,\n            cancelToken: call.token,\n            httpsAgent: new https.Agent({ keepAlive: true }),\n            url: findRootUrl,\n            timeout: timeout,\n            params: {\n                ...fixedParams,\n                ...fixedFacetParams,\n                ...facetParams,\n                collection: collection,\n                num_ranks: numRank,\n                query: query,\n                sort: sortType || '',\n                start_rank: startRank,\n                events: events || '',\n            },\n        };\n\n    return [axiosRequest(config), call];\n}\n\n/**\n * Funnelback suggestion query.\n *\n * @param {string} collection The Funnelback collection to query.\n * @param {string} partialQuery The string to make suggestions for.\n * @return {Promise} - A promise of an array of suggestion strings.\n */\nexport function suggest(collection, partialQuery) {\n    const CancelToken = axios.CancelToken,\n        call = CancelToken.source(),\n        config = {\n            baseURL: baseUrl,\n            cancelToken: call.token,\n            url: suggestRootUrl,\n            timeout: timeout,\n            params: {\n                collection: collection,\n                partial_query: partialQuery,\n                show: maximumSuggestions,\n            },\n        };\n\n    return [axiosRequest(config), call];\n}\n\n/**\n * Finder configuration.\n *\n * @param {string} url The Finder configuration file.\n * @return {Promise} - A promise of  configuration object.\n */\nexport function finderConfig(url) {\n    const config = {\n        timeout: timeout,\n        url: url,\n    };\n\n    return axiosRequest(config);\n}\n"],"sourceRoot":""}