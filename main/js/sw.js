!function(e){function t(t){for(var r,u,c=t[0],s=t[1],a=t[2],l=0,p=[];l<c.length;l++)u=c[l],Object.prototype.hasOwnProperty.call(o,u)&&o[u]&&p.push(o[u][0]),o[u]=0;for(r in s)Object.prototype.hasOwnProperty.call(s,r)&&(e[r]=s[r]);for(f&&f(t);p.length;)p.shift()();return i.push.apply(i,a||[]),n()}function n(){for(var e,t=0;t<i.length;t++){for(var n=i[t],r=!0,c=1;c<n.length;c++){var s=n[c];0!==o[s]&&(r=!1)}r&&(i.splice(t--,1),e=u(u.s=n[0]))}return e}var r={},o={12:0},i=[];function u(t){if(r[t])return r[t].exports;var n=r[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,u),n.l=!0,n.exports}u.m=e,u.c=r,u.d=function(e,t,n){u.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},u.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},u.t=function(e,t){if(1&t&&(e=u(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(u.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)u.d(n,r,function(t){return e[t]}.bind(null,r));return n},u.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return u.d(t,"a",t),t},u.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},u.p="";var c=window.webpackJsonp=window.webpackJsonp||[],s=c.push.bind(c);c.push=t,c=c.slice();for(var a=0;a<c.length;a++)t(c[a]);var f=s;i.push([161,1,0]),n()}({161:function(e,t,n){e.exports=n(162)},162:function(e,t,n){"use strict";n.r(t),n(3);const r="city-web2020",o=["/__data/assets/git_bridge/0005/440879/main/js/main.js","/__data/assets/git_bridge/0005/440879/main/css/main.css","/","/404"];self.addEventListener("install",(function(e){e.waitUntil(caches.open(r).then((function(e){return e.addAll(o)})))})),self.addEventListener("fetch",(function(e){"GET"===e.request.method&&0===e.request.url.indexOf(window.location.origin)&&e.respondWith(caches.match(e.request).then((function(t){if(t)return t;const n=e.request.clone();return fetch(n,{credentials:"include"}).then((function(t){if(!t||200!==t.status||"basic"!==t.type)return t;const n=t.clone();return caches.open(r).then((function(t){t.put(e.request,n)})),t}))})))}))}});