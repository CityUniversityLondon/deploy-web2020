{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/how-to-apply--pgt.js","webpack:///./src/patterns/how-to-apply/buttons/apply.js","webpack:///./src/patterns/how-to-apply/buttons/date.js","webpack:///./src/patterns/how-to-apply/how-to-apply--pgt.js","webpack:///./src/patterns/how-to-apply/pgt-data.js","webpack:///./src/util.js"],"names":["document","addEventListener","test","navigator","userAgent","howToApplyCTAs","querySelectorAll","Array","from","forEach","howToApply","howToApplyConfig","dataset","config","then","render","edn","ApplyLinks","props","data","map","d","index","btnText","header","months","StartDates","formattedDate","Date","getUTCMonth","getUTCFullYear","length","e","dateBtn","target","querySelector","dateVal","textContent","filteredDateData","filter","f","formatDate","sourceDate","HowToApply","entryPoints","initialModalDisplay","initialPreferences","qualification","Object","keys","subject","entry","location","modalVisible","setModalVisible","useState","preferences","setPreferences","firstStep","setFirstStep","windowPrompt","setWindowPrompt","selection","setSelection","initialSelection","setInitialSelection","options","promptRoute","promptEntryPoint","modalJourney","singleQualData","filteredSubjData","filterDatesData","s","dates","locations","l","methods","filterSubjData","subjData","filterSubjectData","subjectNames","subjBtn","subjVal","spanText","subjects","firstChild","removeChild","dateButtons","methodsData","setMultipleSubjects","applyLinks","journeyFromButton","qualBtn","qualVal","filteredQualData","journeyFromSpan","question","multipleSubjects","qualificationQuestion","i","qualificationsProgress","newPreferences","subjectsProgress","entryPointsProgress","nextStep","qualificationsProgressMobile","subjectsProgressMobile","entryPointsProgressMobile","nextStepMobile","alternative","element","otheryear","otherurl","focusTrap","setFocusTrap","modalRef","modalContentRef","getModal","getModalContent","useEffect","activate","createFocusTrap","initialFocus","onDeactivate","clickOutsideDeactivates","disableBodyScroll","deactivate","enableBodyScroll","modal","modalContent","display","year","propTypes","PropTypes","array","object","timeout","url","axiosRequest","toBool","partialMatchFn","m","indexOf","fullMatchFn","removeClass","elem","className","removePartials","matchFn","split","join","reduceMotion","reducedMotionQuery","window","matchMedia","matches","isVisible","offsetHeight","offsetWidth","verticallyInWindow","getBoundingClientRect","top","innerHeight","parametersToObject","parameterString","parameters","substr","parameter","k","v","objectToParameters","parameterObj","key","gaEvent","event","eventCategory","eventAction","eventLabel","eventValue","nonInteractionHit","dataLayer","push","appendAll","children","child","appendChild","numberFromString","string","number","replace","isMobile","screen","viewPortWidth","innerWidth","mobileScreen","toArray","obj","detectIE","ua","versionLength","msie","msieVersionOffset","parseInt","substring","trident","tridentVersionOffset","rv","edge","edgeVersionOffset","checkIntersectionObserver","IntersectionObserverEntry","prototype","createHTMLElement","type","attributes","el","createElement","att","label","createTextNode","val","setAttribute","uppercaseFirstLetterLowercaseRest","charAt","toUpperCase","slice","toLowerCase","httpOK","axios","response","status","catch","isCancel","lineNumber","message","fileName","daySuffix","day","eleventh","thirteenth","lastDigit","toString","formatReactDate","date","days","toISOString","getUTCDay","getUTCDate","arraySlicer","arr","len","newArray","n"],"mappings":"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","file":"how-to-apply--pgt.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"how-to-apply--pgt\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([6,\"vendor-dependencies\",\"core\",\"react\",\"axios\",\"vendor-direct\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/**\n * How to apply PGT entry\n *\n * @author Web Development\n * @copyright City, University of London 2020\n */\nimport React from 'react';\nimport { render } from 'react-dom';\nimport HowToApply from './patterns/how-to-apply/how-to-apply--pgt';\nimport { howToApplyConfig } from './patterns/how-to-apply/pgt-data';\nimport edn from 'edn-to-js';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    if (/(Trident|MSIE)/.test(navigator.userAgent)) {\n        return;\n    } else {\n        const howToApplyCTAs = document.querySelectorAll(\n            '.how-to-apply--pgt--js'\n        );\n        howToApplyCTAs &&\n            Array.from(howToApplyCTAs).forEach(howToApply => {\n                howToApplyConfig(howToApply.dataset.config).then(config => {\n                    render(\n                        <HowToApply\n                            config={edn(config)}\n                            element={howToApply}\n                        />,\n                        howToApply\n                    );\n                });\n            });\n    }\n});\n","import React from 'react';\n\nexport default function ApplyLinks(props) {\n    if (props.data) {\n        // console.log(props.data);\n        return props.data.map((d, index) => {\n            return (\n                <li key={index} className=\"apply\">\n                    <a href={d['options']['apply']}>\n                        <span>{props.btnText ? props.btnText : d.header}</span>\n                        &nbsp;\n                        <span\n                            className=\"far fa-external-link\"\n                            aria-label=\"(external link)\"\n                        />\n                    </a>\n                </li>\n            );\n        });\n    }\n}\n","import ApplyLinks from '../buttons/apply';\nimport React from 'react';\n\nconst months = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n];\n\nexport default function StartDates(props) {\n    if (props.data) {\n        // console.log('SD: ' + props.data + props.data.length);\n\n        // Format date so it's possible to filter on based on button text value\n        let data = props.data;\n        let formattedDate;\n        for (const d of data) {\n            formattedDate = new Date(d.header);\n            d.header = `${\n                months[formattedDate.getUTCMonth()]\n            } ${formattedDate.getUTCFullYear()}`;\n        }\n\n        return props.data.map((d, index) => {\n            if (d['options'][0]['options'].length > 1) {\n                // console.log('load methods screen');\n                return (\n                    <React.Fragment>\n                        <p>Choose the entry point you wish to apply for:</p>\n                        <li key={index}>\n                            <button\n                                onClick={(e) => {\n                                    // Target selected date button's text value, e.g. 'September 2021'\n                                    let dateBtn = e.target.querySelector(\n                                        'span'\n                                    );\n                                    let dateVal = dateBtn.textContent;\n\n                                    // Filter entry points data on selected qualification\n                                    let filteredDateData = props.data.filter(\n                                        (e) => e.header === dateVal\n                                    );\n\n                                    // Multiple methods of study? (Skipping Location for now)\n                                    for (const f of filteredDateData) {\n                                        if (\n                                            f['options'][0]['options'].length >\n                                            1\n                                        ) {\n                                            // Open method of study selection\n                                        } else {\n                                            <ul className=\"how-to-apply--pgt--js__options\">\n                                                {\n                                                    <ApplyLinks\n                                                        btnText={'abc'}\n                                                        data={\n                                                            f['options'][0][\n                                                                'options'\n                                                            ][0]['options']\n                                                        }\n                                                    />\n                                                }\n                                            </ul>;\n                                        }\n                                    }\n                                }}\n                            >\n                                <span>{d.header}</span>\n                            </button>\n                        </li>\n                    </React.Fragment>\n                );\n            } else {\n                // console.log([d['options'][0]['options'][0]]);\n                return (\n                    <ApplyLinks\n                        btnText={d.header}\n                        data={[d['options'][0]['options'][0]]}\n                    />\n                );\n            }\n        });\n    }\n}\n","/**\n * How to apply for postgraduate taught degrees\n *\n * Don't run this via patterns.js, it's a separate compilation.\n *\n * @module patterns/how-to-apply/how-to-apply--pgt\n * @author Web Development\n * @copyright City, University of London 2020\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\n\nimport ApplyLinks from './buttons/apply';\nimport PropTypes from 'prop-types';\nimport StartDates from './buttons/date';\nimport createFocusTrap from 'focus-trap';\n\nconst months = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n];\n\nfunction formatDate(sourceDate) {\n    let formattedDate = new Date(sourceDate);\n    return `${\n        months[formattedDate.getUTCMonth()]\n    } ${formattedDate.getUTCFullYear()}`;\n}\n\n/**\n * Launch the how to apply modal.\n *\n * @param {object} props The JSON configuration file for the modal.\n * @return {object} The React component to render.\n */\nfunction HowToApply(props) {\n    let entryPoints = props.config,\n        initialModalDisplay;\n    const initialPreferences = {\n            qualification:\n                Object.keys(entryPoints).length === 1\n                    ? Object.keys(entryPoints[0])[0]\n                    : null,\n            subject: null,\n            entry: null,\n            location: null,\n        },\n        [modalVisible, setModalVisible] = useState(false),\n        [preferences, setPreferences] = useState(initialPreferences),\n        [firstStep, setFirstStep] = useState(false), // Controls 'Start again' visibility\n        [windowPrompt, setWindowPrompt] = useState(\n            'Choose the qualification you wish to apply for:'\n        );\n    let [selection, setSelection] = useState();\n    let [initialSelection, setInitialSelection] = useState();\n    let options = document.querySelector('.how-to-apply--pgt--js__options'),\n        // promptQualification = 'Choose the qualification you wish to apply for:',\n        promptRoute = 'Choose the route you wish to apply for:',\n        promptEntryPoint = 'Choose the entry point you wish to apply for:';\n\n    // Test logs\n    // console.log('subject: '  + entryPoints[0]['options'].length); // subject\n    // console.log('date: '     + entryPoints[0]['options'][0]['options'].length); // date\n    // console.log('location: ' + entryPoints[0]['options'][0]['options'][0]['options'].length); // location\n    // console.log('method: '   + entryPoints[0]['options'][0]['options'][0]['options'][0]['options'].length); // subjects\n\n    function modalJourney(singleQualData) {\n        // If reset option has been used, remove buttons from DOM to avoid unwanted buttons rendering.\n        setInitialSelection();\n\n        let filteredSubjData;\n\n        // function filterMethods(methods) {\n        //     // Loop methods; see if they can\n        //     (options = (\n        //         <ApplyLinks\n        //             data={methods}\n        //         />\n        //     ));\n        //     setSelection(\n        //         <ul className=\"how-to-apply--pgt--js__options\">\n        //             {options}\n        //         </ul>\n        //     );\n        // }\n\n        function filterDatesData(filterDatesData) {\n            // Loop dates; see if they can be direct links\n            filterDatesData.map((s) => {\n                let dates = s['options'];\n                dates.map((d) => {\n                    let locations = d['options'];\n                    locations.map((l) => {\n                        let methods = l['options'];\n                        methods.map(() => {\n                            if (\n                                dates.length > 1 &&\n                                (locations.length > 1 || methods.length > 1)\n                            ) {\n                                // Multiple locations and/or methods exist. Render Regular buttons. Next window content decided in filterLocationsData function.\n                            } else {\n                                // Display dates as links\n                                options = (\n                                    <ul className=\"how-to-apply--pgt--js__options\">\n                                        {filterDatesData[0]['options'].map(\n                                            (d) => {\n                                                return (\n                                                    <ApplyLinks\n                                                        key={d}\n                                                        data={\n                                                            d['options'][0][\n                                                                'options'\n                                                            ]\n                                                        }\n                                                        btnText={formatDate(\n                                                            d.header\n                                                        )}\n                                                    />\n                                                );\n                                            }\n                                        )}\n                                    </ul>\n                                );\n                                setWindowPrompt(promptEntryPoint);\n                                setSelection(options);\n                            }\n                        });\n                    });\n                });\n            });\n        }\n\n        // See if we can perform data filter on click; don't think we need separate function for this.\n        function filterSubjData(subject) {\n            let subjData = singleQualData[0]['options'];\n            filteredSubjData = subjData.filter((s) => s.header === subject);\n            filterDatesData(filteredSubjData);\n        }\n\n        function filterSubjectData() {\n            singleQualData.map((s) => {\n                let subjectNames = s['options'];\n                filterSubjData(subjectNames);\n                subjectNames.map((s) => {\n                    let dates = s['options'];\n                    dates.map((d) => {\n                        let locations = d['options'];\n                        locations.map((l) => {\n                            let methods = l['options'];\n                            if (\n                                subjectNames.length > 1 &&\n                                (dates.length ||\n                                    locations.length ||\n                                    methods.length > 1)\n                            ) {\n                                // Multiple dates, locations and/or methods exist. Render Regular buttons. Next window content decided in filterDatesData function.\n                                options = (\n                                    <ul className=\"how-to-apply--pgt--js__options\">\n                                        {subjectNames.map((s) => {\n                                            return (\n                                                <li key={s}>\n                                                    <button\n                                                        onClick={(e) => {\n                                                            let subjBtn = e.target.querySelector(\n                                                                'span'\n                                                            );\n                                                            let subjVal =\n                                                                subjBtn.textContent;\n                                                            let filteredSubjData = subjectNames.filter(\n                                                                (s) =>\n                                                                    s.header ===\n                                                                    subjVal\n                                                            );\n                                                            filterDatesData(\n                                                                filteredSubjData\n                                                            );\n                                                        }}\n                                                    >\n                                                        <span\n                                                            onClick={(e) => {\n                                                                let spanText =\n                                                                    e.target\n                                                                        .textContent;\n                                                                let filteredSubjData = subjectNames.filter(\n                                                                    (s) =>\n                                                                        s.header ===\n                                                                        spanText\n                                                                );\n                                                                filterDatesData(\n                                                                    filteredSubjData\n                                                                );\n                                                            }}\n                                                        >\n                                                            {s.header}\n                                                        </span>\n                                                    </button>\n                                                </li>\n                                            );\n                                        })}\n                                    </ul>\n                                );\n                                setWindowPrompt(promptRoute);\n                                setSelection(options);\n                            } else {\n                                // Display subjects as links\n                            }\n                        });\n                    });\n                });\n            });\n        }\n\n        if (singleQualData[0]['options'].length > 1) {\n            // Multiple subjects - can't use (not filtered)\n            let subjects = singleQualData[0]['options'];\n            let dates = singleQualData[0]['options'][0]['options'];\n            let methods =\n                singleQualData[0]['options'][0]['options'][0]['options'][0][\n                    'options'\n                ];\n            if (subjects.length > 1) {\n                if (options.firstChild) {\n                    while (options.firstChild) {\n                        options.removeChild(options.firstChild);\n                    }\n                }\n\n                setWindowPrompt('Choose the route you wish to apply for:');\n\n                filterSubjectData();\n\n                options = (\n                    <ul className=\"how-to-apply--pgt--js__options\">\n                        {subjects.map((d) => {\n                            return (\n                                // Multiple subjects > Multiple dates\n                                dates.length > 1 ? (\n                                    <li key={d}>\n                                        <button // subject button\n                                            onClick={(e) => {\n                                                // Target clicked qualification button and its text value, e.g. 'MSc'\n                                                let subjBtn = e.target.querySelector(\n                                                    'span'\n                                                );\n                                                let subjVal =\n                                                    subjBtn.textContent;\n                                                filterSubjData(subjVal);\n\n                                                setFirstStep(false);\n                                                // Multiple subjects > Multiple dates > Multiple methods\n                                                // methods.length > 1 ? (\n                                                //     <ApplyLinks\n                                                //         key={d}\n                                                //         data={methods}\n                                                //         btnText={d.header}\n                                                //     />\n                                                // ) : (\n                                                //     // Multiple subjects > Multiple dates > Single methods. Date is link.\n                                                //     (options = dates.map(\n                                                //         (d) => {\n                                                //             return (\n                                                //                 <ApplyLinks\n                                                //                     key={d}\n                                                //                     data={\n                                                //                         methods\n                                                //                     }\n                                                //                     btnText={formatDate(\n                                                //                         d.header\n                                                //                     )}\n                                                //                 />\n                                                //             );\n                                                //         }\n                                                //     ))\n                                                // );\n                                                setSelection(\n                                                    <ul className=\"how-to-apply--pgt--js__options\">\n                                                        {options}\n                                                    </ul>\n                                                );\n                                            }}\n                                        >\n                                            <span>{d.header}</span>\n                                        </button>\n                                    </li>\n                                ) : // Multiple subjects > Single date\n                                // Multiple subjects > Single date > Multiple methods\n                                methods.length > 1 ? (\n                                    <li key={d}>\n                                        <button\n                                            onClick={() => {\n                                                setFirstStep(false);\n                                                // console.log('methods screen');\n                                            }}\n                                        >\n                                            <span>{d.header}</span>\n                                        </button>\n                                    </li>\n                                ) : (\n                                    <p>placeholder</p>\n\n                                    // Filter links data and pass as props\n                                    // Multiple subjects > Single date > Single method. Subject is link.\n                                    // dates.map((date) => {\n                                    // console.log('2: ' + singleQualData)\n                                    // return (\n                                    // ***\n\n                                    //         <ApplyLinks\n                                    //             key={date}\n                                    //             data={methods}\n                                    //             btnText={d.header}\n                                    //         />\n\n                                    //     );\n                                    // })\n                                )\n                            );\n                        })}\n                    </ul>\n                );\n                setSelection(options);\n            }\n        } else {\n            // Are there multiple subject routes?\n            if (singleQualData[0]['options'].length > 1) {\n                // console.log('Open subjects window');\n                // Begin multiple subjects route\n            } else {\n                // Are there multiple entry dates?\n                if (singleQualData[0]['options'][0]['options'].length > 1) {\n                    setWindowPrompt(\n                        'Choose the entry point you wish to apply for:'\n                    );\n                    // Remove existing options buttons\n                    if (options.firstChild) {\n                        while (options.firstChild) {\n                            options.removeChild(options.firstChild);\n                        }\n                    }\n\n                    // Extract dates data\n                    let dateButtons =\n                        singleQualData[0]['options'][0]['options'];\n\n                    let methods = dateButtons[0]['options'][0]['options'];\n                    if (methods.length > 1) {\n                        // Single method of study; date button(s) will open methods selection\n                        setWindowPrompt(\n                            'Choose the entry point you wish to apply for:'\n                        );\n                        options = (\n                            <ul className=\"how-to-apply--pgt--js__options\">\n                                {dateButtons.map((d) => {\n                                    let methodsData =\n                                        d['options'][0]['options'];\n                                    return (\n                                        <li key={d}>\n                                            <button\n                                                onClick={() => {\n                                                    setFirstStep(false);\n                                                    // Open methods select as direct links\n                                                    options = (\n                                                        <ApplyLinks\n                                                            data={methodsData}\n                                                        />\n                                                    );\n                                                    setSelection(\n                                                        <ul className=\"how-to-apply--pgt--js__options\">\n                                                            {options}\n                                                        </ul>\n                                                    );\n                                                }}\n                                            >\n                                                <span>\n                                                    {formatDate(d.header)}\n                                                </span>\n                                            </button>\n                                        </li>\n                                    );\n                                })}\n                            </ul>\n                        );\n                    } else {\n                        // Single method of study; date button(s) are apply link(s)\n                        setWindowPrompt(\n                            'Choose the entry point you wish to apply for:'\n                        );\n                        options = (\n                            <ul className=\"how-to-apply--pgt--js__options\">\n                                {dateButtons.map((d) => {\n                                    let methodsData =\n                                        d['options'][0]['options'];\n                                    return (options = (\n                                        <ApplyLinks\n                                            key={d}\n                                            btnText={formatDate(d.header)}\n                                            data={methodsData}\n                                        />\n                                    ));\n                                })}\n                            </ul>\n                        );\n                    }\n                    // Make revised options markup available in the state\n                    setSelection(options);\n                } else {\n                    // console.log('multiple subjects, single date')\n                    setMultipleSubjects(false);\n                    // Are there multiple methods of study, e.g. 'full-time', 'part-time'?\n                    // console.log('Dont open dates window');\n                    // console.log(filteredQualData[0]['options'][0]['options'][0]['options']);\n                    if (\n                        singleQualData[0]['options'][0]['options'][0][\n                            'options'\n                        ][0]['options'].length > 1\n                    ) {\n                        setWindowPrompt('Apply online now:');\n                        // Remove existing options buttons\n                        // options.removeChild();\n                        if (options.firstChild) {\n                            while (options.firstChild) {\n                                options.removeChild(options.firstChild);\n                            }\n                        }\n\n                        // Extract apply links data\n                        let applyLinks =\n                            singleQualData[0]['options'][0]['options'][0][\n                                'options'\n                            ][0]['options'];\n\n                        // Update options block to apply links JSX\n                        options = (\n                            <ul className=\"how-to-apply--pgt--js__options\">\n                                {<ApplyLinks data={applyLinks} />}\n                            </ul>\n                        );\n\n                        // Make revised options markup available in the state\n                        setSelection(options);\n                    } else {\n                        // console.log('Qualification buttons should be apply links. Should do top-level check to see if direct link and output accordingly.');\n                    }\n                } // End multiple dates check\n            }\n        }\n    }\n\n    /**\n     * Launch the how to apply modal from a button click.\n     *\n     * @param {event} e The button click event.\n     */\n    function journeyFromButton(e) {\n        // Target clicked qualification button and its text value, e.g. 'MSc'\n        let qualBtn = e.target.querySelector('span');\n        let qualVal = qualBtn.textContent;\n\n        // Filter entry points data on selected qualification\n        let filteredQualData = entryPoints.filter((e) => e.header === qualVal);\n        modalJourney(filteredQualData);\n    }\n\n    /**\n     * Launch the how to apply modal from a button's child span click.\n     *\n     * @param {event} e The span click event.\n     */\n    function journeyFromSpan(e) {\n        let spanText = e.target.textContent;\n        // Filter entry points data on selected qualification\n        let filteredQualData = entryPoints.filter((e) => e.header === spanText);\n        modalJourney(filteredQualData);\n    }\n\n    const question = 'qualification',\n        [multipleSubjects, setMultipleSubjects] = useState(true),\n        // [multipleEntryPoints, setMultipleEntryPoints] = useState(true),\n        // [multipleLocations, setMultipleLocations] = useState(true),\n        qualificationQuestion = question === 'qualification' && (\n            <>\n                <div className=\"how-to-apply--pgt--js__modal__content-wrapper\">\n                    <p>{windowPrompt}</p>\n                    {selection}\n                    {initialSelection}\n                </div>\n                {\n                    (initialModalDisplay = (\n                        <ul className=\"how-to-apply--pgt--js__options\">\n                            {entryPoints.map((qualification, i) =>\n                                // Create top-level link to apply, or button creating next step in modal\n                                entryPoints.length > 1 &&\n                                qualification['options'].length === 1 &&\n                                qualification['options'][0]['options']\n                                    .length === 1 &&\n                                qualification['options'][0]['options'][0][\n                                    'options'\n                                ].length === 1 &&\n                                qualification['options'][0]['options'][0][\n                                    'options'\n                                ][0]['options'].length === 1 ? (\n                                    <li key={'qualification' + i}>\n                                        <a\n                                            href={\n                                                qualification['options'][0][\n                                                    'options'\n                                                ][0]['options'][0][\n                                                    'options'\n                                                ][0]['options']['apply']\n                                            }\n                                        >\n                                            <span>{qualification.header}</span>\n                                            &nbsp;\n                                            <span\n                                                className=\"far fa-external-link\"\n                                                aria-label=\"(external link)\"\n                                            />\n                                        </a>\n                                    </li>\n                                ) : entryPoints.length === 1 ? (\n                                    entryPoints[0]['options'].length > 1 ? ( // Multiple subjects\n                                        <p>Load subject select</p>\n                                    ) : entryPoints[0]['options'][0]['options']\n                                          .length > 1 ? ( // Single subject => Multiple dates\n                                        // Update options block to apply links JSX\n                                        <ul className=\"how-to-apply--pgt--js__options\">\n                                            {\n                                                <StartDates\n                                                    data={\n                                                        entryPoints[0][\n                                                            'options'\n                                                        ][0]['options']\n                                                    }\n                                                />\n                                            }\n                                        </ul>\n                                    ) : /** Single qualification logic; logic to work out which modal screen to show on CTA click\n                                     *  Top-level, initial modal render required. Look through entry points object and see which\n                                     *  options to provide user. Once determined, run modalJourney function.\n                                     *\n                                     * NOT YET DONE => when multiple subjects, dates or locations exist:\n                                     *\n                                     * - map relevant level array\n                                     * - print buttons {d.header}\n                                     * - on button click, run modalJourney but enter at one level below default to avoid extra click\n                                     **/\n                                    entryPoints[0]['options'].length > 1 ? (\n                                        <li>Subject select</li>\n                                    ) : entryPoints[0]['options'][0]['options']\n                                          .length > 1 ? (\n                                        <li>Date select</li>\n                                    ) : entryPoints[0]['options'][0][\n                                          'options'\n                                      ][0]['options'].length > 1 ? (\n                                        <li>Location select</li>\n                                    ) : entryPoints[0]['options'][0][\n                                          'options'\n                                      ][0]['options'][0]['options'].length >\n                                      1 ? (\n                                        <ul className=\"how-to-apply--pgt--js__options\">\n                                            <ApplyLinks\n                                                data={\n                                                    entryPoints[0][\n                                                        'options'\n                                                    ][0]['options'][0][\n                                                        'options'\n                                                    ][0]['options']\n                                                }\n                                            />\n                                        </ul>\n                                    ) : null // Single subject => Single date\n                                ) : (\n                                    <li key={'qualification' + i}>\n                                        <button\n                                            onClick={(e) => {\n                                                setFirstStep(false);\n                                                journeyFromButton(e);\n                                            }}\n                                        >\n                                            {/* Capture click on button's inner span element */}\n                                            <span\n                                                onClick={(e) => {\n                                                    setFirstStep(false);\n                                                    journeyFromSpan(e);\n                                                }}\n                                            >\n                                                {qualification.header}\n                                            </span>\n                                        </button>\n                                    </li>\n                                )\n                            )}\n                        </ul>\n                    ))\n                }\n            </>\n        ),\n        qualificationsProgress =\n            Object.keys(entryPoints).length > 1 ? (\n                question === 'qualification' ? (\n                    <li className=\"how-to-apply--pgt--js__modal__progress__current\">\n                        <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                            <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                                <span className=\"fas fa-circle icon\"></span>\n                            </span>\n                            <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                                Qualification\n                            </span>\n                        </span>\n                    </li>\n                ) : preferences.qualification ? (\n                    <li className=\"how-to-apply--pgt--js__modal__progress__previous\">\n                        <button\n                            className=\"how-to-apply--pgt--js__modal__progress__wrapper\"\n                            onClick={() => {\n                                const newPreferences = preferences;\n\n                                newPreferences.qualification = null;\n                                newPreferences.subject = null;\n                                newPreferences.entry = null;\n                                newPreferences.location = null;\n\n                                setPreferences(newPreferences);\n                                // setQuestion(\n                                //     nextQuestion(newPreferences, entryPoints)\n                                // );\n                            }}\n                        >\n                            <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                                <span\n                                    className=\"fas fa-check icon\"\n                                    aria-label=\"Back to choose qualification\"\n                                ></span>\n                            </span>\n                            <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                                {preferences.qualification}\n                            </span>\n                        </button>\n                    </li>\n                ) : null\n            ) : null,\n        subjectsProgress = multipleSubjects ? (\n            question === 'subject' ? (\n                <li className=\"how-to-apply--pgt--js__modal__progress__current\">\n                    <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                        <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                            <span className=\"fas fa-circle icon\"></span>\n                        </span>\n                        <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                            Route\n                        </span>\n                    </span>\n                </li>\n            ) : preferences.subject ? (\n                <li className=\"how-to-apply--pgt--js__modal__progress__previous\">\n                    <button\n                        className=\"how-to-apply--pgt--js__modal__progress__wrapper\"\n                        onClick={() => {\n                            const newPreferences = preferences;\n\n                            newPreferences.subject = null;\n                            newPreferences.entry = null;\n                            newPreferences.location = null;\n\n                            setPreferences(newPreferences);\n                            // setQuestion(\n                            //     nextQuestion(newPreferences, entryPoints)\n                            // );\n                        }}\n                    >\n                        <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                            <span\n                                className=\"fas fa-check icon\"\n                                aria-label=\"Back to choose study route\"\n                            ></span>\n                        </span>\n                        <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                            {preferences.subject}\n                        </span>\n                    </button>\n                </li>\n            ) : null\n        ) : null,\n        entryPointsProgress =\n            // multipleEntryPoints ? (\n            question === 'entry' ? (\n                <li className=\"how-to-apply--pgt--js__modal__progress__current\">\n                    <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                        <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                            <span className=\"fas fa-circle icon\"></span>\n                        </span>\n                        <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                            Entry point\n                        </span>\n                    </span>\n                </li>\n            ) : preferences.entry ? (\n                <li className=\"how-to-apply--pgt--js__modal__progress__previous\">\n                    <button\n                        className=\"how-to-apply--pgt--js__modal__progress__wrapper\"\n                        onClick={() => {\n                            const newPreferences = preferences;\n\n                            newPreferences.entry = null;\n                            newPreferences.location = null;\n\n                            setPreferences(newPreferences);\n                            // setQuestion(\n                            //     nextQuestion(newPreferences, entryPoints)\n                            // );\n                        }}\n                    >\n                        <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                            <span\n                                className=\"fas fa-check icon\"\n                                aria-label=\"Back to choose entry point\"\n                            ></span>\n                        </span>\n                        <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                            {months[new Date(preferences.entry).getUTCMonth()]}{' '}\n                            {new Date(preferences.entry).getUTCFullYear()}\n                        </span>\n                    </button>\n                </li>\n            ) : // ) : null\n            null,\n        // locationsProgress = multipleLocations ? (\n        //     question === 'location' ? (\n        //         <li className=\"how-to-apply--pgt--js__modal__progress__current\">\n        //             <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n        //                 <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n        //                     <span className=\"fas fa-circle icon\"></span>\n        //                 </span>\n        //                 <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n        //                     Location\n        //                 </span>\n        //             </span>\n        //         </li>\n        //     ) : preferences.location ? (\n        //         <li className=\"how-to-apply--pgt--js__modal__progress__previous\">\n        //             <button\n        //                 className=\"how-to-apply--pgt--js__modal__progress__wrapper\"\n        //                 onClick={() => {\n        //                     const newPreferences = preferences;\n\n        //                     newPreferences.location = null;\n\n        //                     setPreferences(newPreferences);\n        //                     // setQuestion(\n        //                     //     nextQuestion(newPreferences, entryPoints)\n        //                     // );\n        //                 }}\n        //             >\n        //                 <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n        //                     <span\n        //                         className=\"fas fa-check icon\"\n        //                         aria-label=\"Back to choose location\"\n        //                     ></span>\n        //                 </span>\n        //                 <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n        //                     {preferences.location}\n        //                 </span>\n        //             </button>\n        //         </li>\n        //     ) : null\n        // ) : null,\n        nextStep =\n            question !== 'apply' ? (\n                <li className=\"how-to-apply--pgt--js__modal__progress__next\">\n                    <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                        <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                            <span\n                                className=\"fas fa-circle icon\"\n                                aria-hidden=\"true\"\n                            ></span>\n                        </span>\n                    </span>\n                </li>\n            ) : (\n                <li className=\"how-to-apply--pgt--js__modal__progress__current how-to-apply--pgt--js__modal__progress__last\">\n                    <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                        <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                            <span className=\"fas fa-circle icon\"></span>\n                        </span>\n                        <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                            Method of study\n                        </span>\n                    </span>\n                </li>\n            ),\n        qualificationsProgressMobile =\n            Object.keys(entryPoints).length > 1 &&\n            (question === 'qualification' || preferences.qualification) ? (\n                <li\n                    className={\n                        question === 'qualification'\n                            ? 'how-to-apply--pgt--js__modal__progress__current'\n                            : 'how-to-apply--pgt--js__modal__progress__previous'\n                    }\n                >\n                    <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                        <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                            <span\n                                className={\n                                    question === 'qualification'\n                                        ? 'fas fa-circle icon'\n                                        : 'fas fa-check icon'\n                                }\n                            ></span>\n                        </span>\n                        {question === 'qualification' && (\n                            <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                                Qualification\n                            </span>\n                        )}\n                    </span>\n                </li>\n            ) : null,\n        subjectsProgressMobile =\n            multipleSubjects &&\n            (question === 'subject' || preferences.subject) ? (\n                <li\n                    className={\n                        question === 'subject'\n                            ? 'how-to-apply--pgt--js__modal__progress__current'\n                            : 'how-to-apply--pgt--js__modal__progress__previous'\n                    }\n                >\n                    <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                        <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                            <span\n                                className={\n                                    question === 'subject'\n                                        ? 'fas fa-circle icon'\n                                        : 'fas fa-check icon'\n                                }\n                            ></span>\n                        </span>\n                        {question === 'subject' && (\n                            <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                                Subject\n                            </span>\n                        )}\n                    </span>\n                </li>\n            ) : null,\n        entryPointsProgressMobile =\n            // multipleEntryPoints &&\n            question === 'entry' || preferences.entry ? (\n                <li\n                    className={\n                        question === 'entry'\n                            ? 'how-to-apply--pgt--js__modal__progress__current'\n                            : 'how-to-apply--pgt--js__modal__progress__previous'\n                    }\n                >\n                    <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                        <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                            <span\n                                className={\n                                    question === 'entry'\n                                        ? 'fas fa-circle icon'\n                                        : 'fas fa-check icon'\n                                }\n                            ></span>\n                        </span>\n                        {question === 'entry' && (\n                            <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                                Entry point\n                            </span>\n                        )}\n                    </span>\n                </li>\n            ) : null,\n        // locationsProgressMobile =\n        //     multipleLocations &&\n        //     (question === 'location' || preferences.location) ? (\n        //         <li\n        //             className={\n        //                 question === 'location'\n        //                     ? 'how-to-apply--pgt--js__modal__progress__current'\n        //                     : 'how-to-apply--pgt--js__modal__progress__previous'\n        //             }\n        //         >\n        //             <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n        //                 <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n        //                     <span\n        //                         className={\n        //                             question === 'location'\n        //                                 ? 'fas fa-circle icon'\n        //                                 : 'fas fa-check icon'\n        //                         }\n        //                     ></span>\n        //                 </span>\n        //                 {question === 'location' && (\n        //                     <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n        //                         Location\n        //                     </span>\n        //                 )}\n        //             </span>\n        //         </li>\n        //     ) : null,\n        nextStepMobile =\n            question !== 'apply' ? (\n                <li className=\"how-to-apply--pgt--js__modal__progress__next\">\n                    <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                        <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                            <span className=\"fas fa-circle icon\"></span>\n                        </span>\n                    </span>\n                </li>\n            ) : (\n                <li className=\"how-to-apply--pgt--js__modal__progress__current how-to-apply--pgt--js__modal__progress__last\">\n                    <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                        <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                            <span className=\"fas fa-circle icon\"></span>\n                        </span>\n                        <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                            Method of study\n                        </span>\n                    </span>\n                </li>\n            ),\n        alternative = props.element.dataset.otheryear &&\n            props.element.dataset.otherurl && (\n                <p className=\"how-to-apply--pgt--js__modal__alternative\">\n                    <a href={props.element.dataset.otherurl}>\n                        {props.element.dataset.otheryear} entry is also\n                        available.\n                    </a>\n                </p>\n            );\n\n    const [focusTrap, setFocusTrap] = useState({});\n\n    let modalRef = null,\n        modalContentRef = null;\n    const getModal = () => modalRef,\n        getModalContent = () => modalContentRef;\n\n    useEffect(() => {\n        if (!focusTrap.activate) {\n            setFocusTrap(\n                createFocusTrap(getModalContent(), {\n                    initialFocus: getModalContent().querySelector(\n                        '.how-to-apply--pgt--js__options button, .how-to-apply--pgt--js__options a'\n                    ),\n                    onDeactivate: () => setModalVisible(false),\n                    clickOutsideDeactivates: true,\n                })\n            );\n        }\n\n        if (modalVisible) {\n            focusTrap.activate && focusTrap.activate();\n            disableBodyScroll(getModal());\n        } else {\n            focusTrap.deactivate && focusTrap.deactivate();\n            enableBodyScroll(getModal());\n        }\n    }, [modalVisible]);\n\n    return (\n        <>\n            <ul className=\"cta-block\">\n                <li className=\"cta-block__cta\">\n                    <button\n                        className=\"primary-cta-arrow--bright\"\n                        onClick={() => {\n                            setModalVisible(true);\n                            setFirstStep(true);\n                        }}\n                    >\n                        <span>Apply now</span>\n                    </button>\n                </li>\n            </ul>\n            <div\n                className=\"how-to-apply--pgt--js__modal\"\n                data-open={modalVisible}\n                ref={(modal) => (modalRef = modal)}\n            >\n                <div\n                    className=\"how-to-apply--pgt--js__modal__content\"\n                    ref={(modalContent) => (modalContentRef = modalContent)}\n                >\n                    <button\n                        className=\"how-to-apply--pgt--js__close\"\n                        onClick={() => {\n                            focusTrap.deactivate && focusTrap.deactivate();\n                            enableBodyScroll(getModal());\n                            setModalVisible(false);\n                        }}\n                    >\n                        <span\n                            className=\"fas fa-times icon\"\n                            aria-label=\"Close\"\n                        ></span>\n                    </button>\n                    {!firstStep ? (\n                        <div\n                            className=\"how-to-apply--pgt--js__modal__reset\"\n                            style={{ display: 'block' }}\n                        >\n                            <button\n                                onClick={() => {\n                                    // Clear options display and render what user would see if modal first opened\n                                    setSelection();\n                                    setInitialSelection(initialModalDisplay);\n                                    setFirstStep(true);\n                                    setWindowPrompt('Original prompt');\n                                }}\n                            >\n                                <span className=\"fas fa-redo\"></span>{' '}\n                                <span>Start again</span>\n                            </button>\n                        </div>\n                    ) : null}\n                    <ol className=\"how-to-apply--pgt--js__modal__progress\">\n                        {qualificationsProgress}\n                        {subjectsProgress}\n                        {entryPointsProgress}\n                        {/* {locationsProgress} */}\n                        {nextStep}\n                    </ol>\n                    <ol className=\"how-to-apply--pgt--js__modal__progress--mobile\">\n                        {qualificationsProgressMobile}\n                        {subjectsProgressMobile}\n                        {entryPointsProgressMobile}\n                        {/* {locationsProgressMobile} */}\n                        {nextStepMobile}\n                    </ol>\n                    <div className=\"how-to-apply--pgt--js__modal__content-wrapper\">\n                        <h2>Start in {props.element.dataset.year}</h2>\n                    </div>\n                    {qualificationQuestion}\n                    {/* {subjectQuestion} */}\n                    {/* {entryQuestion}\n                    {locationQuestion}\n                    {applyQuestion} */}\n                    <div className=\"how-to-apply--pgt--js__modal__content-wrapper\">\n                        {alternative}\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\n// const nextLevel = (arr, k) => arr.filter((i) => Object.keys(i)[0] === k)[0][k];\n\n// function nextQuestion(preferences) {\n//     const question =\n//         preferences.qualification === null\n//             ? 'qualification'\n//             : preferences.subject === null\n//             ? 'subject'\n//             : preferences.entry === null\n//             ? 'entry'\n//             : preferences.location === null\n//             ? 'location'\n//             : 'apply';\n\n//     return question;\n// }\n\nHowToApply.propTypes = {\n    config: PropTypes.array,\n    element: PropTypes.object,\n};\n\nexport default HowToApply;\n","/**\n * Functions to retrieve how to apply configuration.\n *\n * @module pgt-data\n * @author Web Development\n * @copyright City, University of London 2020\n */\n\nimport { axiosRequest } from '../../util.js';\n\nconst timeout = 30000;\n\n/**\n * How to apply configuration.\n *\n * @param {string} url The HTA configuration file.\n * @return {Promise} - A promise of  configuration object.\n */\nexport function howToApplyConfig(url) {\n    const config = {\n        timeout: timeout,\n        url: url,\n    };\n\n    return axiosRequest(config);\n}\n","/**\n * Useful utility functions\n *\n * @module util\n * @author Web Development\n * @copyright City, University of London 2018-2020\n */\n\nimport axios from 'axios';\nimport React from 'react';\n\n/**\n * Turns string boolean into real boolean.\n *\n * @param {string} s - A string that may be 'true'.\n * @returns {boolean} True if 'true'.\n */\nexport function toBool(s) {\n    return s === 'true' ? true : false;\n}\n\nconst partialMatchFn = (m) => (s) => s.indexOf(m) < 0,\n    fullMatchFn = (m) => (s) => s !== m;\n\n/**\n * Remove a class name from an HTML element.\n *\n * @param {HTMLElement} elem - An HTML element.\n * @param {string} className - A string representing the class to remove.\n * @param {boolean} [removePartials] - If true, remove partially matching classes.\n */\nexport function removeClass(elem, className, removePartials) {\n    const matchFn = removePartials\n        ? partialMatchFn(className)\n        : fullMatchFn(className);\n    elem.className = elem.className\n        .split(/\\s+/)\n        .filter((s) => matchFn(s))\n        .join(' ');\n}\n\n/**\n * Detect whether reduced motion is enabled.\n *\n * If it is, you should shortcut animations, disable autoplay elements, avoid\n * smooth scrolling in favour of jump scrolling, etc.\n *\n * Currently unsupported by Chrome, but works in Safari and Firefox.\n *\n * @returns {boolean} Boolean indicating that the reduce motion media query matches.\n */\nexport function reduceMotion() {\n    const reducedMotionQuery = window.matchMedia(\n        '(prefers-reduced-motion: reduce)'\n    );\n    return reducedMotionQuery.matches ? true : false;\n}\n\n/**\n * Predicate testing whether an element is currently visible, as opposed to\n * displayed: none; or similar. Doesn't necessarily mean it's visible in the\n * window.\n *\n * @param {HTMLElement} elem - An HTML element.\n * @returns {boolean} - Is it visible?\n */\nexport function isVisible(elem) {\n    return elem.offsetHeight !== 0 && elem.offsetWidth !== 0 ? true : false;\n}\n\n/**\n * Predicate testing whether an element is positioned in the window.\n *\n *\n * @param {HTMLElement} elem - An HTML element.\n * @returns {boolean} - Is it onscreen?\n */\nexport function verticallyInWindow(elem) {\n    return elem.getBoundingClientRect().top >= 0 &&\n        elem.getBoundingClientRect().top <= window.innerHeight\n        ? true\n        : false;\n}\n\n/**\n * Turn a query string into an object.\n *\n * @param {string} parameterString - An HTML query string.\n * @returns {object} An object containing the parameters.\n */\nexport function parametersToObject(parameterString) {\n    const parameters = {};\n    parameterString\n        .substr(1)\n        .split('&')\n        .forEach((parameter) => {\n            const [k, v] = parameter.split('=');\n            parameters[k] = v;\n        });\n    return parameters;\n}\n\n/**\n * Turn an object into a query string.\n *\n * @param {object} parameterObj - An object containing the parameters and their values.\n * @returns {string} A string of the parameters.\n */\nexport function objectToParameters(parameterObj) {\n    if (Object.keys(parameterObj).length > 0) {\n        let parameters = '?';\n        for (const key in parameterObj) {\n            parameters.length !== 1 && (parameters += '&');\n            parameters += key + '=' + parameterObj[key];\n        }\n        return parameters;\n    } else {\n        return '';\n    }\n}\n\n/**\n * Track a Google Analytics event.\n *\n * @param {string} event - The event key for Tag Manager.\n * @param {string} eventCategory - The event category.\n * @param {string} eventAction - The event action.\n * @param {string} [eventLabel] - The event label.\n * @param {number} [eventValue] - The event value.\n * @param {boolean} [nonInteractionHit] - Does this count as interacting with the page?\n */\nexport function gaEvent(\n    event,\n    eventCategory,\n    eventAction,\n    eventLabel,\n    eventValue,\n    nonInteractionHit\n) {\n    window.dataLayer = window.dataLayer || [];\n    window.dataLayer.push({\n        event: event,\n        eventCategory: eventCategory,\n        eventAction: eventAction,\n        eventLabel: eventLabel,\n        eventValue: eventValue,\n        nonInteractionHit: nonInteractionHit,\n    });\n}\n\n/**\n * Append an array of elements to an element.\n *\n * @param {HTMLElement} elem - The parent element.\n * @param {HTMLElement[]} children - An array of elements to append to it.\n */\nexport function appendAll(elem, children) {\n    children.forEach((child) => elem.appendChild(child));\n}\n\n/**\n * Extract number from string, e.g. return '123' from string 'a1b2c3'.\n *\n * @param {string} string - String\n */\nexport function numberFromString(string) {\n    let number = string.replace(/\\D/g, '');\n    return number;\n}\n\n/**\n * Calculates viewport width to determinte if using mobile\n * @param {number} number - width of screen, with default value = 432.\n *\n */\nexport function isMobile(screen = 432) {\n    const viewPortWidth = window.innerWidth;\n    const mobileScreen = screen;\n\n    if (viewPortWidth < mobileScreen) {\n        return true;\n    }\n}\n\n/**\n *\n * Turn DOM elements to array e.g return [li, li, li] from DOM element selecting 'li' <ul><li></li><li></li><li></li></ul>\n *\n * @param {object} object - Object\n */\n\nexport function toArray(obj) {\n    let array = [];\n    // iterate backwards ensuring that length is an UInt32\n    for (let i = obj.length >>> 0; i--; ) {\n        array[i] = obj[i];\n    }\n    return array;\n}\n\n/**\n * Check browser user agent is IE or edge and return version number\n */\nexport function detectIE() {\n    const ua = window.navigator.userAgent,\n        versionLength = 10,\n        msie = ua.indexOf('MSIE '),\n        msieVersionOffset = 5;\n\n    if (msie > 0) {\n        // IE 10 or older => return version number\n        return parseInt(\n            ua.substring(msie + msieVersionOffset, ua.indexOf('.', msie)),\n            versionLength\n        );\n    }\n\n    const trident = ua.indexOf('Trident/'),\n        tridentVersionOffset = 3;\n\n    if (trident > 0) {\n        // IE 11 => return version number\n        let rv = ua.indexOf('rv:');\n        return parseInt(\n            ua.substring(rv + tridentVersionOffset, ua.indexOf('.', rv)),\n            versionLength\n        );\n    }\n\n    const edge = ua.indexOf('Edge/'),\n        edgeVersionOffset = 5;\n\n    if (edge > 0) {\n        // Edge (IE 12+) => return version number\n        return parseInt(\n            ua.substring(edge + edgeVersionOffset, ua.indexOf('.', edge)),\n            versionLength\n        );\n    }\n\n    // other browser\n    return false;\n}\n\n/**\n * Check if browser supports IntersectionObserver API\n *\n * @returns {Boolean} -\n */\nexport function checkIntersectionObserver() {\n    if (\n        'IntersectionObserver' in window &&\n        'IntersectionObserverEntry' in window &&\n        'intersectionRatio' in window.IntersectionObserverEntry.prototype\n    ) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n/**\n * Create elements containing classes, content and any other attributes\n *\n * @param {string} type - Type of element to create, e.g. \"div\", \"button\".\n * @param {array} attributes - Array of objects specifying which attributes to assign to the element i.e. {label : \"class\", val : \"container\"}\n */\nexport function createHTMLElement(type, attributes) {\n    let el = document.createElement(type);\n    attributes.map(function (att) {\n        att.label === 'content'\n            ? el.appendChild(document.createTextNode(att.val))\n            : el.setAttribute(att.label, att.val);\n    });\n    return el;\n}\n\nexport function uppercaseFirstLetterLowercaseRest(s) {\n    return s.charAt(0).toUpperCase() + s.slice(1).toLowerCase();\n}\n\n/**\n * Asynchronous request to Funnelback web service.\n *\n * @param {object} config An axios configuration object.\n * @return {Promise} - A promise of a Funnelback response.\n */\nexport function axiosRequest(config) {\n    const httpOK = 200;\n\n    return axios(config)\n        .then((response) => {\n            if (httpOK === response.status) {\n                return response.data;\n            } else {\n                throw `Bad response: ${response.status}`;\n            }\n        })\n        .catch((e) => {\n            if (!axios.isCancel(e)) {\n                gaEvent(\n                    'jsError',\n                    'JavaScript error',\n                    `Line ${e.lineNumber} – ${e.message}`,\n                    `axiosRequest ${e.fileName} (${window.location})`,\n                    true\n                );\n            }\n        });\n}\n\n/**\n * Returns the correct English suffix for a number.\n *\n * @param  {number} day - The day of the month.\n * @returns {string} The correct suffix.\n */\nfunction daySuffix(day) {\n    const eleventh = 11,\n        thirteenth = 13,\n        lastDigit = day.toString().slice(-1);\n\n    return day >= eleventh || day <= thirteenth\n        ? 'th'\n        : lastDigit === '1'\n        ? 'st'\n        : lastDigit === '2'\n        ? 'nd'\n        : lastDigit === '3'\n        ? 'rd'\n        : 'th';\n}\n\n/**\n * Format a date for React.\n *\n * @param {Date} date - A date object.\n * @returns {ReactFragment} The formatted date.\n */\nexport function formatReactDate(date) {\n    const months = [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December',\n        ],\n        days = [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday',\n        ];\n\n    return (\n        <time dateTime={date.toISOString().split('T')[0]}>\n            {days[date.getUTCDay()]}, {date.getUTCDate()}\n            <sup>{daySuffix(date.getUTCDate())}</sup>{' '}\n            {months[date.getUTCMonth()]} {date.getUTCFullYear()}\n        </time>\n    );\n}\n\n/**\n * Array slicer\n *\n * @param {array} arr - array to be split up into subarrays\n * @param {number} len - max number items that goes into each subarray\n */\nexport function arraySlicer(arr, len) {\n    let newArray = [],\n        i = 0,\n        n = arr.length;\n\n    while (i < n) {\n        newArray.push(arr.slice(i, (i += len)));\n    }\n    return newArray;\n}\n"],"sourceRoot":""}