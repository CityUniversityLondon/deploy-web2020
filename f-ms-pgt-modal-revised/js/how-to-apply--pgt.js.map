{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/how-to-apply--pgt.js","webpack:///./src/patterns/how-to-apply/buttons/apply.js","webpack:///./src/patterns/how-to-apply/buttons/date.js","webpack:///./src/patterns/how-to-apply/how-to-apply--pgt.js","webpack:///./src/patterns/how-to-apply/pgt-data.js","webpack:///./src/util.js"],"names":["document","addEventListener","test","navigator","userAgent","howToApplyCTAs","querySelectorAll","Array","from","forEach","howToApply","howToApplyConfig","dataset","config","then","render","edn","ApplyLinks","props","data","map","d","index","header","months","StartDates","formattedDate","Date","getUTCMonth","getUTCFullYear","length","e","dateBtn","target","querySelector","dateVal","textContent","filteredDateData","filter","f","HowToApply","entryPoints","initialPreferences","qualification","Object","keys","subject","entry","location","modalVisible","setModalVisible","useState","preferences","setPreferences","windowPrompt","setWindowPrompt","selection","setSelection","options","question","multipleSubjects","setMultipleSubjects","multipleLocations","setMultipleLocations","qualificationQuestion","i","qualBtn","qualVal","filteredQualData","firstChild","removeChild","dateButtons","applyLinks","entryQuestion","nextLevel","entryPoint","newPreferences","locationOptions","locationQuestion","applyQuestion","method","qualificationsProgress","subjectsProgress","entryPointsProgress","locationsProgress","nextStep","qualificationsProgressMobile","subjectsProgressMobile","entryPointsProgressMobile","locationsProgressMobile","nextStepMobile","alternative","element","otheryear","otherurl","reset","JSON","stringify","focusTrap","setFocusTrap","modalRef","modalContentRef","getModal","getModalContent","useEffect","activate","createFocusTrap","initialFocus","onDeactivate","clickOutsideDeactivates","disableBodyScroll","deactivate","enableBodyScroll","modal","modalContent","year","arr","k","propTypes","PropTypes","array","object","timeout","url","axiosRequest","toBool","s","partialMatchFn","m","indexOf","fullMatchFn","removeClass","elem","className","removePartials","matchFn","split","join","reduceMotion","reducedMotionQuery","window","matchMedia","matches","isVisible","offsetHeight","offsetWidth","verticallyInWindow","getBoundingClientRect","top","innerHeight","parametersToObject","parameterString","parameters","substr","parameter","v","objectToParameters","parameterObj","key","gaEvent","event","eventCategory","eventAction","eventLabel","eventValue","nonInteractionHit","dataLayer","push","appendAll","children","child","appendChild","numberFromString","string","number","replace","isMobile","screen","viewPortWidth","innerWidth","mobileScreen","toArray","obj","detectIE","ua","versionLength","msie","msieVersionOffset","parseInt","substring","trident","tridentVersionOffset","rv","edge","edgeVersionOffset","checkIntersectionObserver","IntersectionObserverEntry","prototype","createHTMLElement","type","attributes","el","createElement","att","label","createTextNode","val","setAttribute","uppercaseFirstLetterLowercaseRest","charAt","toUpperCase","slice","toLowerCase","httpOK","axios","response","status","catch","isCancel","lineNumber","message","fileName","daySuffix","day","eleventh","thirteenth","lastDigit","toString","formatReactDate","date","days","toISOString","getUTCDay","getUTCDate","arraySlicer","len","newArray","n"],"mappings":"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","file":"how-to-apply--pgt.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"how-to-apply--pgt\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([6,\"vendor-dependencies\",\"core\",\"react\",\"axios\",\"vendor-direct\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/**\n * How to apply PGT entry\n *\n * @author Web Development\n * @copyright City, University of London 2020\n */\nimport React from 'react';\nimport { render } from 'react-dom';\nimport HowToApply from './patterns/how-to-apply/how-to-apply--pgt';\nimport { howToApplyConfig } from './patterns/how-to-apply/pgt-data';\nimport edn from 'edn-to-js';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    if (/(Trident|MSIE)/.test(navigator.userAgent)) {\n        return;\n    } else {\n        const howToApplyCTAs = document.querySelectorAll(\n            '.how-to-apply--pgt--js'\n        );\n        howToApplyCTAs &&\n            Array.from(howToApplyCTAs).forEach(howToApply => {\n                howToApplyConfig(howToApply.dataset.config).then(config => {\n                    render(\n                        <HowToApply\n                            config={edn(config)}\n                            element={howToApply}\n                        />,\n                        howToApply\n                    );\n                });\n            });\n    }\n});\n","import React from 'react';\n\nexport default function ApplyLinks(props) {\n    if (props.data) {\n        // console.log('data: ' + props.data);\n        return props.data.map((d, index) => {\n            // console.log('btnText: ' + props.btnText);\n            return (\n                <li key={index} className=\"apply\">\n                    <a href={d['options']['apply']}>\n                        <span>{d.header}</span>&nbsp;\n                        <span\n                            className=\"far fa-external-link\"\n                            aria-label=\"(external link)\"\n                        />\n                    </a>\n                </li>\n            );\n        });\n    }\n}\n","import ApplyLinks from '../buttons/apply';\nimport React from 'react';\n\nconst months = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n];\n\nexport default function StartDates(props) {\n    if (props.data) {\n        // console.log('SD: ' + props.data + props.data.length);\n\n        // Format date so it's possible to filter on based on button text value\n        let data = props.data;\n        let formattedDate;\n        for (const d of data) {\n            formattedDate = new Date(d.header);\n            d.header = `${\n                months[formattedDate.getUTCMonth()]\n            } ${formattedDate.getUTCFullYear()}`;\n        }\n\n        return props.data.map((d, index) => {\n            if (d['options'][0]['options'].length > 1) {\n                // console.log('load methods screen');\n                return (\n                    <li key={index}>\n                        <button\n                            onClick={(e) => {\n                                // Target selected date button's text value, e.g. 'September 2021'\n                                let dateBtn = e.target.querySelector('span');\n                                let dateVal = dateBtn.textContent;\n\n                                // Filter entry points data on selected qualification\n                                let filteredDateData = props.data.filter(\n                                    (e) => e.header === dateVal\n                                );\n\n                                // Multiple methods of study? (Skipping Location for now)\n                                for (const f of filteredDateData) {\n                                    if (f['options'][0]['options'].length > 1) {\n                                        // Open method of study selection\n                                    } else {\n                                        <ul className=\"how-to-apply--pgt--js__options\">\n                                            {\n                                                <ApplyLinks\n                                                    btnText={'abc'}\n                                                    data={\n                                                        f['options'][0][\n                                                            'options'\n                                                        ][0]['options']\n                                                    }\n                                                />\n                                            }\n                                        </ul>;\n                                    }\n                                }\n                            }}\n                        >\n                            <span>{d.header}</span>\n                        </button>\n                    </li>\n                );\n            } else {\n                // console.log([d['options'][0]['options'][0]]);\n                return (\n                    <ApplyLinks\n                        btnText={d.header}\n                        data={[d['options'][0]['options'][0]]}\n                    />\n                );\n            }\n        });\n    }\n}\n","/**\n * How to apply for postgraduate taught degrees\n *\n * Don't run this via patterns.js, it's a separate compilation.\n *\n * @module patterns/how-to-apply/how-to-apply--pgt\n * @author Web Development\n * @copyright City, University of London 2020\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\n\nimport ApplyLinks from './buttons/apply';\nimport PropTypes from 'prop-types';\nimport StartDates from './buttons/date';\nimport createFocusTrap from 'focus-trap';\n\nconst months = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n];\n\n/**\n * Launch the how to apply modal.\n *\n * @param {object} props The JSON configuration file for the modal.\n * @return {object} The React component to render.\n */\nfunction HowToApply(props) {\n    let entryPoints = props.config;\n    const initialPreferences = {\n            qualification:\n                Object.keys(entryPoints).length === 1\n                    ? Object.keys(entryPoints[0])[0]\n                    : null,\n            subject: null,\n            entry: null,\n            location: null,\n        },\n        [modalVisible, setModalVisible] = useState(false),\n        [preferences, setPreferences] = useState(initialPreferences),\n        [windowPrompt, setWindowPrompt] = useState(\n            'Choose the qualification you wish to apply for:'\n        );\n    let [selection, setSelection] = useState();\n    let options = document.querySelector('.how-to-apply--pgt--js__options');\n\n    // const [question, setQuestion] = useState(\n    //         nextQuestion(preferences, entryPoints)\n    //     ),\n    const question = 'qualification',\n        [multipleSubjects, setMultipleSubjects] = useState(true),\n        // [multipleEntryPoints, setMultipleEntryPoints] = useState(true),\n        [multipleLocations, setMultipleLocations] = useState(true),\n        qualificationQuestion = question === 'qualification' && (\n            <>\n                <div className=\"how-to-apply--pgt--js__modal__content-wrapper\">\n                    <p>{windowPrompt}</p>\n                    {selection}\n                </div>\n                {\n                    (selection = (\n                        <ul className=\"how-to-apply--pgt--js__options\">\n                            {entryPoints.map((qualification, i) =>\n                                // Create top-level link to apply, or button creating next step in modal\n                                entryPoints.length > 1 &&\n                                qualification['options'][0]['options']\n                                    .length === 1 &&\n                                qualification['options'][0]['options'][0][\n                                    'options'\n                                ][0]['options'].length === 1 ? (\n                                    <li key={'qualification' + i}>\n                                        <a\n                                            href={\n                                                qualification['options'][0][\n                                                    'options'\n                                                ][0]['options'][0][\n                                                    'options'\n                                                ][0]['options']['apply']\n                                            }\n                                        >\n                                            <span>{qualification.header}</span>\n                                            &nbsp;\n                                            <span\n                                                className=\"far fa-external-link\"\n                                                aria-label=\"(external link)\"\n                                            />\n                                        </a>\n                                    </li>\n                                ) : entryPoints.length === 1 ? (\n                                    <p>Only one qualification</p>\n                                ) : (\n                                    <li key={'qualification' + i}>\n                                        <button\n                                            onClick={(e) => {\n                                                // const newPreferences = preferences;\n                                                // newPreferences.qualification = Object.keys(\n                                                //     qualification\n                                                // )[0];\n\n                                                // Target clicked qualification button and its text value, e.g. 'MSc'\n                                                let qualBtn = e.target.querySelector(\n                                                    'span'\n                                                );\n                                                // console.log(qualBtn);\n                                                let qualVal =\n                                                    qualBtn.textContent;\n                                                // console.log(qualVal);\n\n                                                // Filter entry points data on selected qualification\n                                                let filteredQualData = entryPoints.filter(\n                                                    (e) => e.header === qualVal\n                                                );\n                                                // console.log(filteredQualData);\n\n                                                // Are there multiple subject routes?\n                                                if (\n                                                    filteredQualData[0][\n                                                        'options'\n                                                    ].length > 1\n                                                ) {\n                                                    // console.log('Open subjects window');\n                                                    // Begin multiple subjects route\n                                                } else {\n                                                    // Are there multiple entry dates?\n                                                    if (\n                                                        filteredQualData[0][\n                                                            'options'\n                                                        ][0]['options'].length >\n                                                        1\n                                                    ) {\n                                                        setWindowPrompt(\n                                                            'Choose dates:'\n                                                        );\n                                                        // Remove existing options buttons\n                                                        while (\n                                                            options.firstChild\n                                                        ) {\n                                                            options.removeChild(\n                                                                options.firstChild\n                                                            );\n                                                        }\n                                                        // Extract dates data\n                                                        let dateButtons =\n                                                            filteredQualData[0][\n                                                                'options'\n                                                            ][0]['options'];\n\n                                                        // console.log(dateButtons);\n                                                        // Update options block to apply links JSX\n                                                        options = (\n                                                            <ul className=\"how-to-apply--pgt--js__options\">\n                                                                {\n                                                                    <StartDates\n                                                                        data={\n                                                                            dateButtons\n                                                                        }\n                                                                    />\n                                                                }\n                                                            </ul>\n                                                        );\n\n                                                        // Make revised options markup available in the state\n                                                        setSelection(options);\n                                                        // console.log(dateButtons);\n                                                    } else {\n                                                        setMultipleSubjects(\n                                                            false\n                                                        );\n                                                        // Are there multiple methods of study, e.g. 'full-time', 'part-time'?\n                                                        // console.log('Dont open dates window');\n                                                        // console.log(filteredQualData[0]['options'][0]['options'][0]['options']);\n                                                        if (\n                                                            filteredQualData[0][\n                                                                'options'\n                                                            ][0]['options'][0][\n                                                                'options'\n                                                            ][0]['options']\n                                                                .length > 1\n                                                        ) {\n                                                            setWindowPrompt(\n                                                                'Apply online now:'\n                                                            );\n                                                            // Remove existing options buttons\n                                                            // options.removeChild();\n                                                            while (\n                                                                options.firstChild\n                                                            ) {\n                                                                options.removeChild(\n                                                                    options.firstChild\n                                                                );\n                                                            }\n\n                                                            // Extract apply links data\n                                                            let applyLinks =\n                                                                filteredQualData[0][\n                                                                    'options'\n                                                                ][0][\n                                                                    'options'\n                                                                ][0][\n                                                                    'options'\n                                                                ][0]['options'];\n\n                                                            // Update options block to apply links JSX\n                                                            options = (\n                                                                <ul className=\"how-to-apply--pgt--js__options\">\n                                                                    {\n                                                                        <ApplyLinks\n                                                                            data={\n                                                                                applyLinks\n                                                                            }\n                                                                        />\n                                                                    }\n                                                                </ul>\n                                                            );\n\n                                                            // Make revised options markup available in the state\n                                                            setSelection(\n                                                                options\n                                                            );\n                                                        } else {\n                                                            // console.log('Qualification buttons should be apply links. Should do top-level check to see if direct link and output accordingly.');\n                                                        }\n                                                    } // End multiple dates check\n                                                } // End of no multiple subjects routes\n                                            }}\n                                        >\n                                            <span>{qualification.header}</span>\n                                        </button>\n                                    </li>\n                                )\n                            )}\n                        </ul>\n                    ))\n                }\n            </>\n        ),\n        // subjectQuestion = question === 'subject' && (\n        //     <>\n        //         <div className=\"how-to-apply--pgt--js__modal__content-wrapper\">\n        //             <p>Choose the route you wish to apply for:</p>\n        //         </div>\n        //         <ul className=\"how-to-apply--pgt--js__options\">\n        //             {nextLevel(entryPoints, preferences.qualification).map(\n        //                 (subject, i) => (\n        //                     <li key={'subject' + i}>\n        //                         <button\n        //                             onClick={() => {\n        //                                 const newPreferences = preferences;\n        //                                 newPreferences.subject = Object.keys(\n        //                                     subject\n        //                                 )[0];\n\n        //                                 const entryOptions =\n        //                                     subject[newPreferences.subject];\n\n        //                                 if (entryOptions.length === 1) {\n        //                                     newPreferences.entry = Object.keys(\n        //                                         entryOptions[0]\n        //                                     )[0];\n        //                                     setMultipleEntryPoints(false);\n        //                                 } else {\n        //                                     newPreferences.entry = null;\n        //                                     setMultipleEntryPoints(true);\n        //                                 }\n\n        //                                 setPreferences(newPreferences);\n        //                                 setQuestion(\n        //                                     nextQuestion(\n        //                                         newPreferences,\n        //                                         entryPoints\n        //                                     )\n        //                                 );\n        //                             }}\n        //                         >\n        //                             <span>{Object.keys(subject)[0]}</span>\n        //                         </button>\n        //                     </li>\n        //                 )\n        //             )}\n        //         </ul>\n        //     </>\n        // ),\n        entryQuestion = question === 'entry' && (\n            <>\n                <div className=\"how-to-apply--pgt--js__modal__content-wrapper\">\n                    <p>Choose the entry point you wish to apply for:</p>\n                </div>\n                <ul className=\"how-to-apply--pgt--js__options\">\n                    {nextLevel(\n                        nextLevel(entryPoints, preferences.qualification),\n                        preferences.subject\n                    ).map((entryPoint, i) => {\n                        const formattedDate = new Date(\n                            Object.keys(entryPoint)[0]\n                        );\n                        return (\n                            <li key={'entry-point' + i}>\n                                <button\n                                    onClick={() => {\n                                        const newPreferences = preferences;\n                                        newPreferences.entry = Object.keys(\n                                            entryPoint\n                                        )[0];\n\n                                        const locationOptions =\n                                            entryPoint[newPreferences.entry];\n\n                                        if (locationOptions.length === 1) {\n                                            newPreferences.location = Object.keys(\n                                                locationOptions[0]\n                                            )[0];\n                                            setMultipleLocations(false);\n                                        } else {\n                                            newPreferences.location = null;\n                                            setMultipleLocations(true);\n                                        }\n\n                                        setPreferences(newPreferences);\n                                        // setQuestion(\n                                        //     nextQuestion(\n                                        //         newPreferences,\n                                        //         entryPoints\n                                        //     )\n                                        // );\n                                    }}\n                                >\n                                    <span>\n                                        {months[formattedDate.getUTCMonth()]}{' '}\n                                        {formattedDate.getUTCFullYear()}\n                                    </span>\n                                </button>\n                            </li>\n                        );\n                    })}\n                </ul>\n            </>\n        ),\n        locationQuestion = question === 'location' && (\n            <>\n                <div className=\"how-to-apply--pgt--js__modal__content-wrapper\">\n                    <p>Choose where you wish to study:</p>\n                </div>\n                <ul className=\"how-to-apply--pgt--js__options\">\n                    {nextLevel(\n                        nextLevel(\n                            nextLevel(entryPoints, preferences.qualification),\n                            preferences.subject\n                        ),\n                        preferences.entry\n                    ).map((location, i) => (\n                        <li key={'location' + i}>\n                            <button\n                                onClick={() => {\n                                    const newPreferences = preferences;\n                                    newPreferences.entry = Object.keys(\n                                        location\n                                    )[0];\n\n                                    setPreferences(newPreferences);\n                                    // setQuestion(\n                                    //     nextQuestion(\n                                    //         newPreferences,\n                                    //         entryPoints\n                                    //     )\n                                    // );\n                                }}\n                            >\n                                <span>{Object.keys(location)[0]}</span>\n                            </button>\n                        </li>\n                    ))}\n                </ul>\n            </>\n        ),\n        applyQuestion = question === 'apply' && (\n            <>\n                <div className=\"how-to-apply--pgt--js__modal__content-wrapper\">\n                    <p>Apply online now:</p>\n                </div>\n                <ul className=\"how-to-apply--pgt--js__options\">\n                    {nextLevel(\n                        nextLevel(\n                            nextLevel(\n                                nextLevel(\n                                    entryPoints,\n                                    preferences.qualification\n                                ),\n                                preferences.subject\n                            ),\n                            preferences.entry\n                        ),\n                        preferences.location\n                    ).map((method, i) => (\n                        <li key={'method' + i}>\n                            <a href={method[Object.keys(method)[0]]}>\n                                <span>\n                                    {Object.keys(method)[0]}{' '}\n                                    <span\n                                        className=\"far fa-external-link\"\n                                        aria-label=\"(external link)\"\n                                    ></span>\n                                </span>\n                            </a>\n                        </li>\n                    ))}\n                </ul>\n            </>\n        ),\n        qualificationsProgress =\n            Object.keys(entryPoints).length > 1 ? (\n                question === 'qualification' ? (\n                    <li className=\"how-to-apply--pgt--js__modal__progress__current\">\n                        <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                            <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                                <span className=\"fas fa-circle icon\"></span>\n                            </span>\n                            <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                                Qualification\n                            </span>\n                        </span>\n                    </li>\n                ) : preferences.qualification ? (\n                    <li className=\"how-to-apply--pgt--js__modal__progress__previous\">\n                        <button\n                            className=\"how-to-apply--pgt--js__modal__progress__wrapper\"\n                            onClick={() => {\n                                const newPreferences = preferences;\n\n                                newPreferences.qualification = null;\n                                newPreferences.subject = null;\n                                newPreferences.entry = null;\n                                newPreferences.location = null;\n\n                                setPreferences(newPreferences);\n                                // setQuestion(\n                                //     nextQuestion(newPreferences, entryPoints)\n                                // );\n                            }}\n                        >\n                            <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                                <span\n                                    className=\"fas fa-check icon\"\n                                    aria-label=\"Back to choose qualification\"\n                                ></span>\n                            </span>\n                            <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                                {preferences.qualification}\n                            </span>\n                        </button>\n                    </li>\n                ) : null\n            ) : null,\n        subjectsProgress = multipleSubjects ? (\n            question === 'subject' ? (\n                <li className=\"how-to-apply--pgt--js__modal__progress__current\">\n                    <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                        <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                            <span className=\"fas fa-circle icon\"></span>\n                        </span>\n                        <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                            Route\n                        </span>\n                    </span>\n                </li>\n            ) : preferences.subject ? (\n                <li className=\"how-to-apply--pgt--js__modal__progress__previous\">\n                    <button\n                        className=\"how-to-apply--pgt--js__modal__progress__wrapper\"\n                        onClick={() => {\n                            const newPreferences = preferences;\n\n                            newPreferences.subject = null;\n                            newPreferences.entry = null;\n                            newPreferences.location = null;\n\n                            setPreferences(newPreferences);\n                            // setQuestion(\n                            //     nextQuestion(newPreferences, entryPoints)\n                            // );\n                        }}\n                    >\n                        <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                            <span\n                                className=\"fas fa-check icon\"\n                                aria-label=\"Back to choose study route\"\n                            ></span>\n                        </span>\n                        <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                            {preferences.subject}\n                        </span>\n                    </button>\n                </li>\n            ) : null\n        ) : null,\n        entryPointsProgress =\n            // multipleEntryPoints ? (\n            question === 'entry' ? (\n                <li className=\"how-to-apply--pgt--js__modal__progress__current\">\n                    <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                        <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                            <span className=\"fas fa-circle icon\"></span>\n                        </span>\n                        <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                            Entry point\n                        </span>\n                    </span>\n                </li>\n            ) : preferences.entry ? (\n                <li className=\"how-to-apply--pgt--js__modal__progress__previous\">\n                    <button\n                        className=\"how-to-apply--pgt--js__modal__progress__wrapper\"\n                        onClick={() => {\n                            const newPreferences = preferences;\n\n                            newPreferences.entry = null;\n                            newPreferences.location = null;\n\n                            setPreferences(newPreferences);\n                            // setQuestion(\n                            //     nextQuestion(newPreferences, entryPoints)\n                            // );\n                        }}\n                    >\n                        <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                            <span\n                                className=\"fas fa-check icon\"\n                                aria-label=\"Back to choose entry point\"\n                            ></span>\n                        </span>\n                        <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                            {months[new Date(preferences.entry).getUTCMonth()]}{' '}\n                            {new Date(preferences.entry).getUTCFullYear()}\n                        </span>\n                    </button>\n                </li>\n            ) : // ) : null\n            null,\n        locationsProgress = multipleLocations ? (\n            question === 'location' ? (\n                <li className=\"how-to-apply--pgt--js__modal__progress__current\">\n                    <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                        <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                            <span className=\"fas fa-circle icon\"></span>\n                        </span>\n                        <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                            Location\n                        </span>\n                    </span>\n                </li>\n            ) : preferences.location ? (\n                <li className=\"how-to-apply--pgt--js__modal__progress__previous\">\n                    <button\n                        className=\"how-to-apply--pgt--js__modal__progress__wrapper\"\n                        onClick={() => {\n                            const newPreferences = preferences;\n\n                            newPreferences.location = null;\n\n                            setPreferences(newPreferences);\n                            // setQuestion(\n                            //     nextQuestion(newPreferences, entryPoints)\n                            // );\n                        }}\n                    >\n                        <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                            <span\n                                className=\"fas fa-check icon\"\n                                aria-label=\"Back to choose location\"\n                            ></span>\n                        </span>\n                        <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                            {preferences.location}\n                        </span>\n                    </button>\n                </li>\n            ) : null\n        ) : null,\n        nextStep =\n            question !== 'apply' ? (\n                <li className=\"how-to-apply--pgt--js__modal__progress__next\">\n                    <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                        <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                            <span\n                                className=\"fas fa-circle icon\"\n                                aria-hidden=\"true\"\n                            ></span>\n                        </span>\n                    </span>\n                </li>\n            ) : (\n                <li className=\"how-to-apply--pgt--js__modal__progress__current how-to-apply--pgt--js__modal__progress__last\">\n                    <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                        <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                            <span className=\"fas fa-circle icon\"></span>\n                        </span>\n                        <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                            Method of study\n                        </span>\n                    </span>\n                </li>\n            ),\n        qualificationsProgressMobile =\n            Object.keys(entryPoints).length > 1 &&\n            (question === 'qualification' || preferences.qualification) ? (\n                <li\n                    className={\n                        question === 'qualification'\n                            ? 'how-to-apply--pgt--js__modal__progress__current'\n                            : 'how-to-apply--pgt--js__modal__progress__previous'\n                    }\n                >\n                    <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                        <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                            <span\n                                className={\n                                    question === 'qualification'\n                                        ? 'fas fa-circle icon'\n                                        : 'fas fa-check icon'\n                                }\n                            ></span>\n                        </span>\n                        {question === 'qualification' && (\n                            <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                                Qualification\n                            </span>\n                        )}\n                    </span>\n                </li>\n            ) : null,\n        subjectsProgressMobile =\n            multipleSubjects &&\n            (question === 'subject' || preferences.subject) ? (\n                <li\n                    className={\n                        question === 'subject'\n                            ? 'how-to-apply--pgt--js__modal__progress__current'\n                            : 'how-to-apply--pgt--js__modal__progress__previous'\n                    }\n                >\n                    <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                        <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                            <span\n                                className={\n                                    question === 'subject'\n                                        ? 'fas fa-circle icon'\n                                        : 'fas fa-check icon'\n                                }\n                            ></span>\n                        </span>\n                        {question === 'subject' && (\n                            <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                                Subject\n                            </span>\n                        )}\n                    </span>\n                </li>\n            ) : null,\n        entryPointsProgressMobile =\n            // multipleEntryPoints &&\n            question === 'entry' || preferences.entry ? (\n                <li\n                    className={\n                        question === 'entry'\n                            ? 'how-to-apply--pgt--js__modal__progress__current'\n                            : 'how-to-apply--pgt--js__modal__progress__previous'\n                    }\n                >\n                    <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                        <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                            <span\n                                className={\n                                    question === 'entry'\n                                        ? 'fas fa-circle icon'\n                                        : 'fas fa-check icon'\n                                }\n                            ></span>\n                        </span>\n                        {question === 'entry' && (\n                            <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                                Entry point\n                            </span>\n                        )}\n                    </span>\n                </li>\n            ) : null,\n        locationsProgressMobile =\n            multipleLocations &&\n            (question === 'location' || preferences.location) ? (\n                <li\n                    className={\n                        question === 'location'\n                            ? 'how-to-apply--pgt--js__modal__progress__current'\n                            : 'how-to-apply--pgt--js__modal__progress__previous'\n                    }\n                >\n                    <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                        <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                            <span\n                                className={\n                                    question === 'location'\n                                        ? 'fas fa-circle icon'\n                                        : 'fas fa-check icon'\n                                }\n                            ></span>\n                        </span>\n                        {question === 'location' && (\n                            <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                                Location\n                            </span>\n                        )}\n                    </span>\n                </li>\n            ) : null,\n        nextStepMobile =\n            question !== 'apply' ? (\n                <li className=\"how-to-apply--pgt--js__modal__progress__next\">\n                    <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                        <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                            <span className=\"fas fa-circle icon\"></span>\n                        </span>\n                    </span>\n                </li>\n            ) : (\n                <li className=\"how-to-apply--pgt--js__modal__progress__current how-to-apply--pgt--js__modal__progress__last\">\n                    <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                        <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                            <span className=\"fas fa-circle icon\"></span>\n                        </span>\n                        <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                            Method of study\n                        </span>\n                    </span>\n                </li>\n            ),\n        alternative = props.element.dataset.otheryear &&\n            props.element.dataset.otherurl && (\n                <p className=\"how-to-apply--pgt--js__modal__alternative\">\n                    <a href={props.element.dataset.otherurl}>\n                        {props.element.dataset.otheryear} entry is also\n                        available.\n                    </a>\n                </p>\n            ),\n        reset = JSON.stringify(preferences) !==\n            JSON.stringify(initialPreferences) && (\n            <div className=\"how-to-apply--pgt--js__modal__reset\">\n                <button\n                    onClick={() => {\n                        setPreferences(initialPreferences);\n                        // setQuestion(\n                        //     nextQuestion(initialPreferences, entryPoints)\n                        // );\n                    }}\n                >\n                    <span className=\"fas fa-redo\"></span>{' '}\n                    <span>Start again</span>\n                </button>\n            </div>\n        );\n\n    const [focusTrap, setFocusTrap] = useState({});\n\n    let modalRef = null,\n        modalContentRef = null;\n    const getModal = () => modalRef,\n        getModalContent = () => modalContentRef;\n\n    useEffect(() => {\n        if (!focusTrap.activate) {\n            setFocusTrap(\n                createFocusTrap(getModalContent(), {\n                    initialFocus: getModalContent().querySelector(\n                        '.how-to-apply--pgt--js__options button, .how-to-apply--pgt--js__options a'\n                    ),\n                    onDeactivate: () => setModalVisible(false),\n                    clickOutsideDeactivates: true,\n                })\n            );\n        }\n\n        if (modalVisible) {\n            focusTrap.activate && focusTrap.activate();\n            disableBodyScroll(getModal());\n        } else {\n            focusTrap.deactivate && focusTrap.deactivate();\n            enableBodyScroll(getModal());\n        }\n    }, [modalVisible]);\n\n    return (\n        <>\n            <ul className=\"cta-block\">\n                <li className=\"cta-block__cta\">\n                    <button\n                        className=\"primary-cta-arrow--bright\"\n                        onClick={() => setModalVisible(true)}\n                    >\n                        <span>Apply now</span>\n                    </button>\n                </li>\n            </ul>\n            <div\n                className=\"how-to-apply--pgt--js__modal\"\n                data-open={modalVisible}\n                ref={(modal) => (modalRef = modal)}\n            >\n                <div\n                    className=\"how-to-apply--pgt--js__modal__content\"\n                    ref={(modalContent) => (modalContentRef = modalContent)}\n                >\n                    <button\n                        className=\"how-to-apply--pgt--js__close\"\n                        onClick={() => {\n                            focusTrap.deactivate && focusTrap.deactivate();\n                            enableBodyScroll(getModal());\n                            setModalVisible(false);\n                        }}\n                    >\n                        <span\n                            className=\"fas fa-times icon\"\n                            aria-label=\"Close\"\n                        ></span>\n                    </button>\n                    {reset}\n                    <ol className=\"how-to-apply--pgt--js__modal__progress\">\n                        {qualificationsProgress}\n                        {subjectsProgress}\n                        {entryPointsProgress}\n                        {locationsProgress}\n                        {nextStep}\n                    </ol>\n                    <ol className=\"how-to-apply--pgt--js__modal__progress--mobile\">\n                        {qualificationsProgressMobile}\n                        {subjectsProgressMobile}\n                        {entryPointsProgressMobile}\n                        {locationsProgressMobile}\n                        {nextStepMobile}\n                    </ol>\n                    <div className=\"how-to-apply--pgt--js__modal__content-wrapper\">\n                        <h2>Start in {props.element.dataset.year}</h2>\n                    </div>\n                    {qualificationQuestion}\n                    {/* {subjectQuestion} */}\n                    {entryQuestion}\n                    {locationQuestion}\n                    {applyQuestion}\n                    <div className=\"how-to-apply--pgt--js__modal__content-wrapper\">\n                        {alternative}\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nconst nextLevel = (arr, k) => arr.filter((i) => Object.keys(i)[0] === k)[0][k];\n\n// function nextQuestion(preferences) {\n//     const question =\n//         preferences.qualification === null\n//             ? 'qualification'\n//             : preferences.subject === null\n//             ? 'subject'\n//             : preferences.entry === null\n//             ? 'entry'\n//             : preferences.location === null\n//             ? 'location'\n//             : 'apply';\n\n//     return question;\n// }\n\nHowToApply.propTypes = {\n    config: PropTypes.array,\n    element: PropTypes.object,\n};\n\nexport default HowToApply;\n","/**\n * Functions to retrieve how to apply configuration.\n *\n * @module pgt-data\n * @author Web Development\n * @copyright City, University of London 2020\n */\n\nimport { axiosRequest } from '../../util.js';\n\nconst timeout = 30000;\n\n/**\n * How to apply configuration.\n *\n * @param {string} url The HTA configuration file.\n * @return {Promise} - A promise of  configuration object.\n */\nexport function howToApplyConfig(url) {\n    const config = {\n        timeout: timeout,\n        url: url,\n    };\n\n    return axiosRequest(config);\n}\n","/**\n * Useful utility functions\n *\n * @module util\n * @author Web Development\n * @copyright City, University of London 2018-2020\n */\n\nimport axios from 'axios';\nimport React from 'react';\n\n/**\n * Turns string boolean into real boolean.\n *\n * @param {string} s - A string that may be 'true'.\n * @returns {boolean} True if 'true'.\n */\nexport function toBool(s) {\n    return s === 'true' ? true : false;\n}\n\nconst partialMatchFn = (m) => (s) => s.indexOf(m) < 0,\n    fullMatchFn = (m) => (s) => s !== m;\n\n/**\n * Remove a class name from an HTML element.\n *\n * @param {HTMLElement} elem - An HTML element.\n * @param {string} className - A string representing the class to remove.\n * @param {boolean} [removePartials] - If true, remove partially matching classes.\n */\nexport function removeClass(elem, className, removePartials) {\n    const matchFn = removePartials\n        ? partialMatchFn(className)\n        : fullMatchFn(className);\n    elem.className = elem.className\n        .split(/\\s+/)\n        .filter((s) => matchFn(s))\n        .join(' ');\n}\n\n/**\n * Detect whether reduced motion is enabled.\n *\n * If it is, you should shortcut animations, disable autoplay elements, avoid\n * smooth scrolling in favour of jump scrolling, etc.\n *\n * Currently unsupported by Chrome, but works in Safari and Firefox.\n *\n * @returns {boolean} Boolean indicating that the reduce motion media query matches.\n */\nexport function reduceMotion() {\n    const reducedMotionQuery = window.matchMedia(\n        '(prefers-reduced-motion: reduce)'\n    );\n    return reducedMotionQuery.matches ? true : false;\n}\n\n/**\n * Predicate testing whether an element is currently visible, as opposed to\n * displayed: none; or similar. Doesn't necessarily mean it's visible in the\n * window.\n *\n * @param {HTMLElement} elem - An HTML element.\n * @returns {boolean} - Is it visible?\n */\nexport function isVisible(elem) {\n    return elem.offsetHeight !== 0 && elem.offsetWidth !== 0 ? true : false;\n}\n\n/**\n * Predicate testing whether an element is positioned in the window.\n *\n *\n * @param {HTMLElement} elem - An HTML element.\n * @returns {boolean} - Is it onscreen?\n */\nexport function verticallyInWindow(elem) {\n    return elem.getBoundingClientRect().top >= 0 &&\n        elem.getBoundingClientRect().top <= window.innerHeight\n        ? true\n        : false;\n}\n\n/**\n * Turn a query string into an object.\n *\n * @param {string} parameterString - An HTML query string.\n * @returns {object} An object containing the parameters.\n */\nexport function parametersToObject(parameterString) {\n    const parameters = {};\n    parameterString\n        .substr(1)\n        .split('&')\n        .forEach((parameter) => {\n            const [k, v] = parameter.split('=');\n            parameters[k] = v;\n        });\n    return parameters;\n}\n\n/**\n * Turn an object into a query string.\n *\n * @param {object} parameterObj - An object containing the parameters and their values.\n * @returns {string} A string of the parameters.\n */\nexport function objectToParameters(parameterObj) {\n    if (Object.keys(parameterObj).length > 0) {\n        let parameters = '?';\n        for (const key in parameterObj) {\n            parameters.length !== 1 && (parameters += '&');\n            parameters += key + '=' + parameterObj[key];\n        }\n        return parameters;\n    } else {\n        return '';\n    }\n}\n\n/**\n * Track a Google Analytics event.\n *\n * @param {string} event - The event key for Tag Manager.\n * @param {string} eventCategory - The event category.\n * @param {string} eventAction - The event action.\n * @param {string} [eventLabel] - The event label.\n * @param {number} [eventValue] - The event value.\n * @param {boolean} [nonInteractionHit] - Does this count as interacting with the page?\n */\nexport function gaEvent(\n    event,\n    eventCategory,\n    eventAction,\n    eventLabel,\n    eventValue,\n    nonInteractionHit\n) {\n    window.dataLayer = window.dataLayer || [];\n    window.dataLayer.push({\n        event: event,\n        eventCategory: eventCategory,\n        eventAction: eventAction,\n        eventLabel: eventLabel,\n        eventValue: eventValue,\n        nonInteractionHit: nonInteractionHit,\n    });\n}\n\n/**\n * Append an array of elements to an element.\n *\n * @param {HTMLElement} elem - The parent element.\n * @param {HTMLElement[]} children - An array of elements to append to it.\n */\nexport function appendAll(elem, children) {\n    children.forEach((child) => elem.appendChild(child));\n}\n\n/**\n * Extract number from string, e.g. return '123' from string 'a1b2c3'.\n *\n * @param {string} string - String\n */\nexport function numberFromString(string) {\n    let number = string.replace(/\\D/g, '');\n    return number;\n}\n\n/**\n * Calculates viewport width to determinte if using mobile\n * @param {number} number - width of screen, with default value = 432.\n *\n */\nexport function isMobile(screen = 432) {\n    const viewPortWidth = window.innerWidth;\n    const mobileScreen = screen;\n\n    if (viewPortWidth < mobileScreen) {\n        return true;\n    }\n}\n\n/**\n *\n * Turn DOM elements to array e.g return [li, li, li] from DOM element selecting 'li' <ul><li></li><li></li><li></li></ul>\n *\n * @param {object} object - Object\n */\n\nexport function toArray(obj) {\n    let array = [];\n    // iterate backwards ensuring that length is an UInt32\n    for (let i = obj.length >>> 0; i--; ) {\n        array[i] = obj[i];\n    }\n    return array;\n}\n\n/**\n * Check browser user agent is IE or edge and return version number\n */\nexport function detectIE() {\n    const ua = window.navigator.userAgent,\n        versionLength = 10,\n        msie = ua.indexOf('MSIE '),\n        msieVersionOffset = 5;\n\n    if (msie > 0) {\n        // IE 10 or older => return version number\n        return parseInt(\n            ua.substring(msie + msieVersionOffset, ua.indexOf('.', msie)),\n            versionLength\n        );\n    }\n\n    const trident = ua.indexOf('Trident/'),\n        tridentVersionOffset = 3;\n\n    if (trident > 0) {\n        // IE 11 => return version number\n        let rv = ua.indexOf('rv:');\n        return parseInt(\n            ua.substring(rv + tridentVersionOffset, ua.indexOf('.', rv)),\n            versionLength\n        );\n    }\n\n    const edge = ua.indexOf('Edge/'),\n        edgeVersionOffset = 5;\n\n    if (edge > 0) {\n        // Edge (IE 12+) => return version number\n        return parseInt(\n            ua.substring(edge + edgeVersionOffset, ua.indexOf('.', edge)),\n            versionLength\n        );\n    }\n\n    // other browser\n    return false;\n}\n\n/**\n * Check if browser supports IntersectionObserver API\n *\n * @returns {Boolean} -\n */\nexport function checkIntersectionObserver() {\n    if (\n        'IntersectionObserver' in window &&\n        'IntersectionObserverEntry' in window &&\n        'intersectionRatio' in window.IntersectionObserverEntry.prototype\n    ) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n/**\n * Create elements containing classes, content and any other attributes\n *\n * @param {string} type - Type of element to create, e.g. \"div\", \"button\".\n * @param {array} attributes - Array of objects specifying which attributes to assign to the element i.e. {label : \"class\", val : \"container\"}\n */\nexport function createHTMLElement(type, attributes) {\n    let el = document.createElement(type);\n    attributes.map(function (att) {\n        att.label === 'content'\n            ? el.appendChild(document.createTextNode(att.val))\n            : el.setAttribute(att.label, att.val);\n    });\n    return el;\n}\n\nexport function uppercaseFirstLetterLowercaseRest(s) {\n    return s.charAt(0).toUpperCase() + s.slice(1).toLowerCase();\n}\n\n/**\n * Asynchronous request to Funnelback web service.\n *\n * @param {object} config An axios configuration object.\n * @return {Promise} - A promise of a Funnelback response.\n */\nexport function axiosRequest(config) {\n    const httpOK = 200;\n\n    return axios(config)\n        .then((response) => {\n            if (httpOK === response.status) {\n                return response.data;\n            } else {\n                throw `Bad response: ${response.status}`;\n            }\n        })\n        .catch((e) => {\n            if (!axios.isCancel(e)) {\n                gaEvent(\n                    'jsError',\n                    'JavaScript error',\n                    `Line ${e.lineNumber} – ${e.message}`,\n                    `axiosRequest ${e.fileName} (${window.location})`,\n                    true\n                );\n            }\n        });\n}\n\n/**\n * Returns the correct English suffix for a number.\n *\n * @param  {number} day - The day of the month.\n * @returns {string} The correct suffix.\n */\nfunction daySuffix(day) {\n    const eleventh = 11,\n        thirteenth = 13,\n        lastDigit = day.toString().slice(-1);\n\n    return day >= eleventh || day <= thirteenth\n        ? 'th'\n        : lastDigit === '1'\n        ? 'st'\n        : lastDigit === '2'\n        ? 'nd'\n        : lastDigit === '3'\n        ? 'rd'\n        : 'th';\n}\n\n/**\n * Format a date for React.\n *\n * @param {Date} date - A date object.\n * @returns {ReactFragment} The formatted date.\n */\nexport function formatReactDate(date) {\n    const months = [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December',\n        ],\n        days = [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday',\n        ];\n\n    return (\n        <time dateTime={date.toISOString().split('T')[0]}>\n            {days[date.getUTCDay()]}, {date.getUTCDate()}\n            <sup>{daySuffix(date.getUTCDate())}</sup>{' '}\n            {months[date.getUTCMonth()]} {date.getUTCFullYear()}\n        </time>\n    );\n}\n\n/**\n * Array slicer\n *\n * @param {array} arr - array to be split up into subarrays\n * @param {number} len - max number items that goes into each subarray\n */\nexport function arraySlicer(arr, len) {\n    let newArray = [],\n        i = 0,\n        n = arr.length;\n\n    while (i < n) {\n        newArray.push(arr.slice(i, (i += len)));\n    }\n    return newArray;\n}\n"],"sourceRoot":""}