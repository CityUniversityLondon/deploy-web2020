{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/how-to-apply--pgt.js","webpack:///./src/patterns/how-to-apply/buttons/apply.js","webpack:///./src/patterns/how-to-apply/how-to-apply--pgt.js","webpack:///./src/patterns/how-to-apply/pgt-data.js","webpack:///./src/util.js"],"names":["document","addEventListener","test","navigator","userAgent","howToApplyCTAs","querySelectorAll","Array","from","forEach","howToApply","howToApplyConfig","dataset","config","then","render","edn","ApplyLinks","props","data","map","d","index","btnText","header","months","HowToApply","entryPoints","initialPreferences","qualification","Object","keys","length","subject","entry","location","modalVisible","setModalVisible","useState","preferences","setPreferences","firstStep","setFirstStep","windowPrompt","setWindowPrompt","selection","setSelection","btnSelection","setBtnSelection","linkSelection","setLinkSelection","options","querySelector","promptRoute","filterMethodsData","methods","filterDatesData","methodStandardButtons","methodLinkButtons","locations","l","push","filterSubjectData","s","subjectNames","dates","e","subjBtn","target","subjVal","textContent","filteredSubjData","filter","spanText","filterQualificationData","buttonQuals","linkQuals","buttonOptions","linkOptions","reduce","a","i","indexOf","bq","qualBtn","qualVal","filteredQualData","lq","question","qualificationQuestion","qualificationsProgress","newPreferences","entryPointsProgress","Date","getUTCMonth","getUTCFullYear","nextStep","qualificationsProgressMobile","nextStepMobile","alternative","element","otheryear","otherurl","focusTrap","setFocusTrap","modalRef","modalContentRef","getModal","getModalContent","useEffect","activate","createFocusTrap","initialFocus","onDeactivate","clickOutsideDeactivates","disableBodyScroll","deactivate","enableBodyScroll","modal","modalContent","display","year","propTypes","PropTypes","array","object","timeout","url","axiosRequest","toBool","partialMatchFn","m","fullMatchFn","removeClass","elem","className","removePartials","matchFn","split","join","reduceMotion","reducedMotionQuery","window","matchMedia","matches","isVisible","offsetHeight","offsetWidth","verticallyInWindow","getBoundingClientRect","top","innerHeight","parametersToObject","parameterString","parameters","substr","parameter","k","v","objectToParameters","parameterObj","key","gaEvent","event","eventCategory","eventAction","eventLabel","eventValue","nonInteractionHit","dataLayer","appendAll","children","child","appendChild","numberFromString","string","number","replace","isMobile","screen","viewPortWidth","innerWidth","mobileScreen","toArray","obj","detectIE","ua","versionLength","msie","msieVersionOffset","parseInt","substring","trident","tridentVersionOffset","rv","edge","edgeVersionOffset","checkIntersectionObserver","IntersectionObserverEntry","prototype","createHTMLElement","type","attributes","el","createElement","att","label","createTextNode","val","setAttribute","uppercaseFirstLetterLowercaseRest","charAt","toUpperCase","slice","toLowerCase","httpOK","axios","response","status","catch","isCancel","lineNumber","message","fileName","daySuffix","day","eleventh","thirteenth","lastDigit","toString","formatReactDate","date","days","toISOString","getUTCDay","getUTCDate","arraySlicer","arr","len","newArray","n"],"mappings":"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","file":"how-to-apply--pgt.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"how-to-apply--pgt\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([6,\"vendor-dependencies\",\"core\",\"react\",\"axios\",\"vendor-direct\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/**\n * How to apply PGT entry\n *\n * @author Web Development\n * @copyright City, University of London 2020\n */\nimport React from 'react';\nimport { render } from 'react-dom';\nimport HowToApply from './patterns/how-to-apply/how-to-apply--pgt';\nimport { howToApplyConfig } from './patterns/how-to-apply/pgt-data';\nimport edn from 'edn-to-js';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    if (/(Trident|MSIE)/.test(navigator.userAgent)) {\n        return;\n    } else {\n        const howToApplyCTAs = document.querySelectorAll(\n            '.how-to-apply--pgt--js'\n        );\n        howToApplyCTAs &&\n            Array.from(howToApplyCTAs).forEach(howToApply => {\n                howToApplyConfig(howToApply.dataset.config).then(config => {\n                    render(\n                        <HowToApply\n                            config={edn(config)}\n                            element={howToApply}\n                        />,\n                        howToApply\n                    );\n                });\n            });\n    }\n});\n","import React from 'react';\n\nexport default function ApplyLinks(props) {\n    if (props.data) {\n        return props.data.map((d, index) => {\n            return (\n                <li key={index} className=\"apply\">\n                    <a href={d['options']['apply']}>\n                        <span>{props.btnText ? props.btnText : d.header}</span>\n                        &nbsp;\n                        <span\n                            className=\"far fa-external-link\"\n                            aria-label=\"(external link)\"\n                        />\n                    </a>\n                </li>\n            );\n        });\n    }\n}\n","/**\n * How to apply for postgraduate taught degrees\n *\n * Don't run this via patterns.js, it's a separate compilation.\n *\n * @module patterns/how-to-apply/how-to-apply--pgt\n * @author Web Development\n * @copyright City, University of London 2020\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\n\nimport ApplyLinks from './buttons/apply';\nimport PropTypes from 'prop-types';\nimport createFocusTrap from 'focus-trap';\n\nconst months = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n];\n\n// function formatDate(sourceDate) {\n//     let formattedDate = new Date(sourceDate);\n//     return `${\n//         months[formattedDate.getUTCMonth()]\n//     } ${formattedDate.getUTCFullYear()}`;\n// }\n\n/**\n * Launch the how to apply modal.\n *\n * @param {object} props The JSON configuration file for the modal.\n * @return {object} The React component to render.\n */\nfunction HowToApply(props) {\n    let entryPoints = props.config;\n    const initialPreferences = {\n            qualification:\n                Object.keys(entryPoints).length === 1\n                    ? Object.keys(entryPoints[0])[0]\n                    : null,\n            subject: null,\n            entry: null,\n            location: null,\n        },\n        [modalVisible, setModalVisible] = useState(false),\n        [preferences, setPreferences] = useState(initialPreferences),\n        [firstStep, setFirstStep] = useState(false), // Controls 'Start again' visibility\n        [windowPrompt, setWindowPrompt] = useState(\n            'Choose the qualification you wish to apply for:'\n        );\n    let [selection, setSelection] = useState();\n    let [btnSelection, setBtnSelection] = useState();\n    let [linkSelection, setLinkSelection] = useState();\n    // let [initialSelection, setInitialSelection] = useState();\n    // let [qualificationSelect, setQualificationSelect] = useState(false);\n    let options = document.querySelector('.how-to-apply--pgt--js__options'),\n        // promptQualification = 'Choose the qualification you wish to apply for:',\n        promptRoute = 'Choose the route you wish to apply for:';\n    // promptEntryPoint = 'Choose the entry point you wish to apply for:';\n\n    function filterMethodsData(methods) {\n        // console.log(methods);\n        // console.log(methods.length);\n        // console.log('filter methods function');\n        // No additional validation required at this level; print methods of study as links\n        options = (\n            <ul className=\"how-to-apply--pgt--js__options\">\n                <ApplyLinks data={methods} />\n            </ul>\n        );\n        setSelection(options);\n        setBtnSelection();\n        setLinkSelection();\n    }\n\n    function filterDatesData(filterDatesData) {\n        // console.log('fdd: ' + filterDatesData);\n\n        let methodStandardButtons = [];\n        let methodLinkButtons = [];\n        // Loop dates; see if they can be direct links\n        filterDatesData.map((d) => {\n            let locations = d['options'];\n            locations.map((l) => {\n                // console.log(l);\n                let methods = l['options'];\n                methods.map(() => {\n                    // console.log('dates: ' + filterDatesData.length);\n                    // console.log('locations: ' + locations.length);\n                    // console.log('methods: ' + methods.length);\n                    // console.log(filterDatesData.length);\n\n                    if (filterDatesData.length > 1) {\n                        if (locations.length > 1 || methods.length > 1) {\n                            methodStandardButtons.push(d.header);\n                        } else {\n                            methodLinkButtons.push(d.header);\n                        }\n                    } else {\n                        // Single date; skip location level as handled in dates window and move to methods\n                        filterMethodsData(\n                            filterDatesData[0]['options'][0]['options']\n                        );\n                    }\n                });\n            });\n        });\n    }\n\n    function filterSubjectData(data) {\n        setBtnSelection();\n        // console.log('fsdf: ' + data);\n        data.map((s) => {\n            // console.log(s);\n            let subjectNames = s['options'];\n            subjectNames.map((s) => {\n                let dates = s['options'];\n                dates.map((d) => {\n                    // console.log(d);\n                    let locations = d['options'];\n                    locations.map((l) => {\n                        let methods = l['options'];\n                        if (\n                            subjectNames.length > 1 &&\n                            (dates.length ||\n                                locations.length ||\n                                methods.length > 1)\n                        ) {\n                            // Multiple dates, locations and/or methods exist. Render Regular buttons. Next window content decided in filterDatesData function.\n                            options = (\n                                <ul className=\"how-to-apply--pgt--js__options\">\n                                    {subjectNames.map((s) => {\n                                        return (\n                                            <li key={s}>\n                                                <button\n                                                    onClick={(e) => {\n                                                        let subjBtn = e.target.querySelector(\n                                                            'span'\n                                                        );\n                                                        let subjVal =\n                                                            subjBtn.textContent;\n                                                        let filteredSubjData = subjectNames.filter(\n                                                            (s) =>\n                                                                s.header ===\n                                                                subjVal\n                                                        );\n                                                        filterDatesData(\n                                                            filteredSubjData\n                                                        );\n                                                    }}\n                                                >\n                                                    <span\n                                                        onClick={(e) => {\n                                                            let spanText =\n                                                                e.target\n                                                                    .textContent;\n                                                            let filteredSubjData = subjectNames.filter(\n                                                                (s) =>\n                                                                    s.header ===\n                                                                    spanText\n                                                            );\n                                                            filterDatesData(\n                                                                filteredSubjData\n                                                            );\n                                                        }}\n                                                    >\n                                                        {s.header}\n                                                    </span>\n                                                </button>\n                                            </li>\n                                        );\n                                    })}\n                                </ul>\n                            );\n                            setWindowPrompt(promptRoute);\n                            setSelection(options);\n                        } else if (\n                            subjectNames.length > 1 &&\n                            (dates.length ||\n                                locations.length ||\n                                methods.length === 1)\n                        ) {\n                            // Display subjects as links\n                        } else if (\n                            subjectNames.length === 1 &&\n                            (dates.length ||\n                                locations.length ||\n                                methods.length > 1)\n                        ) {\n                            // Open next window (dates)\n                            // console.log('open dates window');\n                            filterDatesData(subjectNames[0]['options']);\n                        }\n                    });\n                });\n            });\n        });\n    }\n\n    function filterQualificationData(data) {\n        let buttonQuals = [];\n        let linkQuals = [];\n        let buttonOptions;\n        let linkOptions;\n        data.length > 1\n            ? data.map((e) => {\n                  let subjectNames = e['options'];\n                  // console.log(subjectNames);\n                  // console.log(subjectNames.length);\n                  subjectNames.map((s) => {\n                      // console.log('TL subjects: ' + s);\n                      // console.log('TL subjects: ' + s.length);\n                      let dates = s['options'];\n                      dates.map((d) => {\n                          // console.log('TL dates: ' + d.length);\n                          let locations = d['options'];\n                          locations.map((l) => {\n                              // console.log('TL locations: ' + l.length);\n                              let methods = l['options'];\n                              methods.map(() => {\n                                  // console.log('TL methods: ' + m.length);\n                                  if (data.length > 1) {\n                                      if (\n                                          subjectNames.length > 1 ||\n                                          dates.length > 1 ||\n                                          locations.length > 1 ||\n                                          methods.length > 1\n                                      ) {\n                                          buttonQuals.push(e.header);\n                                          buttonQuals = buttonQuals.reduce(\n                                              function (a, i) {\n                                                  a.indexOf(i) === -1\n                                                      ? a.push(i)\n                                                      : null;\n                                                  return a;\n                                              },\n                                              []\n                                          );\n                                          buttonOptions = buttonQuals.map(\n                                              (bq) => {\n                                                  return (\n                                                      <li key={bq}>\n                                                          <button\n                                                              onClick={(e) => {\n                                                                  let qualBtn = e.target.querySelector(\n                                                                      'span'\n                                                                  );\n                                                                  // console.log(qualBtn);\n                                                                  let qualVal =\n                                                                      qualBtn.textContent;\n                                                                  // console.log(qualVal);\n                                                                  let filteredQualData = data.filter(\n                                                                      (s) =>\n                                                                          s.header ===\n                                                                          qualVal\n                                                                  );\n                                                                  // console.log(filteredQualData);\n                                                                  filteredQualData;\n                                                                  filterSubjectData(\n                                                                      filteredQualData\n                                                                  );\n                                                              }}\n                                                          >\n                                                              <span\n                                                                  onClick={() => {\n                                                                      // console.log('span btn click');\n                                                                  }}\n                                                              >\n                                                                  {bq}\n                                                              </span>\n                                                          </button>\n                                                      </li>\n                                                  );\n                                              }\n                                          );\n                                          setBtnSelection(buttonOptions);\n                                      } else {\n                                          linkQuals.push(e.header);\n                                          linkQuals = linkQuals.reduce(\n                                              function (a, i) {\n                                                  a.indexOf(i) === -1\n                                                      ? a.push(i)\n                                                      : null;\n                                                  return a;\n                                              },\n                                              []\n                                          );\n                                          linkOptions = linkQuals.map((lq) => {\n                                              return (\n                                                  <ApplyLinks\n                                                      key={lq}\n                                                      data={methods}\n                                                      btnText={lq}\n                                                  />\n                                              );\n                                          });\n                                          setLinkSelection(linkOptions);\n                                      }\n                                  }\n                              });\n                          });\n                      });\n                  });\n              })\n            : // One qualification; move to subjects function\n              filterSubjectData(entryPoints[0]['options']);\n    }\n    // filterQualificationData(entryPoints);\n\n    // function arrayReduce(arr) {\n    //     arr.reduce(function (a, i) {\n    //         a.indexOf(i) === -1 ? a.push(i) : null;\n    //         return a;\n    //     }, []);\n    // }\n    // let reducedButtonQuals = arrayReduce(buttonQuals);\n\n    /**\n     * Launch the how to apply modal from a button click.\n     *\n     * @param {event} e The button click event.\n     */\n    // function journeyFromButton(e) {\n    //     // Target clicked qualification button and its text value, e.g. 'MSc'\n    //     let qualBtn = e.target.querySelector('span');\n    //     let qualVal = qualBtn.textContent;\n\n    //     // Filter entry points data on selected qualification\n    //     let filteredQualData = entryPoints.filter((e) => e.header === qualVal);\n    //     modalJourney(filteredQualData);\n    // }\n\n    /**\n     * Launch the how to apply modal from a button's child span click.\n     *\n     * @param {event} e The span click event.\n     */\n    // function journeyFromSpan(e) {\n    //     let spanText = e.target.textContent;\n    //     // Filter entry points data on selected qualification\n    //     let filteredQualData = entryPoints.filter((e) => e.header === spanText);\n    //     modalJourney(filteredQualData);\n    // }\n\n    const question = 'qualification',\n        // [multipleSubjects, setMultipleSubjects] = useState(true),\n        // [multipleEntryPoints, setMultipleEntryPoints] = useState(true),\n        // [multipleLocations, setMultipleLocations] = useState(true),\n        qualificationQuestion = question === 'qualification' && (\n            <>\n                <div className=\"how-to-apply--pgt--js__modal__content-wrapper\">\n                    <p>{windowPrompt}</p>\n                    {selection}\n                    <ul className=\"how-to-apply--pgt--js__options\">\n                        {btnSelection}\n                        {linkSelection}\n                    </ul>\n                    {/* {initialSelection} */}\n                </div>\n            </>\n        ),\n        qualificationsProgress =\n            Object.keys(entryPoints).length > 1 ? (\n                question === 'qualification' ? (\n                    <li className=\"how-to-apply--pgt--js__modal__progress__current\">\n                        <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                            <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                                <span className=\"fas fa-circle icon\"></span>\n                            </span>\n                            <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                                Qualification\n                            </span>\n                        </span>\n                    </li>\n                ) : preferences.qualification ? (\n                    <li className=\"how-to-apply--pgt--js__modal__progress__previous\">\n                        <button\n                            className=\"how-to-apply--pgt--js__modal__progress__wrapper\"\n                            onClick={() => {\n                                const newPreferences = preferences;\n\n                                newPreferences.qualification = null;\n                                newPreferences.subject = null;\n                                newPreferences.entry = null;\n                                newPreferences.location = null;\n\n                                setPreferences(newPreferences);\n                                // setQuestion(\n                                //     nextQuestion(newPreferences, entryPoints)\n                                // );\n                            }}\n                        >\n                            <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                                <span\n                                    className=\"fas fa-check icon\"\n                                    aria-label=\"Back to choose qualification\"\n                                ></span>\n                            </span>\n                            <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                                {preferences.qualification}\n                            </span>\n                        </button>\n                    </li>\n                ) : null\n            ) : null,\n        // subjectsProgress = multipleSubjects ? (\n        //     question === 'subject' ? (\n        //         <li className=\"how-to-apply--pgt--js__modal__progress__current\">\n        //             <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n        //                 <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n        //                     <span className=\"fas fa-circle icon\"></span>\n        //                 </span>\n        //                 <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n        //                     Route\n        //                 </span>\n        //             </span>\n        //         </li>\n        //     ) : preferences.subject ? (\n        //         <li className=\"how-to-apply--pgt--js__modal__progress__previous\">\n        //             <button\n        //                 className=\"how-to-apply--pgt--js__modal__progress__wrapper\"\n        //                 onClick={() => {\n        //                     const newPreferences = preferences;\n\n        //                     newPreferences.subject = null;\n        //                     newPreferences.entry = null;\n        //                     newPreferences.location = null;\n\n        //                     setPreferences(newPreferences);\n        //                     // setQuestion(\n        //                     //     nextQuestion(newPreferences, entryPoints)\n        //                     // );\n        //                 }}\n        //             >\n        //                 <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n        //                     <span\n        //                         className=\"fas fa-check icon\"\n        //                         aria-label=\"Back to choose study route\"\n        //                     ></span>\n        //                 </span>\n        //                 <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n        //                     {preferences.subject}\n        //                 </span>\n        //             </button>\n        //         </li>\n        //     ) : null\n        // ) : null,\n        entryPointsProgress =\n            // multipleEntryPoints ? (\n            question === 'entry' ? (\n                <li className=\"how-to-apply--pgt--js__modal__progress__current\">\n                    <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                        <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                            <span className=\"fas fa-circle icon\"></span>\n                        </span>\n                        <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                            Entry point\n                        </span>\n                    </span>\n                </li>\n            ) : preferences.entry ? (\n                <li className=\"how-to-apply--pgt--js__modal__progress__previous\">\n                    <button\n                        className=\"how-to-apply--pgt--js__modal__progress__wrapper\"\n                        onClick={() => {\n                            const newPreferences = preferences;\n\n                            newPreferences.entry = null;\n                            newPreferences.location = null;\n\n                            setPreferences(newPreferences);\n                            // setQuestion(\n                            //     nextQuestion(newPreferences, entryPoints)\n                            // );\n                        }}\n                    >\n                        <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                            <span\n                                className=\"fas fa-check icon\"\n                                aria-label=\"Back to choose entry point\"\n                            ></span>\n                        </span>\n                        <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                            {months[new Date(preferences.entry).getUTCMonth()]}{' '}\n                            {new Date(preferences.entry).getUTCFullYear()}\n                        </span>\n                    </button>\n                </li>\n            ) : // ) : null\n            null,\n        // locationsProgress = multipleLocations ? (\n        //     question === 'location' ? (\n        //         <li className=\"how-to-apply--pgt--js__modal__progress__current\">\n        //             <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n        //                 <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n        //                     <span className=\"fas fa-circle icon\"></span>\n        //                 </span>\n        //                 <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n        //                     Location\n        //                 </span>\n        //             </span>\n        //         </li>\n        //     ) : preferences.location ? (\n        //         <li className=\"how-to-apply--pgt--js__modal__progress__previous\">\n        //             <button\n        //                 className=\"how-to-apply--pgt--js__modal__progress__wrapper\"\n        //                 onClick={() => {\n        //                     const newPreferences = preferences;\n\n        //                     newPreferences.location = null;\n\n        //                     setPreferences(newPreferences);\n        //                     // setQuestion(\n        //                     //     nextQuestion(newPreferences, entryPoints)\n        //                     // );\n        //                 }}\n        //             >\n        //                 <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n        //                     <span\n        //                         className=\"fas fa-check icon\"\n        //                         aria-label=\"Back to choose location\"\n        //                     ></span>\n        //                 </span>\n        //                 <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n        //                     {preferences.location}\n        //                 </span>\n        //             </button>\n        //         </li>\n        //     ) : null\n        // ) : null,\n        nextStep =\n            question !== 'apply' ? (\n                <li className=\"how-to-apply--pgt--js__modal__progress__next\">\n                    <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                        <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                            <span\n                                className=\"fas fa-circle icon\"\n                                aria-hidden=\"true\"\n                            ></span>\n                        </span>\n                    </span>\n                </li>\n            ) : (\n                <li className=\"how-to-apply--pgt--js__modal__progress__current how-to-apply--pgt--js__modal__progress__last\">\n                    <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                        <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                            <span className=\"fas fa-circle icon\"></span>\n                        </span>\n                        <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                            Method of study\n                        </span>\n                    </span>\n                </li>\n            ),\n        qualificationsProgressMobile =\n            Object.keys(entryPoints).length > 1 &&\n            (question === 'qualification' || preferences.qualification) ? (\n                <li\n                    className={\n                        question === 'qualification'\n                            ? 'how-to-apply--pgt--js__modal__progress__current'\n                            : 'how-to-apply--pgt--js__modal__progress__previous'\n                    }\n                >\n                    <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                        <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                            <span\n                                className={\n                                    question === 'qualification'\n                                        ? 'fas fa-circle icon'\n                                        : 'fas fa-check icon'\n                                }\n                            ></span>\n                        </span>\n                        {question === 'qualification' && (\n                            <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                                Qualification\n                            </span>\n                        )}\n                    </span>\n                </li>\n            ) : null,\n        // subjectsProgressMobile =\n        //     multipleSubjects &&\n        //     (question === 'subject' || preferences.subject) ? (\n        //         <li\n        //             className={\n        //                 question === 'subject'\n        //                     ? 'how-to-apply--pgt--js__modal__progress__current'\n        //                     : 'how-to-apply--pgt--js__modal__progress__previous'\n        //             }\n        //         >\n        //             <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n        //                 <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n        //                     <span\n        //                         className={\n        //                             question === 'subject'\n        //                                 ? 'fas fa-circle icon'\n        //                                 : 'fas fa-check icon'\n        //                         }\n        //                     ></span>\n        //                 </span>\n        //                 {question === 'subject' && (\n        //                     <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n        //                         Subject\n        //                     </span>\n        //                 )}\n        //             </span>\n        //         </li>\n        //     ) : null,\n        // entryPointsProgressMobile =\n        // multipleEntryPoints &&\n        // question === 'entry' || preferences.entry ? (\n        //     <li\n        //         className={\n        //             question === 'entry'\n        //                 ? 'how-to-apply--pgt--js__modal__progress__current'\n        //                 : 'how-to-apply--pgt--js__modal__progress__previous'\n        //         }\n        //     >\n        //         <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n        //             <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n        //                 <span\n        //                     className={\n        //                         question === 'entry'\n        //                             ? 'fas fa-circle icon'\n        //                             : 'fas fa-check icon'\n        //                     }\n        //                 ></span>\n        //             </span>\n        //             {question === 'entry' && (\n        //                 <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n        //                     Entry point\n        //                 </span>\n        //             )}\n        //         </span>\n        //     </li>\n        // ) : null,\n        // locationsProgressMobile =\n        //     multipleLocations &&\n        //     (question === 'location' || preferences.location) ? (\n        //         <li\n        //             className={\n        //                 question === 'location'\n        //                     ? 'how-to-apply--pgt--js__modal__progress__current'\n        //                     : 'how-to-apply--pgt--js__modal__progress__previous'\n        //             }\n        //         >\n        //             <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n        //                 <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n        //                     <span\n        //                         className={\n        //                             question === 'location'\n        //                                 ? 'fas fa-circle icon'\n        //                                 : 'fas fa-check icon'\n        //                         }\n        //                     ></span>\n        //                 </span>\n        //                 {question === 'location' && (\n        //                     <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n        //                         Location\n        //                     </span>\n        //                 )}\n        //             </span>\n        //         </li>\n        //     ) : null,\n        nextStepMobile =\n            question !== 'apply' ? (\n                <li className=\"how-to-apply--pgt--js__modal__progress__next\">\n                    <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                        <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                            <span className=\"fas fa-circle icon\"></span>\n                        </span>\n                    </span>\n                </li>\n            ) : (\n                <li className=\"how-to-apply--pgt--js__modal__progress__current how-to-apply--pgt--js__modal__progress__last\">\n                    <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                        <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                            <span className=\"fas fa-circle icon\"></span>\n                        </span>\n                        <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                            Method of study\n                        </span>\n                    </span>\n                </li>\n            ),\n        alternative = props.element.dataset.otheryear &&\n            props.element.dataset.otherurl && (\n                <p className=\"how-to-apply--pgt--js__modal__alternative\">\n                    <a href={props.element.dataset.otherurl}>\n                        {props.element.dataset.otheryear} entry is also\n                        available.\n                    </a>\n                </p>\n            );\n\n    const [focusTrap, setFocusTrap] = useState({});\n\n    let modalRef = null,\n        modalContentRef = null;\n    const getModal = () => modalRef,\n        getModalContent = () => modalContentRef;\n\n    useEffect(() => {\n        if (!focusTrap.activate) {\n            setFocusTrap(\n                createFocusTrap(getModalContent(), {\n                    initialFocus: getModalContent().querySelector(\n                        '.how-to-apply--pgt--js__options button, .how-to-apply--pgt--js__options a'\n                    ),\n                    onDeactivate: () => setModalVisible(false),\n                    clickOutsideDeactivates: true,\n                })\n            );\n        }\n\n        if (modalVisible) {\n            focusTrap.activate && focusTrap.activate();\n            disableBodyScroll(getModal());\n        } else {\n            focusTrap.deactivate && focusTrap.deactivate();\n            enableBodyScroll(getModal());\n        }\n    }, [modalVisible]);\n\n    return (\n        <>\n            <ul className=\"cta-block\">\n                <li className=\"cta-block__cta\">\n                    <button\n                        className=\"primary-cta-arrow--bright\"\n                        onClick={() => {\n                            setModalVisible(true);\n                            setFirstStep(true);\n                            filterQualificationData(entryPoints);\n                        }}\n                    >\n                        <span>Apply now</span>\n                    </button>\n                </li>\n            </ul>\n            <div\n                className=\"how-to-apply--pgt--js__modal\"\n                data-open={modalVisible}\n                ref={(modal) => (modalRef = modal)}\n            >\n                <div\n                    className=\"how-to-apply--pgt--js__modal__content\"\n                    ref={(modalContent) => (modalContentRef = modalContent)}\n                >\n                    <button\n                        className=\"how-to-apply--pgt--js__close\"\n                        onClick={() => {\n                            focusTrap.deactivate && focusTrap.deactivate();\n                            enableBodyScroll(getModal());\n                            setModalVisible(false);\n                        }}\n                    >\n                        <span\n                            className=\"fas fa-times icon\"\n                            aria-label=\"Close\"\n                        ></span>\n                    </button>\n                    {!firstStep ? (\n                        <div\n                            className=\"how-to-apply--pgt--js__modal__reset\"\n                            style={{ display: 'block' }}\n                        >\n                            <button\n                                onClick={() => {\n                                    // Clear options display and render what user would see if modal first opened\n                                    setSelection();\n                                    // setInitialSelection(initialModalDisplay);\n                                    setFirstStep(true);\n                                    setWindowPrompt('Original prompt');\n                                }}\n                            >\n                                <span className=\"fas fa-redo\"></span>{' '}\n                                <span>Start again</span>\n                            </button>\n                        </div>\n                    ) : null}\n                    <ol className=\"how-to-apply--pgt--js__modal__progress\">\n                        {qualificationsProgress}\n                        {/* {subjectsProgress} */}\n                        {entryPointsProgress}\n                        {/* {locationsProgress} */}\n                        {nextStep}\n                    </ol>\n                    <ol className=\"how-to-apply--pgt--js__modal__progress--mobile\">\n                        {qualificationsProgressMobile}\n                        {/* {subjectsProgressMobile}\n                        {entryPointsProgressMobile} */}\n                        {/* {locationsProgressMobile} */}\n                        {nextStepMobile}\n                    </ol>\n                    <div className=\"how-to-apply--pgt--js__modal__content-wrapper\">\n                        <h2>Start in {props.element.dataset.year}</h2>\n                    </div>\n                    {qualificationQuestion}\n                    {/* {subjectQuestion} */}\n                    {/* {entryQuestion}\n                    {locationQuestion}\n                    {applyQuestion} */}\n                    <div className=\"how-to-apply--pgt--js__modal__content-wrapper\">\n                        {alternative}\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nHowToApply.propTypes = {\n    config: PropTypes.array,\n    element: PropTypes.object,\n};\n\nexport default HowToApply;\n","/**\n * Functions to retrieve how to apply configuration.\n *\n * @module pgt-data\n * @author Web Development\n * @copyright City, University of London 2020\n */\n\nimport { axiosRequest } from '../../util.js';\n\nconst timeout = 30000;\n\n/**\n * How to apply configuration.\n *\n * @param {string} url The HTA configuration file.\n * @return {Promise} - A promise of  configuration object.\n */\nexport function howToApplyConfig(url) {\n    const config = {\n        timeout: timeout,\n        url: url,\n    };\n\n    return axiosRequest(config);\n}\n","/**\n * Useful utility functions\n *\n * @module util\n * @author Web Development\n * @copyright City, University of London 2018-2020\n */\n\nimport axios from 'axios';\nimport React from 'react';\n\n/**\n * Turns string boolean into real boolean.\n *\n * @param {string} s - A string that may be 'true'.\n * @returns {boolean} True if 'true'.\n */\nexport function toBool(s) {\n    return s === 'true' ? true : false;\n}\n\nconst partialMatchFn = (m) => (s) => s.indexOf(m) < 0,\n    fullMatchFn = (m) => (s) => s !== m;\n\n/**\n * Remove a class name from an HTML element.\n *\n * @param {HTMLElement} elem - An HTML element.\n * @param {string} className - A string representing the class to remove.\n * @param {boolean} [removePartials] - If true, remove partially matching classes.\n */\nexport function removeClass(elem, className, removePartials) {\n    const matchFn = removePartials\n        ? partialMatchFn(className)\n        : fullMatchFn(className);\n    elem.className = elem.className\n        .split(/\\s+/)\n        .filter((s) => matchFn(s))\n        .join(' ');\n}\n\n/**\n * Detect whether reduced motion is enabled.\n *\n * If it is, you should shortcut animations, disable autoplay elements, avoid\n * smooth scrolling in favour of jump scrolling, etc.\n *\n * Currently unsupported by Chrome, but works in Safari and Firefox.\n *\n * @returns {boolean} Boolean indicating that the reduce motion media query matches.\n */\nexport function reduceMotion() {\n    const reducedMotionQuery = window.matchMedia(\n        '(prefers-reduced-motion: reduce)'\n    );\n    return reducedMotionQuery.matches ? true : false;\n}\n\n/**\n * Predicate testing whether an element is currently visible, as opposed to\n * displayed: none; or similar. Doesn't necessarily mean it's visible in the\n * window.\n *\n * @param {HTMLElement} elem - An HTML element.\n * @returns {boolean} - Is it visible?\n */\nexport function isVisible(elem) {\n    return elem.offsetHeight !== 0 && elem.offsetWidth !== 0 ? true : false;\n}\n\n/**\n * Predicate testing whether an element is positioned in the window.\n *\n *\n * @param {HTMLElement} elem - An HTML element.\n * @returns {boolean} - Is it onscreen?\n */\nexport function verticallyInWindow(elem) {\n    return elem.getBoundingClientRect().top >= 0 &&\n        elem.getBoundingClientRect().top <= window.innerHeight\n        ? true\n        : false;\n}\n\n/**\n * Turn a query string into an object.\n *\n * @param {string} parameterString - An HTML query string.\n * @returns {object} An object containing the parameters.\n */\nexport function parametersToObject(parameterString) {\n    const parameters = {};\n    parameterString\n        .substr(1)\n        .split('&')\n        .forEach((parameter) => {\n            const [k, v] = parameter.split('=');\n            parameters[k] = v;\n        });\n    return parameters;\n}\n\n/**\n * Turn an object into a query string.\n *\n * @param {object} parameterObj - An object containing the parameters and their values.\n * @returns {string} A string of the parameters.\n */\nexport function objectToParameters(parameterObj) {\n    if (Object.keys(parameterObj).length > 0) {\n        let parameters = '?';\n        for (const key in parameterObj) {\n            parameters.length !== 1 && (parameters += '&');\n            parameters += key + '=' + parameterObj[key];\n        }\n        return parameters;\n    } else {\n        return '';\n    }\n}\n\n/**\n * Track a Google Analytics event.\n *\n * @param {string} event - The event key for Tag Manager.\n * @param {string} eventCategory - The event category.\n * @param {string} eventAction - The event action.\n * @param {string} [eventLabel] - The event label.\n * @param {number} [eventValue] - The event value.\n * @param {boolean} [nonInteractionHit] - Does this count as interacting with the page?\n */\nexport function gaEvent(\n    event,\n    eventCategory,\n    eventAction,\n    eventLabel,\n    eventValue,\n    nonInteractionHit\n) {\n    window.dataLayer = window.dataLayer || [];\n    window.dataLayer.push({\n        event: event,\n        eventCategory: eventCategory,\n        eventAction: eventAction,\n        eventLabel: eventLabel,\n        eventValue: eventValue,\n        nonInteractionHit: nonInteractionHit,\n    });\n}\n\n/**\n * Append an array of elements to an element.\n *\n * @param {HTMLElement} elem - The parent element.\n * @param {HTMLElement[]} children - An array of elements to append to it.\n */\nexport function appendAll(elem, children) {\n    children.forEach((child) => elem.appendChild(child));\n}\n\n/**\n * Extract number from string, e.g. return '123' from string 'a1b2c3'.\n *\n * @param {string} string - String\n */\nexport function numberFromString(string) {\n    let number = string.replace(/\\D/g, '');\n    return number;\n}\n\n/**\n * Calculates viewport width to determinte if using mobile\n * @param {number} number - width of screen, with default value = 432.\n *\n */\nexport function isMobile(screen = 432) {\n    const viewPortWidth = window.innerWidth;\n    const mobileScreen = screen;\n\n    if (viewPortWidth < mobileScreen) {\n        return true;\n    }\n}\n\n/**\n *\n * Turn DOM elements to array e.g return [li, li, li] from DOM element selecting 'li' <ul><li></li><li></li><li></li></ul>\n *\n * @param {object} object - Object\n */\n\nexport function toArray(obj) {\n    let array = [];\n    // iterate backwards ensuring that length is an UInt32\n    for (let i = obj.length >>> 0; i--; ) {\n        array[i] = obj[i];\n    }\n    return array;\n}\n\n/**\n * Check browser user agent is IE or edge and return version number\n */\nexport function detectIE() {\n    const ua = window.navigator.userAgent,\n        versionLength = 10,\n        msie = ua.indexOf('MSIE '),\n        msieVersionOffset = 5;\n\n    if (msie > 0) {\n        // IE 10 or older => return version number\n        return parseInt(\n            ua.substring(msie + msieVersionOffset, ua.indexOf('.', msie)),\n            versionLength\n        );\n    }\n\n    const trident = ua.indexOf('Trident/'),\n        tridentVersionOffset = 3;\n\n    if (trident > 0) {\n        // IE 11 => return version number\n        let rv = ua.indexOf('rv:');\n        return parseInt(\n            ua.substring(rv + tridentVersionOffset, ua.indexOf('.', rv)),\n            versionLength\n        );\n    }\n\n    const edge = ua.indexOf('Edge/'),\n        edgeVersionOffset = 5;\n\n    if (edge > 0) {\n        // Edge (IE 12+) => return version number\n        return parseInt(\n            ua.substring(edge + edgeVersionOffset, ua.indexOf('.', edge)),\n            versionLength\n        );\n    }\n\n    // other browser\n    return false;\n}\n\n/**\n * Check if browser supports IntersectionObserver API\n *\n * @returns {Boolean} -\n */\nexport function checkIntersectionObserver() {\n    if (\n        'IntersectionObserver' in window &&\n        'IntersectionObserverEntry' in window &&\n        'intersectionRatio' in window.IntersectionObserverEntry.prototype\n    ) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n/**\n * Create elements containing classes, content and any other attributes\n *\n * @param {string} type - Type of element to create, e.g. \"div\", \"button\".\n * @param {array} attributes - Array of objects specifying which attributes to assign to the element i.e. {label : \"class\", val : \"container\"}\n */\nexport function createHTMLElement(type, attributes) {\n    let el = document.createElement(type);\n    attributes.map(function (att) {\n        att.label === 'content'\n            ? el.appendChild(document.createTextNode(att.val))\n            : el.setAttribute(att.label, att.val);\n    });\n    return el;\n}\n\nexport function uppercaseFirstLetterLowercaseRest(s) {\n    return s.charAt(0).toUpperCase() + s.slice(1).toLowerCase();\n}\n\n/**\n * Asynchronous request to Funnelback web service.\n *\n * @param {object} config An axios configuration object.\n * @return {Promise} - A promise of a Funnelback response.\n */\nexport function axiosRequest(config) {\n    const httpOK = 200;\n\n    return axios(config)\n        .then((response) => {\n            if (httpOK === response.status) {\n                return response.data;\n            } else {\n                throw `Bad response: ${response.status}`;\n            }\n        })\n        .catch((e) => {\n            if (!axios.isCancel(e)) {\n                gaEvent(\n                    'jsError',\n                    'JavaScript error',\n                    `Line ${e.lineNumber} – ${e.message}`,\n                    `axiosRequest ${e.fileName} (${window.location})`,\n                    true\n                );\n            }\n        });\n}\n\n/**\n * Returns the correct English suffix for a number.\n *\n * @param  {number} day - The day of the month.\n * @returns {string} The correct suffix.\n */\nfunction daySuffix(day) {\n    const eleventh = 11,\n        thirteenth = 13,\n        lastDigit = day.toString().slice(-1);\n\n    return day >= eleventh || day <= thirteenth\n        ? 'th'\n        : lastDigit === '1'\n        ? 'st'\n        : lastDigit === '2'\n        ? 'nd'\n        : lastDigit === '3'\n        ? 'rd'\n        : 'th';\n}\n\n/**\n * Format a date for React.\n *\n * @param {Date} date - A date object.\n * @returns {ReactFragment} The formatted date.\n */\nexport function formatReactDate(date) {\n    const months = [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December',\n        ],\n        days = [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday',\n        ];\n\n    return (\n        <time dateTime={date.toISOString().split('T')[0]}>\n            {days[date.getUTCDay()]}, {date.getUTCDate()}\n            <sup>{daySuffix(date.getUTCDate())}</sup>{' '}\n            {months[date.getUTCMonth()]} {date.getUTCFullYear()}\n        </time>\n    );\n}\n\n/**\n * Array slicer\n *\n * @param {array} arr - array to be split up into subarrays\n * @param {number} len - max number items that goes into each subarray\n */\nexport function arraySlicer(arr, len) {\n    let newArray = [],\n        i = 0,\n        n = arr.length;\n\n    while (i < n) {\n        newArray.push(arr.slice(i, (i += len)));\n    }\n    return newArray;\n}\n"],"sourceRoot":""}