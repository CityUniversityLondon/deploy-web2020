{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/how-to-apply--pgt.js","webpack:///./src/patterns/how-to-apply/buttons/apply.js","webpack:///./src/patterns/how-to-apply/how-to-apply--pgt.js","webpack:///./src/patterns/how-to-apply/pgt-data.js","webpack:///./src/util.js"],"names":["document","addEventListener","test","navigator","userAgent","howToApplyCTAs","querySelectorAll","Array","from","forEach","howToApply","howToApplyConfig","dataset","config","then","render","edn","ApplyLinks","props","data","map","d","index","text","HowToApply","entryPoints","modalVisible","setModalVisible","useState","firstStep","setFirstStep","progressQualification","setProgressQualification","progressRoute","setProgressRoute","progressDate","setProgressDate","progressMethod","setProgressMethod","furtherStepsPendingIndicator","setFurtherStepsPendingIndicator","windowPrompt","setWindowPrompt","promptQualification","promptRoute","promptEntryPoint","promptMethod","furtherStepsPending","selectionButtonQualification","setSelectionButtonQualification","selectionLinkQualification","setSelectionLinkQualification","selectionButtonRoute","setSelectionButtonRoute","selectionLinkRoute","setSelectionLinkRoute","selectionButtonDate","setSelectionButtonDate","selectionLinkDate","setSelectionLinkDate","selectionHeadingLocationOne","setSelectionHeadingLocationOne","selectionButtonLocationOneDate","setSelectionButtonLocationOneDate","selectionLinkLocationOneDate","setSelectionLinkLocationOneDate","selectionHeadingLocationTwo","setSelectionHeadingLocationTwo","selectionButtonLocationTwoDate","setSelectionButtonLocationTwoDate","selectionLinkLocationTwoDate","setSelectionLinkLocationTwoDate","selectionLinkMethod","setSelectionLinkMethod","selectedQualificationData","selectedQualificationValue","selectedRouteData","selectedRouteValue","selectedDateData","selectedDateValue","clearSelectionOptions","formatDate","sourceDate","months","formattedDate","Date","getUTCMonth","getUTCFullYear","filterMethodsData","methods","qualNav","routeNav","dateNav","methodNav","filterQualificationData","filterRouteData","filterDatesData","methodLinks","linkOptions","m","methodLink","header","link","options","apply","push","buttonOptions","dateButtons","dateLinks","locationOneDateLinks","locationTwoDateLinks","locationOptions","dateLink","locations","l","length","lo","reduce","a","i","indexOf","locationsAll","filteredData","filter","fd","e","dateSrc","target","getAttribute","Set","find","db","dateLinksData","lq","filteredDateData","q","buttonQuals","linkRoutes","routeLink","s","dates","bq","textContent","sr","routeLinksData","lr","filteredRouteData","linkQuals","routeNames","innerText","qual","filteredQualData","question","qualificationQuestion","alternative","element","otheryear","otherurl","focusTrap","setFocusTrap","modalRef","modalContentRef","getModal","getModalContent","useEffect","activate","createFocusTrap","initialFocus","querySelector","onDeactivate","clickOutsideDeactivates","disableBodyScroll","deactivate","enableBodyScroll","modal","modalContent","year","propTypes","PropTypes","array","object","timeout","url","axiosRequest","toBool","partialMatchFn","fullMatchFn","removeClass","elem","className","removePartials","matchFn","split","join","reduceMotion","reducedMotionQuery","window","matchMedia","matches","isVisible","offsetHeight","offsetWidth","verticallyInWindow","getBoundingClientRect","top","innerHeight","parametersToObject","parameterString","parameters","substr","parameter","k","v","objectToParameters","parameterObj","Object","keys","key","gaEvent","event","eventCategory","eventAction","eventLabel","eventValue","nonInteractionHit","dataLayer","appendAll","children","child","appendChild","numberFromString","string","number","replace","isMobile","screen","viewPortWidth","innerWidth","mobileScreen","toArray","obj","detectIE","ua","versionLength","msie","msieVersionOffset","parseInt","substring","trident","tridentVersionOffset","rv","edge","edgeVersionOffset","checkIntersectionObserver","IntersectionObserverEntry","prototype","createHTMLElement","type","attributes","el","createElement","att","label","createTextNode","val","setAttribute","uppercaseFirstLetterLowercaseRest","charAt","toUpperCase","slice","toLowerCase","httpOK","axios","response","status","catch","isCancel","lineNumber","message","fileName","location","daySuffix","day","eleventh","thirteenth","lastDigit","toString","formatReactDate","date","days","toISOString","getUTCDay","getUTCDate","arraySlicer","arr","len","newArray","n"],"mappings":"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","file":"how-to-apply--pgt.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"how-to-apply--pgt\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([6,\"vendor-dependencies\",\"core\",\"react\",\"axios\",\"vendor-direct\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/**\n * How to apply PGT entry\n *\n * @author Web Development\n * @copyright City, University of London 2020\n */\nimport React from 'react';\nimport { render } from 'react-dom';\nimport HowToApply from './patterns/how-to-apply/how-to-apply--pgt';\nimport { howToApplyConfig } from './patterns/how-to-apply/pgt-data';\nimport edn from 'edn-to-js';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    if (/(Trident|MSIE)/.test(navigator.userAgent)) {\n        return;\n    } else {\n        const howToApplyCTAs = document.querySelectorAll(\n            '.how-to-apply--pgt--js'\n        );\n        howToApplyCTAs &&\n            Array.from(howToApplyCTAs).forEach(howToApply => {\n                howToApplyConfig(howToApply.dataset.config).then(config => {\n                    render(\n                        <HowToApply\n                            config={edn(config)}\n                            element={howToApply}\n                        />,\n                        howToApply\n                    );\n                });\n            });\n    }\n});\n","import React from 'react';\n\nexport default function ApplyLinks(props) {\n    if (props.data) {\n        return props.data.map((d, index) => {\n            return (\n                <li key={index} className=\"apply\">\n                    <a href={d['link']}>\n                        {/* <span>{props.btnText ? props.btnText : d.header}</span> */}\n                        <span>{d.text}</span>\n                        &nbsp;\n                        <span\n                            className=\"far fa-external-link\"\n                            aria-label=\"(external link)\"\n                        />\n                    </a>\n                </li>\n            );\n        });\n    }\n}\n","/**\n * How to apply for postgraduate taught degrees\n *\n * Don't run this via patterns.js, it's a separate compilation.\n *\n * @module patterns/how-to-apply/how-to-apply--pgt\n * @author Web Development\n * @copyright City, University of London 2020\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\n\nimport ApplyLinks from './buttons/apply';\nimport PropTypes from 'prop-types';\nimport createFocusTrap from 'focus-trap';\n\n/**\n * Launch the How to apply modal.\n *\n * @param {object} props The JSON configuration file for the modal.\n * @return {object} The React component to render.\n */\nfunction HowToApply(props) {\n    let entryPoints = props.config;\n    const [modalVisible, setModalVisible] = useState(false),\n        [firstStep, setFirstStep] = useState(false), // Controls 'Start again' visibility\n        [progressQualification, setProgressQualification] = useState(),\n        [progressRoute, setProgressRoute] = useState(),\n        [progressDate, setProgressDate] = useState(),\n        [progressMethod, setProgressMethod] = useState(),\n        [\n            furtherStepsPendingIndicator,\n            setFurtherStepsPendingIndicator,\n        ] = useState(),\n        [windowPrompt, setWindowPrompt] = useState(\n            'Choose the qualification you wish to apply for:'\n        ),\n        promptQualification = 'Choose the qualification you wish to apply for:',\n        promptRoute = 'Choose the route you wish to apply for:',\n        promptEntryPoint = 'Choose the entry point you wish to apply for:',\n        promptMethod = 'Apply online now:',\n        furtherStepsPending = (\n            <li className=\"how-to-apply--pgt--js__modal__progress__next\">\n                <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                    <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                        <span\n                            className=\"fas fa-circle icon\"\n                            aria-hidden=\"true\"\n                        ></span>\n                    </span>\n                </span>\n            </li>\n        );\n\n    let [\n            selectionButtonQualification,\n            setSelectionButtonQualification,\n        ] = useState(),\n        [\n            selectionLinkQualification,\n            setSelectionLinkQualification,\n        ] = useState(),\n        [selectionButtonRoute, setSelectionButtonRoute] = useState(),\n        [selectionLinkRoute, setSelectionLinkRoute] = useState(),\n        [selectionButtonDate, setSelectionButtonDate] = useState(),\n        [selectionLinkDate, setSelectionLinkDate] = useState(),\n        [\n            selectionHeadingLocationOne,\n            setSelectionHeadingLocationOne,\n        ] = useState(),\n        [\n            selectionButtonLocationOneDate,\n            setSelectionButtonLocationOneDate,\n        ] = useState(false),\n        [\n            selectionLinkLocationOneDate,\n            setSelectionLinkLocationOneDate,\n        ] = useState(false),\n        [\n            selectionHeadingLocationTwo,\n            setSelectionHeadingLocationTwo,\n        ] = useState(),\n        [\n            selectionButtonLocationTwoDate,\n            setSelectionButtonLocationTwoDate,\n        ] = useState(false),\n        [\n            selectionLinkLocationTwoDate,\n            setSelectionLinkLocationTwoDate,\n        ] = useState(false),\n        [selectionLinkMethod, setSelectionLinkMethod] = useState(),\n        selectedQualificationData,\n        selectedQualificationValue,\n        selectedRouteData,\n        selectedRouteValue,\n        selectedDateData,\n        selectedDateValue;\n\n    /**\n     * Clear any previously rendered selection buttons/links from the state to prevent superfluous button/link rendering\n     */\n    function clearSelectionOptions() {\n        setSelectionButtonQualification();\n        setSelectionLinkQualification();\n        setSelectionButtonRoute();\n        setSelectionLinkRoute();\n        setSelectionHeadingLocationOne();\n        setSelectionButtonLocationOneDate();\n        setSelectionLinkLocationOneDate();\n        setSelectionHeadingLocationTwo();\n        setSelectionButtonLocationTwoDate();\n        setSelectionLinkLocationTwoDate();\n        setSelectionButtonDate();\n        setSelectionLinkDate();\n        setSelectionLinkMethod();\n    }\n\n    /**\n     * Convert raw date values to full month/year for rendering to buttons.\n     *\n     * @param {string} sourceDate The unformatted date string.\n     */\n    function formatDate(sourceDate) {\n        const months = [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December',\n        ];\n        let formattedDate = new Date(sourceDate);\n        return `${\n            months[formattedDate.getUTCMonth()]\n        } ${formattedDate.getUTCFullYear()}`;\n    }\n\n    /**\n     * Completed programme, route and dates filter. Analyse methods data.\n     *\n     * @param {object} data The filtered data record data, where methods are at the top level.\n     */\n    function filterMethodsData(methods) {\n        // Methods of study pre-selection prompt text\n        setWindowPrompt(promptMethod);\n\n        // Clear any previously rendered selection buttons/links from the state to prevent superfluous button/link rendering\n        clearSelectionOptions();\n\n        // Variables scoped to this function\n        let qualNav, routeNav, dateNav, methodNav;\n\n        selectedQualificationData\n            ? (qualNav = (\n                  <li className=\"how-to-apply--pgt--js__modal__progress__previous\">\n                      <button\n                          className=\"how-to-apply--pgt--js__modal__progress__wrapper\"\n                          onClick={() => {\n                              // Load qualification select; clear route, date and method from progress navigation\n                              filterQualificationData(entryPoints);\n                              setProgressRoute();\n                              setProgressDate();\n                              setProgressMethod();\n                          }}\n                      >\n                          <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                              <span\n                                  className=\"fas fa-check icon\"\n                                  aria-label=\"Back to choose qualification\"\n                              ></span>\n                          </span>\n                          <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                              {selectedQualificationValue}\n                          </span>\n                      </button>\n                  </li>\n              ))\n            : (qualNav = null);\n        setProgressQualification(qualNav);\n\n        selectedRouteData\n            ? (routeNav = (\n                  <li className=\"how-to-apply--pgt--js__modal__progress__previous\">\n                      <button\n                          className=\"how-to-apply--pgt--js__modal__progress__wrapper\"\n                          onClick={() => {\n                              // Load route select; clear date and method from progress navigation\n                              setProgressDate();\n                              setProgressMethod();\n                              if (selectedQualificationData) {\n                                  filterRouteData(\n                                      selectedQualificationData[0]['options']\n                                  );\n                              } else {\n                                  filterQualificationData(entryPoints);\n                              }\n                          }}\n                      >\n                          <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                              <span\n                                  className=\"fas fa-check icon\"\n                                  aria-label=\"Back to choose route\"\n                              ></span>\n                          </span>\n                          <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                              {selectedRouteValue}\n                          </span>\n                      </button>\n                  </li>\n              ))\n            : (routeNav = null);\n        setProgressRoute(routeNav);\n\n        selectedDateData\n            ? (dateNav = (\n                  <li className=\"how-to-apply--pgt--js__modal__progress__previous\">\n                      <button\n                          className=\"how-to-apply--pgt--js__modal__progress__wrapper\"\n                          onClick={() => {\n                              // Load date select; clear method from progress navigation\n                              setProgressMethod();\n                              if (selectedRouteData) {\n                                  filterDatesData(\n                                      selectedRouteData[0]['options']\n                                  );\n                              } else if (selectedQualificationData) {\n                                  filterRouteData(\n                                      selectedQualificationData[0]['options']\n                                  );\n                              } else {\n                                  filterQualificationData(entryPoints);\n                              }\n                          }}\n                      >\n                          <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                              <span\n                                  className=\"fas fa-check icon\"\n                                  aria-label=\"Back to choose route\"\n                              ></span>\n                          </span>\n                          <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                              {selectedDateValue}\n                          </span>\n                      </button>\n                  </li>\n              ))\n            : (dateNav = null);\n        setProgressDate(dateNav);\n\n        // Method loads apply links and, if present, will always be the last step, therefore progress icon does nothing on click\n        methodNav = (\n            <li className=\"how-to-apply--pgt--js__modal__progress__current\">\n                <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                    <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                        <span className=\"fas fa-circle icon\"></span>\n                    </span>\n                    <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                        Method of study\n                    </span>\n                </span>\n            </li>\n        );\n        setProgressMethod(methodNav);\n\n        // Final modal step; remove further steps pending indicator\n        setFurtherStepsPendingIndicator();\n\n        let methodLinks = [];\n        let linkOptions;\n\n        methods.map((m) => {\n            const methodLink = {\n                text: m.header,\n                link: m.options.apply,\n            };\n            methodLinks.push(methodLink);\n            linkOptions = <ApplyLinks data={methodLinks} />;\n            setSelectionLinkMethod(linkOptions);\n        });\n    }\n\n    /**\n     * Completed programme and route filter. Analyse dates data.\n     *\n     * @param {object} data The filtered data record data, where dates are at the top level.\n     */\n    function filterDatesData(data) {\n        // Date pre-selection prompt text\n        setWindowPrompt(promptEntryPoint);\n\n        // Clear any previously rendered selection buttons/links from the state to prevent superfluous button/link rendering\n        clearSelectionOptions();\n\n        // Empty relevant state variables to remove superfluous progress navigation rendering\n        setProgressMethod();\n\n        // Clear data stored from previous selections\n        selectedDateData = null;\n\n        // Variables scoped to this function\n        let buttonOptions,\n            linkOptions,\n            dateButtons = [],\n            dateLinks = [],\n            locationOneDateLinks = [],\n            locationTwoDateLinks = [],\n            locationOptions = [],\n            qualNav,\n            routeNav,\n            dateNav,\n            dateLink;\n\n        // Progress indicator; display selected qualification and route values\n        selectedQualificationData\n            ? (qualNav = (\n                  <li className=\"how-to-apply--pgt--js__modal__progress__previous\">\n                      <button\n                          className=\"how-to-apply--pgt--js__modal__progress__wrapper\"\n                          onClick={() => {\n                              filterQualificationData(entryPoints);\n                          }}\n                      >\n                          <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                              <span\n                                  className=\"fas fa-check icon\"\n                                  aria-label=\"Back to choose qualification\"\n                              ></span>\n                          </span>\n                          <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                              {selectedQualificationValue}\n                          </span>\n                      </button>\n                  </li>\n              ))\n            : (qualNav = null);\n        setProgressQualification(qualNav);\n\n        selectedRouteData\n            ? (routeNav = (\n                  <li className=\"how-to-apply--pgt--js__modal__progress__previous\">\n                      <button\n                          className=\"how-to-apply--pgt--js__modal__progress__wrapper\"\n                          onClick={() => {\n                              filterRouteData(\n                                  selectedQualificationData[0]['options']\n                              );\n                          }}\n                      >\n                          <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                              <span\n                                  className=\"fas fa-check icon\"\n                                  aria-label=\"Back to choose route\"\n                              ></span>\n                          </span>\n                          <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                              {selectedRouteValue}\n                          </span>\n                      </button>\n                  </li>\n              ))\n            : (routeNav = null);\n        setProgressRoute(routeNav);\n\n        // Method loads apply links and, if present, will always be the last step, therefore progress icon does nothing on click\n        if (selectedDateData) {\n            dateNav = (\n                <li className=\"how-to-apply--pgt--js__modal__progress__current\">\n                    <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                        <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                            <span className=\"fas fa-circle icon\"></span>\n                        </span>\n                        <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                            Entry point\n                        </span>\n                    </span>\n                </li>\n            );\n        } else {\n            dateNav = null;\n        }\n\n        setProgressDate(dateNav);\n\n        data.map((d) => {\n            let locations = d['options'];\n            locations.map((l) => {\n                let methods = l['options'];\n                methods.map(() => {\n                    // Multiple dates; print buttons\n                    if (data.length > 1) {\n                        // Date selection required: set progress indicator to route and remove methods\n                        selectedDateValue = (\n                            <li className=\"how-to-apply--pgt--js__modal__progress__current\">\n                                <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                                    <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                                        <span className=\"fas fa-circle icon\"></span>\n                                    </span>\n                                    <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                                        Entry point\n                                    </span>\n                                </span>\n                            </li>\n                        );\n                        setProgressDate(selectedDateValue);\n                        setProgressMethod();\n\n                        // Calculate number of locations\n                        locations.map((lo) => {\n                            locationOptions.push(lo.header);\n                        });\n                        locationOptions = locationOptions.reduce(function (\n                            a,\n                            i\n                        ) {\n                            a.indexOf(i) === -1 ? a.push(i) : null;\n                            return a;\n                        },\n                        []);\n\n                        // Multiple locations, multiple dates => create array of objects per location\n                        if (locationOptions.length > 1) {\n                            let locationsAll = [];\n                            locationOptions.map((lo) => {\n                                let filteredData = data.filter(\n                                    (fd) => fd['options'][0]['header'] === lo\n                                );\n                                locationsAll.push(filteredData);\n                            });\n\n                            // Location 1 output\n                            locationsAll[0].map((fd) => {\n                                let methods = fd['options'][0]['options'];\n                                if (methods.length > 1) {\n                                    // Dates as buttons\n                                    return (\n                                        <li key={fd}>\n                                            <button>\n                                                <span\n                                                    data-date-src={fd}\n                                                    onClick={(e) => {\n                                                        let dateSrc = e.target.getAttribute(\n                                                            'data-date-src'\n                                                        );\n                                                        selectedDateValue = formatDate(\n                                                            dateSrc\n                                                        );\n                                                        selectedDateData = data.filter(\n                                                            (fd) =>\n                                                                fd.header ===\n                                                                dateSrc\n                                                        );\n                                                        filterMethodsData(\n                                                            selectedDateData[0][\n                                                                'options'\n                                                            ][0]['options']\n                                                        );\n                                                        setFirstStep(false);\n                                                    }}\n                                                >\n                                                    {formatDate(fd)}\n                                                </span>\n                                            </button>\n                                        </li>\n                                    );\n                                } else {\n                                    // Dates as links\n                                    const dateLink = {\n                                        text: formatDate(fd.header),\n                                        link:\n                                            fd['options'][0]['options'][0][\n                                                'options'\n                                            ]['apply'],\n                                    };\n                                    locationOneDateLinks.push(dateLink);\n                                    locationOneDateLinks = Array.from(\n                                        new Set(\n                                            locationOneDateLinks.map(\n                                                (a) => a.text\n                                            )\n                                        )\n                                    ).map((text) => {\n                                        return locationOneDateLinks.find(\n                                            (a) => a.text === text\n                                        );\n                                    });\n                                    selectionLinkLocationOneDate = (\n                                        <ApplyLinks\n                                            data={locationOneDateLinks}\n                                        />\n                                    );\n                                }\n                            });\n\n                            // Location 2 output\n                            locationsAll[1].map((fd) => {\n                                let methods = fd['options'][0]['options'];\n                                if (methods.length > 1) {\n                                    // Dates as buttons\n                                    return (\n                                        <li key={fd}>\n                                            <button>\n                                                <span\n                                                    data-date-src={fd}\n                                                    onClick={(e) => {\n                                                        let dateSrc = e.target.getAttribute(\n                                                            'data-date-src'\n                                                        );\n                                                        selectedDateValue = formatDate(\n                                                            dateSrc\n                                                        );\n                                                        selectedDateData = data.filter(\n                                                            (fd) =>\n                                                                fd.header ===\n                                                                dateSrc\n                                                        );\n                                                        filterMethodsData(\n                                                            selectedDateData[0][\n                                                                'options'\n                                                            ][0]['options']\n                                                        );\n                                                        setFirstStep(false);\n                                                    }}\n                                                >\n                                                    {formatDate(fd)}\n                                                </span>\n                                            </button>\n                                        </li>\n                                    );\n                                } else {\n                                    // Dates as links\n                                    const dateLink = {\n                                        text: formatDate(fd.header),\n                                        link:\n                                            fd['options'][0]['options'][0][\n                                                'options'\n                                            ]['apply'],\n                                    };\n                                    locationTwoDateLinks.push(dateLink);\n                                    locationTwoDateLinks = Array.from(\n                                        new Set(\n                                            locationTwoDateLinks.map(\n                                                (a) => a.text\n                                            )\n                                        )\n                                    ).map((text) => {\n                                        return locationTwoDateLinks.find(\n                                            (a) => a.text === text\n                                        );\n                                    });\n                                    selectionLinkLocationTwoDate = (\n                                        <ApplyLinks\n                                            data={locationTwoDateLinks}\n                                        />\n                                    );\n                                }\n                            });\n\n                            setSelectionHeadingLocationOne(\n                                <h3>\n                                    {locationsAll[0][0]['options'][0]['header']}\n                                </h3>\n                            );\n                            setSelectionButtonLocationOneDate(\n                                selectionButtonLocationOneDate\n                            );\n                            setSelectionLinkLocationOneDate(\n                                selectionLinkLocationOneDate\n                            );\n                            setSelectionHeadingLocationTwo(\n                                <h3>\n                                    {locationsAll[1][0]['options'][0]['header']}\n                                </h3>\n                            );\n                            setSelectionButtonLocationTwoDate(\n                                selectionButtonLocationTwoDate\n                            );\n                            setSelectionLinkLocationTwoDate(\n                                selectionLinkLocationTwoDate\n                            );\n\n                            // End multiple locations\n                        } else {\n                            // Single location, multiple dates\n                            if (locations.length > 1 || methods.length > 1) {\n                                // Single location, multiple dates, multiple methods => Dates as standard button; further options to follow\n                                dateButtons.push(d.header);\n                                dateButtons = dateButtons.reduce(function (\n                                    a,\n                                    i\n                                ) {\n                                    a.indexOf(i) === -1 ? a.push(i) : null;\n                                    return a;\n                                },\n                                []);\n                                buttonOptions = dateButtons.map((db) => {\n                                    return (\n                                        <li key={db}>\n                                            <button>\n                                                <span\n                                                    data-date-src={db}\n                                                    onClick={(e) => {\n                                                        let dateSrc = e.target.getAttribute(\n                                                            'data-date-src'\n                                                        );\n                                                        selectedDateValue = formatDate(\n                                                            dateSrc\n                                                        );\n                                                        selectedDateData = data.filter(\n                                                            (fd) =>\n                                                                fd.header ===\n                                                                dateSrc\n                                                        );\n                                                        filterMethodsData(\n                                                            selectedDateData[0][\n                                                                'options'\n                                                            ][0]['options']\n                                                        );\n                                                        setFirstStep(false);\n                                                    }}\n                                                >\n                                                    {formatDate(db)}\n                                                </span>\n                                            </button>\n                                        </li>\n                                    );\n                                });\n\n                                // Modal journey incomplete; display further steps pending indicator\n                                setFurtherStepsPendingIndicator(\n                                    furtherStepsPending\n                                );\n                            } else {\n                                // Single location, multiple dates, single method => Dates as links\n                                dateLinks.push(d.header);\n                                dateLinks = dateLinks.reduce(function (a, i) {\n                                    a.indexOf(i) === -1 ? a.push(i) : null;\n                                    return a;\n                                }, []);\n\n                                // Map each unique date and filter data to extract correct apply links\n                                const dateLinksData = [];\n                                dateLinks.map((lq) => {\n                                    let filteredDateData = data.filter(\n                                        (q) => q.header === lq\n                                    );\n                                    dateLink = {\n                                        text: formatDate(lq),\n                                        link:\n                                            filteredDateData[0]['options'][0][\n                                                'options'\n                                            ][0]['options']['apply'],\n                                    };\n                                    dateLinksData.push(dateLink);\n                                });\n                                linkOptions = (\n                                    <ApplyLinks data={dateLinksData} />\n                                );\n                                // Final modal step; remove further steps indicator\n                                setFurtherStepsPendingIndicator();\n                            }\n                        }\n                    } else {\n                        // Single date; move to methods function\n                        filterMethodsData(data[0]['options'][0]['options']);\n                    }\n                });\n            });\n        });\n\n        linkOptions ? setSelectionLinkDate(linkOptions) : null;\n        buttonOptions ? setSelectionButtonDate(buttonOptions) : null;\n    }\n\n    /**\n     * Completed programme filter. Analyse routes data.\n     *\n     * @param {object} data The filtered data record data, where routes are at the top level.\n     */\n    function filterRouteData(data) {\n        // Clear any previously rendered selection buttons/links from the state to prevent superfluous button/link rendering\n        clearSelectionOptions();\n\n        // Empty relevant state variables to remove superfluous progress navigation rendering\n        setProgressDate();\n        setProgressMethod();\n\n        // Clear data stored from previous selections\n        selectedRouteData = null;\n        selectedDateData = null;\n\n        // Variables scoped to this function\n        let buttonQuals = [],\n            linkRoutes = [],\n            routeLink,\n            buttonOptions,\n            linkOptions,\n            locationOptions = [],\n            qualNav;\n\n        // Progress indicator; display selected qualification value\n        selectedQualificationData\n            ? (qualNav = (\n                  <li className=\"how-to-apply--pgt--js__modal__progress__previous\">\n                      <button\n                          className=\"how-to-apply--pgt--js__modal__progress__wrapper\"\n                          onClick={() => {\n                              filterQualificationData(entryPoints);\n                          }}\n                      >\n                          <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                              <span\n                                  className=\"fas fa-check icon\"\n                                  aria-label=\"Back to choose qualification\"\n                              ></span>\n                          </span>\n                          <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                              {selectedQualificationValue}\n                          </span>\n                      </button>\n                  </li>\n              ))\n            : (qualNav = null);\n        setProgressQualification(qualNav);\n\n        data.map((s) => {\n            // Routes pre-selection prompt text\n            setWindowPrompt(promptRoute);\n            let dates = s['options'];\n            dates.map((d) => {\n                let locations = d['options'];\n                locations.map((l) => {\n                    let methods = l['options'];\n                    methods.map(() => {\n                        // Store each unique location value in an array\n                        locations.map((lo) => {\n                            locationOptions.push(lo.header);\n                        });\n                        locationOptions = locationOptions.reduce(function (\n                            a,\n                            i\n                        ) {\n                            a.indexOf(i) === -1 ? a.push(i) : null;\n                            return a;\n                        },\n                        []);\n                        if (data.length > 1) {\n                            // Route selection required: set progress indicator to route and remove dates/methods\n                            selectedRouteValue = (\n                                <li className=\"how-to-apply--pgt--js__modal__progress__current\">\n                                    <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                                        <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                                            <span className=\"fas fa-circle icon\"></span>\n                                        </span>\n                                        <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                                            Route\n                                        </span>\n                                    </span>\n                                </li>\n                            );\n                            setProgressRoute(selectedRouteValue);\n                            setProgressDate();\n                            setProgressMethod();\n\n                            if (\n                                dates.length > 1 ||\n                                locationOptions.length > 1 ||\n                                methods.length > 1\n                            ) {\n                                // Standard route button\n                                buttonQuals.push(s.header);\n                                buttonQuals = buttonQuals.reduce(function (\n                                    a,\n                                    i\n                                ) {\n                                    a.indexOf(i) === -1 ? a.push(i) : null;\n                                    return a;\n                                },\n                                []);\n                                buttonOptions = buttonQuals.map((bq) => {\n                                    return (\n                                        <li key={bq}>\n                                            <button>\n                                                <span\n                                                    onClick={(e) => {\n                                                        selectedRouteValue =\n                                                            e.target\n                                                                .textContent;\n                                                        selectedRouteData = data.filter(\n                                                            (sr) =>\n                                                                sr.header ===\n                                                                selectedRouteValue\n                                                        );\n                                                        filterDatesData(\n                                                            selectedRouteData[0][\n                                                                'options'\n                                                            ]\n                                                        );\n                                                        setFirstStep(false);\n                                                    }}\n                                                >\n                                                    {bq}\n                                                </span>\n                                            </button>\n                                        </li>\n                                    );\n                                });\n                                // Modal journey incomplete; display further steps pending indicator\n                                setFurtherStepsPendingIndicator(\n                                    furtherStepsPending\n                                );\n                            } else {\n                                // Route as link\n                                linkRoutes.push(s.header);\n                                linkRoutes = linkRoutes.reduce(function (a, i) {\n                                    a.indexOf(i) === -1 ? a.push(i) : null;\n                                    return a;\n                                }, []);\n\n                                // Map each unique route and filter data to extract correct apply links\n                                const routeLinksData = [];\n                                linkRoutes.map((lr) => {\n                                    let filteredRouteData = data.filter(\n                                        (q) => q.header === lr\n                                    );\n                                    routeLink = {\n                                        text: lr,\n                                        link:\n                                            filteredRouteData[0]['options'][0][\n                                                'options'\n                                            ][0]['options'][0]['options'][\n                                                'apply'\n                                            ],\n                                    };\n                                    routeLinksData.push(routeLink);\n                                });\n                                linkOptions = (\n                                    <ApplyLinks data={routeLinksData} />\n                                );\n                                // Final modal step; remove further steps indicator\n                                setFurtherStepsPendingIndicator();\n                            }\n                        } else {\n                            // Move to dates function\n                            filterDatesData(data[0]['options']);\n                        }\n                    });\n                });\n            });\n        });\n\n        // If route options and/or links exist, update state to render relevant JSX\n        buttonOptions ? setSelectionButtonRoute(buttonOptions) : null;\n        linkOptions ? setSelectionLinkRoute(linkOptions) : null;\n    }\n\n    /**\n     * Analyse programme data record data.\n     *\n     * @param {object} data The original data record data, where programmes are at the top level.\n     */\n    function filterQualificationData(data) {\n        // If qualification select exists, it will be the first step in the modal; disable 'Start again' option\n        setFirstStep(true);\n\n        // Qualification pre-selection prompt text\n        setWindowPrompt(promptQualification);\n\n        // Clear any previously rendered selection buttons/links from the state to prevent superfluous button/link rendering\n        clearSelectionOptions();\n\n        // Empty relevant state variables to remove superfluous progress navigation rendering\n        setProgressRoute();\n        setProgressDate();\n        setProgressMethod();\n\n        // Clear data stored from previous selections\n        selectedQualificationData = null;\n        selectedRouteData = null;\n        selectedDateData = null;\n\n        // Variables scoped to this function\n        let buttonQuals = [],\n            linkQuals = [],\n            buttonOptions,\n            linkOptions,\n            locationOptions = [];\n\n        if (data.length > 1) {\n            // Qualification selection required: set progress indicator to qualification and remove routes/dates/methods\n            selectedQualificationValue = (\n                <li className=\"how-to-apply--pgt--js__modal__progress__current\">\n                    <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                        <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                            <span className=\"fas fa-circle icon\"></span>\n                        </span>\n                        <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                            Qualification\n                        </span>\n                    </span>\n                </li>\n            );\n            setProgressQualification(selectedQualificationValue);\n        }\n\n        data.length > 1\n            ? data.map((e) => {\n                  let routeNames = e['options'];\n                  routeNames.map((s) => {\n                      let dates = s['options'];\n                      dates.map((d) => {\n                          let locations = d['options'];\n                          locations.map((l) => {\n                              let methods = l['options'];\n                              methods.map(() => {\n                                  // Store each unique location value in an array\n                                  locations.map((lo) => {\n                                      locationOptions.push(lo.header);\n                                  });\n                                  locationOptions = locationOptions.reduce(\n                                      function (a, i) {\n                                          a.indexOf(i) === -1\n                                              ? a.push(i)\n                                              : null;\n                                          return a;\n                                      },\n                                      []\n                                  );\n                                  if (data.length > 1) {\n                                      if (\n                                          routeNames.length > 1 ||\n                                          dates.length > 1 ||\n                                          locationOptions.length > 1 ||\n                                          methods.length > 1\n                                      ) {\n                                          buttonQuals.push(e.header);\n                                          buttonQuals = buttonQuals.reduce(\n                                              function (a, i) {\n                                                  a.indexOf(i) === -1\n                                                      ? a.push(i)\n                                                      : null;\n                                                  return a;\n                                              },\n                                              []\n                                          );\n                                          buttonOptions = buttonQuals.map(\n                                              (bq) => {\n                                                  return (\n                                                      <li key={bq}>\n                                                          <button>\n                                                              <span\n                                                                  onClick={(\n                                                                      e\n                                                                  ) => {\n                                                                      selectedQualificationValue =\n                                                                          e\n                                                                              .target\n                                                                              .innerText;\n                                                                      selectedQualificationData = data.filter(\n                                                                          (\n                                                                              qual\n                                                                          ) =>\n                                                                              qual.header ===\n                                                                              selectedQualificationValue\n                                                                      );\n                                                                      filterRouteData(\n                                                                          selectedQualificationData[0][\n                                                                              'options'\n                                                                          ]\n                                                                      );\n                                                                      setFirstStep(\n                                                                          false\n                                                                      );\n                                                                  }}\n                                                              >\n                                                                  {bq}\n                                                              </span>\n                                                          </button>\n                                                      </li>\n                                                  );\n                                              }\n                                          );\n                                          // Modal journey incomplete; display further steps pending indicator\n                                          setFurtherStepsPendingIndicator(\n                                              furtherStepsPending\n                                          );\n                                      } else {\n                                          linkQuals.push(e.header);\n                                          linkQuals = linkQuals.reduce(\n                                              function (a, i) {\n                                                  a.indexOf(i) === -1\n                                                      ? a.push(i)\n                                                      : null;\n                                                  return a;\n                                              },\n                                              []\n                                          );\n\n                                          // Map each unique qualification and filter data to extract correct apply links\n                                          const methodLinks = [];\n                                          linkQuals.map((lq) => {\n                                              let filteredQualData = data.filter(\n                                                  (q) => q.header === lq\n                                              );\n                                              const methodLink = {\n                                                  text: lq,\n                                                  link:\n                                                      filteredQualData[0][\n                                                          'options'\n                                                      ][0]['options'][0][\n                                                          'options'\n                                                      ][0]['options'][0][\n                                                          'options'\n                                                      ]['apply'],\n                                              };\n                                              methodLinks.push(methodLink);\n                                          });\n                                          linkOptions = (\n                                              <ApplyLinks data={methodLinks} />\n                                          );\n                                          // Move to end of function and use qualification variable? Similar approach to ternary operator used at end of dates function\n                                      }\n                                  }\n                              });\n                          });\n                      });\n                  });\n              })\n            : // One qualification; move to routes function\n              filterRouteData(entryPoints[0]['options']);\n\n        buttonOptions ? setSelectionButtonQualification(buttonOptions) : null;\n        linkOptions ? setSelectionLinkQualification(linkOptions) : null;\n    }\n\n    // Modal wrapper render\n    const question = 'qualification',\n        qualificationQuestion = question === 'qualification' && (\n            <>\n                <div className=\"how-to-apply--pgt--js__modal__content-wrapper\">\n                    <p>{windowPrompt}</p>\n                    {/* Different JSX needed when multiple locations present */}\n                    {!(\n                        selectionHeadingLocationOne ||\n                        selectionButtonLocationOneDate ||\n                        selectionLinkLocationOneDate ||\n                        selectionHeadingLocationTwo ||\n                        selectionButtonLocationTwoDate ||\n                        selectionLinkLocationTwoDate\n                    ) ? (\n                        <ul className=\"how-to-apply--pgt--js__options\">\n                            {selectionButtonQualification}\n                            {selectionLinkQualification}\n                            {selectionButtonRoute}\n                            {selectionLinkRoute}\n                            {selectionButtonDate}\n                            {selectionLinkDate}\n                            {selectionLinkMethod}\n                        </ul>\n                    ) : (\n                        <React.Fragment>\n                            <h3>{selectionHeadingLocationOne}</h3>\n                            <ul className=\"how-to-apply--pgt--js__options\">\n                                {selectionButtonLocationOneDate}\n                                {selectionLinkLocationOneDate}\n                            </ul>\n                            <h3>{selectionHeadingLocationTwo}</h3>\n                            <ul className=\"how-to-apply--pgt--js__options\">\n                                {selectionButtonLocationTwoDate}\n                                {selectionLinkLocationTwoDate}\n                            </ul>\n                        </React.Fragment>\n                    )}\n                </div>\n            </>\n        ),\n        alternative = props.element.dataset.otheryear &&\n            props.element.dataset.otherurl && (\n                <p className=\"how-to-apply--pgt--js__modal__alternative\">\n                    <a href={props.element.dataset.otherurl}>\n                        {props.element.dataset.otheryear} entry is also\n                        available.\n                    </a>\n                </p>\n            );\n    // End modal wrapper render\n\n    // Focus trap\n    const [focusTrap, setFocusTrap] = useState({});\n\n    let modalRef = null,\n        modalContentRef = null;\n    const getModal = () => modalRef,\n        getModalContent = () => modalContentRef;\n\n    useEffect(() => {\n        if (!focusTrap.activate) {\n            setFocusTrap(\n                createFocusTrap(getModalContent(), {\n                    initialFocus: getModalContent().querySelector(\n                        '.how-to-apply--pgt--js__options button, .how-to-apply--pgt--js__options a'\n                    ),\n                    onDeactivate: () => setModalVisible(false),\n                    clickOutsideDeactivates: true,\n                })\n            );\n        }\n\n        if (modalVisible) {\n            focusTrap.activate && focusTrap.activate();\n            disableBodyScroll(getModal());\n        } else {\n            focusTrap.deactivate && focusTrap.deactivate();\n            enableBodyScroll(getModal());\n        }\n    }, [modalVisible]);\n    // End focus trap\n\n    // Render the 'Apply now' CTA which launches the modal\n    return (\n        <>\n            <ul className=\"cta-block\">\n                <li className=\"cta-block__cta\">\n                    <button\n                        className=\"primary-cta-arrow--bright\"\n                        onClick={() => {\n                            setModalVisible(true);\n                            setFirstStep(true); // Don't show 'Start again' option on initial modal load\n                            clearSelectionOptions(); // Clear any previously rendered selection buttons/links from the state\n                            filterQualificationData(entryPoints);\n                        }}\n                    >\n                        <span>Apply now</span>\n                    </button>\n                </li>\n            </ul>\n            <div\n                className=\"how-to-apply--pgt--js__modal\"\n                data-open={modalVisible}\n                ref={(modal) => (modalRef = modal)}\n            >\n                <div\n                    className=\"how-to-apply--pgt--js__modal__content\"\n                    ref={(modalContent) => (modalContentRef = modalContent)}\n                >\n                    <button\n                        className=\"how-to-apply--pgt--js__close\"\n                        onClick={() => {\n                            focusTrap.deactivate && focusTrap.deactivate();\n                            enableBodyScroll(getModal());\n                            setModalVisible(false);\n                        }}\n                    >\n                        <span\n                            className=\"fas fa-times icon\"\n                            aria-label=\"Close\"\n                        ></span>\n                    </button>\n\n                    {/* Display 'Start again' reset if user is not in the modal's first selection screen */}\n                    {!firstStep ? (\n                        <div\n                            className=\"how-to-apply--pgt--js__modal__reset\"\n                            // style={{ display: 'block' }}\n                        >\n                            <button\n                                onClick={() => {\n                                    // Clear options display and render what user would see when modal is first opened\n                                    setFirstStep(true);\n                                    filterQualificationData(entryPoints);\n                                }}\n                            >\n                                <span className=\"fas fa-redo\"></span>{' '}\n                                <span>Start again</span>\n                            </button>\n                        </div>\n                    ) : null}\n                    <ol className=\"how-to-apply--pgt--js__modal__progress\">\n                        {progressQualification}\n                        {progressRoute}\n                        {progressDate}\n                        {progressMethod}\n                        {furtherStepsPendingIndicator}\n                    </ol>\n                    {/* <ol className=\"how-to-apply--pgt--js__modal__progress--mobile\">\n                        {progressQualification}\n                        {progressRoute}\n                        {progressDate}\n                        {progressMethod}\n                        {furtherStepsPendingIndicator}\n                    </ol> */}\n                    <div className=\"how-to-apply--pgt--js__modal__content-wrapper\">\n                        <h2>Start in {props.element.dataset.year}</h2>\n                    </div>\n                    {qualificationQuestion}\n                    <div className=\"how-to-apply--pgt--js__modal__content-wrapper\">\n                        {alternative}\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nHowToApply.propTypes = {\n    config: PropTypes.array,\n    element: PropTypes.object,\n};\n\nexport default HowToApply;\n","/**\n * Functions to retrieve how to apply configuration.\n *\n * @module pgt-data\n * @author Web Development\n * @copyright City, University of London 2020\n */\n\nimport { axiosRequest } from '../../util.js';\n\nconst timeout = 30000;\n\n/**\n * How to apply configuration.\n *\n * @param {string} url The HTA configuration file.\n * @return {Promise} - A promise of  configuration object.\n */\nexport function howToApplyConfig(url) {\n    const config = {\n        timeout: timeout,\n        url: url,\n    };\n\n    return axiosRequest(config);\n}\n","/**\n * Useful utility functions\n *\n * @module util\n * @author Web Development\n * @copyright City, University of London 2018-2020\n */\n\nimport axios from 'axios';\nimport React from 'react';\n\n/**\n * Turns string boolean into real boolean.\n *\n * @param {string} s - A string that may be 'true'.\n * @returns {boolean} True if 'true'.\n */\nexport function toBool(s) {\n    return s === 'true' ? true : false;\n}\n\nconst partialMatchFn = (m) => (s) => s.indexOf(m) < 0,\n    fullMatchFn = (m) => (s) => s !== m;\n\n/**\n * Remove a class name from an HTML element.\n *\n * @param {HTMLElement} elem - An HTML element.\n * @param {string} className - A string representing the class to remove.\n * @param {boolean} [removePartials] - If true, remove partially matching classes.\n */\nexport function removeClass(elem, className, removePartials) {\n    const matchFn = removePartials\n        ? partialMatchFn(className)\n        : fullMatchFn(className);\n    elem.className = elem.className\n        .split(/\\s+/)\n        .filter((s) => matchFn(s))\n        .join(' ');\n}\n\n/**\n * Detect whether reduced motion is enabled.\n *\n * If it is, you should shortcut animations, disable autoplay elements, avoid\n * smooth scrolling in favour of jump scrolling, etc.\n *\n * Currently unsupported by Chrome, but works in Safari and Firefox.\n *\n * @returns {boolean} Boolean indicating that the reduce motion media query matches.\n */\nexport function reduceMotion() {\n    const reducedMotionQuery = window.matchMedia(\n        '(prefers-reduced-motion: reduce)'\n    );\n    return reducedMotionQuery.matches ? true : false;\n}\n\n/**\n * Predicate testing whether an element is currently visible, as opposed to\n * displayed: none; or similar. Doesn't necessarily mean it's visible in the\n * window.\n *\n * @param {HTMLElement} elem - An HTML element.\n * @returns {boolean} - Is it visible?\n */\nexport function isVisible(elem) {\n    return elem.offsetHeight !== 0 && elem.offsetWidth !== 0 ? true : false;\n}\n\n/**\n * Predicate testing whether an element is positioned in the window.\n *\n *\n * @param {HTMLElement} elem - An HTML element.\n * @returns {boolean} - Is it onscreen?\n */\nexport function verticallyInWindow(elem) {\n    return elem.getBoundingClientRect().top >= 0 &&\n        elem.getBoundingClientRect().top <= window.innerHeight\n        ? true\n        : false;\n}\n\n/**\n * Turn a query string into an object.\n *\n * @param {string} parameterString - An HTML query string.\n * @returns {object} An object containing the parameters.\n */\nexport function parametersToObject(parameterString) {\n    const parameters = {};\n    parameterString\n        .substr(1)\n        .split('&')\n        .forEach((parameter) => {\n            const [k, v] = parameter.split('=');\n            parameters[k] = v;\n        });\n    return parameters;\n}\n\n/**\n * Turn an object into a query string.\n *\n * @param {object} parameterObj - An object containing the parameters and their values.\n * @returns {string} A string of the parameters.\n */\nexport function objectToParameters(parameterObj) {\n    if (Object.keys(parameterObj).length > 0) {\n        let parameters = '?';\n        for (const key in parameterObj) {\n            parameters.length !== 1 && (parameters += '&');\n            parameters += key + '=' + parameterObj[key];\n        }\n        return parameters;\n    } else {\n        return '';\n    }\n}\n\n/**\n * Track a Google Analytics event.\n *\n * @param {string} event - The event key for Tag Manager.\n * @param {string} eventCategory - The event category.\n * @param {string} eventAction - The event action.\n * @param {string} [eventLabel] - The event label.\n * @param {number} [eventValue] - The event value.\n * @param {boolean} [nonInteractionHit] - Does this count as interacting with the page?\n */\nexport function gaEvent(\n    event,\n    eventCategory,\n    eventAction,\n    eventLabel,\n    eventValue,\n    nonInteractionHit\n) {\n    window.dataLayer = window.dataLayer || [];\n    window.dataLayer.push({\n        event: event,\n        eventCategory: eventCategory,\n        eventAction: eventAction,\n        eventLabel: eventLabel,\n        eventValue: eventValue,\n        nonInteractionHit: nonInteractionHit,\n    });\n}\n\n/**\n * Append an array of elements to an element.\n *\n * @param {HTMLElement} elem - The parent element.\n * @param {HTMLElement[]} children - An array of elements to append to it.\n */\nexport function appendAll(elem, children) {\n    children.forEach((child) => elem.appendChild(child));\n}\n\n/**\n * Extract number from string, e.g. return '123' from string 'a1b2c3'.\n *\n * @param {string} string - String\n */\nexport function numberFromString(string) {\n    let number = string.replace(/\\D/g, '');\n    return number;\n}\n\n/**\n * Calculates viewport width to determinte if using mobile\n * @param {number} number - width of screen, with default value = 432.\n *\n */\nexport function isMobile(screen = 432) {\n    const viewPortWidth = window.innerWidth;\n    const mobileScreen = screen;\n\n    if (viewPortWidth < mobileScreen) {\n        return true;\n    }\n}\n\n/**\n *\n * Turn DOM elements to array e.g return [li, li, li] from DOM element selecting 'li' <ul><li></li><li></li><li></li></ul>\n *\n * @param {object} object - Object\n */\n\nexport function toArray(obj) {\n    let array = [];\n    // iterate backwards ensuring that length is an UInt32\n    for (let i = obj.length >>> 0; i--; ) {\n        array[i] = obj[i];\n    }\n    return array;\n}\n\n/**\n * Check browser user agent is IE or edge and return version number\n */\nexport function detectIE() {\n    const ua = window.navigator.userAgent,\n        versionLength = 10,\n        msie = ua.indexOf('MSIE '),\n        msieVersionOffset = 5;\n\n    if (msie > 0) {\n        // IE 10 or older => return version number\n        return parseInt(\n            ua.substring(msie + msieVersionOffset, ua.indexOf('.', msie)),\n            versionLength\n        );\n    }\n\n    const trident = ua.indexOf('Trident/'),\n        tridentVersionOffset = 3;\n\n    if (trident > 0) {\n        // IE 11 => return version number\n        let rv = ua.indexOf('rv:');\n        return parseInt(\n            ua.substring(rv + tridentVersionOffset, ua.indexOf('.', rv)),\n            versionLength\n        );\n    }\n\n    const edge = ua.indexOf('Edge/'),\n        edgeVersionOffset = 5;\n\n    if (edge > 0) {\n        // Edge (IE 12+) => return version number\n        return parseInt(\n            ua.substring(edge + edgeVersionOffset, ua.indexOf('.', edge)),\n            versionLength\n        );\n    }\n\n    // other browser\n    return false;\n}\n\n/**\n * Check if browser supports IntersectionObserver API\n *\n * @returns {Boolean} -\n */\nexport function checkIntersectionObserver() {\n    if (\n        'IntersectionObserver' in window &&\n        'IntersectionObserverEntry' in window &&\n        'intersectionRatio' in window.IntersectionObserverEntry.prototype\n    ) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n/**\n * Create elements containing classes, content and any other attributes\n *\n * @param {string} type - Type of element to create, e.g. \"div\", \"button\".\n * @param {array} attributes - Array of objects specifying which attributes to assign to the element i.e. {label : \"class\", val : \"container\"}\n */\nexport function createHTMLElement(type, attributes) {\n    let el = document.createElement(type);\n    attributes.map(function (att) {\n        att.label === 'content'\n            ? el.appendChild(document.createTextNode(att.val))\n            : el.setAttribute(att.label, att.val);\n    });\n    return el;\n}\n\nexport function uppercaseFirstLetterLowercaseRest(s) {\n    return s.charAt(0).toUpperCase() + s.slice(1).toLowerCase();\n}\n\n/**\n * Asynchronous request to Funnelback web service.\n *\n * @param {object} config An axios configuration object.\n * @return {Promise} - A promise of a Funnelback response.\n */\nexport function axiosRequest(config) {\n    const httpOK = 200;\n\n    return axios(config)\n        .then((response) => {\n            if (httpOK === response.status) {\n                return response.data;\n            } else {\n                throw `Bad response: ${response.status}`;\n            }\n        })\n        .catch((e) => {\n            if (!axios.isCancel(e)) {\n                gaEvent(\n                    'jsError',\n                    'JavaScript error',\n                    `Line ${e.lineNumber} – ${e.message}`,\n                    `axiosRequest ${e.fileName} (${window.location})`,\n                    true\n                );\n            }\n        });\n}\n\n/**\n * Returns the correct English suffix for a number.\n *\n * @param  {number} day - The day of the month.\n * @returns {string} The correct suffix.\n */\nfunction daySuffix(day) {\n    const eleventh = 11,\n        thirteenth = 13,\n        lastDigit = day.toString().slice(-1);\n\n    return day >= eleventh || day <= thirteenth\n        ? 'th'\n        : lastDigit === '1'\n        ? 'st'\n        : lastDigit === '2'\n        ? 'nd'\n        : lastDigit === '3'\n        ? 'rd'\n        : 'th';\n}\n\n/**\n * Format a date for React.\n *\n * @param {Date} date - A date object.\n * @returns {ReactFragment} The formatted date.\n */\nexport function formatReactDate(date) {\n    const months = [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December',\n        ],\n        days = [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday',\n        ];\n\n    return (\n        <time dateTime={date.toISOString().split('T')[0]}>\n            {days[date.getUTCDay()]}, {date.getUTCDate()}\n            <sup>{daySuffix(date.getUTCDate())}</sup>{' '}\n            {months[date.getUTCMonth()]} {date.getUTCFullYear()}\n        </time>\n    );\n}\n\n/**\n * Array slicer\n *\n * @param {array} arr - array to be split up into subarrays\n * @param {number} len - max number items that goes into each subarray\n */\nexport function arraySlicer(arr, len) {\n    let newArray = [],\n        i = 0,\n        n = arr.length;\n\n    while (i < n) {\n        newArray.push(arr.slice(i, (i += len)));\n    }\n    return newArray;\n}\n"],"sourceRoot":""}