{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/how-to-apply--pgt.js","webpack:///./src/patterns/how-to-apply/buttons/apply.js","webpack:///./src/patterns/how-to-apply/how-to-apply--pgt.js","webpack:///./src/patterns/how-to-apply/pgt-data.js","webpack:///./src/util.js"],"names":["document","addEventListener","test","navigator","userAgent","howToApplyCTAs","querySelectorAll","Array","from","forEach","howToApply","howToApplyConfig","dataset","config","then","render","edn","ApplyLinks","props","data","map","d","index","text","months","formatDate","sourceDate","formattedDate","Date","getUTCMonth","getUTCFullYear","HowToApply","entryPoints","initialPreferences","qualification","Object","keys","length","subject","entry","location","modalVisible","setModalVisible","useState","preferences","setPreferences","firstStep","setFirstStep","windowPrompt","setWindowPrompt","selection","setSelection","btnSelection","setBtnSelection","dateSelection","setDateSelection","linkSelection","setLinkSelection","methodSelection","setMethodSelection","promptQualification","promptRoute","promptEntryPoint","promptMethod","filterMethodsData","methods","methodLinks","linkOptions","m","methodLink","header","link","options","apply","push","filterDatesData","buttonOptions","dateLinks","dateButtons","locations","l","reduce","a","i","indexOf","db","e","dateSrc","target","getAttribute","filteredData","filter","fd","dateLink","filterSubjectData","buttonQuals","linkQuals","s","dates","bq","btnEl","querySelector","subjectVal","textContent","subj","lq","filterQualificationData","subjectNames","qualBtn","qualVal","filteredQualData","qual","q","question","qualificationQuestion","qualificationsProgress","newPreferences","entryPointsProgress","nextStep","qualificationsProgressMobile","nextStepMobile","alternative","element","otheryear","otherurl","focusTrap","setFocusTrap","modalRef","modalContentRef","getModal","getModalContent","useEffect","activate","createFocusTrap","initialFocus","onDeactivate","clickOutsideDeactivates","disableBodyScroll","deactivate","enableBodyScroll","modal","modalContent","display","year","propTypes","PropTypes","array","object","timeout","url","axiosRequest","toBool","partialMatchFn","fullMatchFn","removeClass","elem","className","removePartials","matchFn","split","join","reduceMotion","reducedMotionQuery","window","matchMedia","matches","isVisible","offsetHeight","offsetWidth","verticallyInWindow","getBoundingClientRect","top","innerHeight","parametersToObject","parameterString","parameters","substr","parameter","k","v","objectToParameters","parameterObj","key","gaEvent","event","eventCategory","eventAction","eventLabel","eventValue","nonInteractionHit","dataLayer","appendAll","children","child","appendChild","numberFromString","string","number","replace","isMobile","screen","viewPortWidth","innerWidth","mobileScreen","toArray","obj","detectIE","ua","versionLength","msie","msieVersionOffset","parseInt","substring","trident","tridentVersionOffset","rv","edge","edgeVersionOffset","checkIntersectionObserver","IntersectionObserverEntry","prototype","createHTMLElement","type","attributes","el","createElement","att","label","createTextNode","val","setAttribute","uppercaseFirstLetterLowercaseRest","charAt","toUpperCase","slice","toLowerCase","httpOK","axios","response","status","catch","isCancel","lineNumber","message","fileName","daySuffix","day","eleventh","thirteenth","lastDigit","toString","formatReactDate","date","days","toISOString","getUTCDay","getUTCDate","arraySlicer","arr","len","newArray","n"],"mappings":"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","file":"how-to-apply--pgt.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"how-to-apply--pgt\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([6,\"vendor-dependencies\",\"core\",\"react\",\"axios\",\"vendor-direct\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/**\n * How to apply PGT entry\n *\n * @author Web Development\n * @copyright City, University of London 2020\n */\nimport React from 'react';\nimport { render } from 'react-dom';\nimport HowToApply from './patterns/how-to-apply/how-to-apply--pgt';\nimport { howToApplyConfig } from './patterns/how-to-apply/pgt-data';\nimport edn from 'edn-to-js';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    if (/(Trident|MSIE)/.test(navigator.userAgent)) {\n        return;\n    } else {\n        const howToApplyCTAs = document.querySelectorAll(\n            '.how-to-apply--pgt--js'\n        );\n        howToApplyCTAs &&\n            Array.from(howToApplyCTAs).forEach(howToApply => {\n                howToApplyConfig(howToApply.dataset.config).then(config => {\n                    render(\n                        <HowToApply\n                            config={edn(config)}\n                            element={howToApply}\n                        />,\n                        howToApply\n                    );\n                });\n            });\n    }\n});\n","import React from 'react';\n\nexport default function ApplyLinks(props) {\n    if (props.data) {\n        return props.data.map((d, index) => {\n            return (\n                <li key={index} className=\"apply\">\n                    <a href={d['link']}>\n                        {/* <span>{props.btnText ? props.btnText : d.header}</span> */}\n                        <span>{d.text}</span>\n                        &nbsp;\n                        <span\n                            className=\"far fa-external-link\"\n                            aria-label=\"(external link)\"\n                        />\n                    </a>\n                </li>\n            );\n        });\n    }\n}\n","/**\n * How to apply for postgraduate taught degrees\n *\n * Don't run this via patterns.js, it's a separate compilation.\n *\n * @module patterns/how-to-apply/how-to-apply--pgt\n * @author Web Development\n * @copyright City, University of London 2020\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\n\nimport ApplyLinks from './buttons/apply';\nimport PropTypes from 'prop-types';\nimport createFocusTrap from 'focus-trap';\n\nconst months = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n];\n\nfunction formatDate(sourceDate) {\n    let formattedDate = new Date(sourceDate);\n    return `${\n        months[formattedDate.getUTCMonth()]\n    } ${formattedDate.getUTCFullYear()}`;\n}\n\n/**\n * Launch the how to apply modal.\n *\n * @param {object} props The JSON configuration file for the modal.\n * @return {object} The React component to render.\n */\nfunction HowToApply(props) {\n    let entryPoints = props.config;\n    const initialPreferences = {\n            qualification:\n                Object.keys(entryPoints).length === 1\n                    ? Object.keys(entryPoints[0])[0]\n                    : null,\n            subject: null,\n            entry: null,\n            location: null,\n        },\n        [modalVisible, setModalVisible] = useState(false),\n        [preferences, setPreferences] = useState(initialPreferences),\n        [firstStep, setFirstStep] = useState(false), // Controls 'Start again' visibility\n        [windowPrompt, setWindowPrompt] = useState(\n            'Choose the qualification you wish to apply for:'\n        );\n    let [selection, setSelection] = useState();\n    let [btnSelection, setBtnSelection] = useState();\n    let [dateSelection, setDateSelection] = useState();\n    let [linkSelection, setLinkSelection] = useState();\n    let [methodSelection, setMethodSelection] = useState();\n    // let [initialSelection, setInitialSelection] = useState();\n    // let [qualificationSelect, setQualificationSelect] = useState(false);\n    // let options = document.querySelector('.how-to-apply--pgt--js__options'),\n    let promptQualification = 'Choose the qualification you wish to apply for:',\n        promptRoute = 'Choose the route you wish to apply for:',\n        promptEntryPoint = 'Choose the entry point you wish to apply for:',\n        promptMethod = 'Apply online now:';\n\n    function filterMethodsData(methods) {\n        setWindowPrompt(promptMethod);\n        setDateSelection();\n        setBtnSelection();\n        setLinkSelection();\n\n        let methodLinks = [];\n        let linkOptions;\n\n        methods.map((m) => {\n            const methodLink = {\n                text: m.header,\n                link: m.options.apply,\n            };\n            methodLinks.push(methodLink);\n            linkOptions = <ApplyLinks data={methodLinks} />;\n            setMethodSelection(linkOptions);\n        });\n    }\n\n    /**\n     * Completed programme and subject filter. Analyse dates data.\n     *\n     * @param {object} data The filtered data record data, where dates are at the top level.\n     */\n    function filterDatesData(data) {\n        setWindowPrompt(promptEntryPoint);\n        setBtnSelection();\n        setLinkSelection();\n\n        let buttonOptions;\n        let linkOptions;\n        let dateLinks = [];\n        let dateButtons = [];\n\n        data.map((d) => {\n            let locations = d['options'];\n            locations.map((l) => {\n                let methods = l['options'];\n                methods.map((m) => {\n                    // Multiple dates; print buttons\n                    if (data.length > 1) {\n                        if (locations.length > 1 || methods.length > 1) {\n                            // Dates as standard button; further options to follow\n                            dateButtons.push(d.header);\n                            dateButtons = dateButtons.reduce(function (a, i) {\n                                a.indexOf(i) === -1 ? a.push(i) : null;\n                                return a;\n                            }, []);\n                            buttonOptions = dateButtons.map((db) => {\n                                return (\n                                    <li key={db}>\n                                        <button\n                                            data-date-src={db}\n                                            onClick={(e) => {\n                                                let dateSrc = e.target.getAttribute(\n                                                    'data-date-src'\n                                                );\n                                                let filteredData = data.filter(\n                                                    (fd) =>\n                                                        fd.header === dateSrc\n                                                );\n                                                filterMethodsData(\n                                                    filteredData[0][\n                                                        'options'\n                                                    ][0]['options']\n                                                );\n                                            }}\n                                        >\n                                            <span\n                                                data-date-src={db}\n                                                onClick={(e) => {\n                                                    let dateSrc = e.target.getAttribute(\n                                                        'data-date-src'\n                                                    );\n                                                    let filteredData = data.filter(\n                                                        (fd) =>\n                                                            fd.header ===\n                                                            dateSrc\n                                                    );\n                                                    filterMethodsData(\n                                                        filteredData[0][\n                                                            'options'\n                                                        ][0]['options']\n                                                    );\n                                                }}\n                                            >\n                                                {formatDate(db)}\n                                            </span>\n                                        </button>\n                                    </li>\n                                );\n                            });\n                            setDateSelection(buttonOptions);\n                        } else {\n                            // Dates as link buttons; no further options to follow\n                            const dateLink = {\n                                text: formatDate(d.header),\n                                link: m.options.apply,\n                            };\n                            dateLinks.push(dateLink);\n                            linkOptions = <ApplyLinks data={dateLinks} />;\n                        }\n                    } else {\n                        filterMethodsData(data[0]['options'][0]['options']);\n                    }\n                });\n            });\n        });\n\n        setLinkSelection(linkOptions);\n        setBtnSelection(buttonOptions);\n    }\n\n    function filterSubjectData(data) {\n        setBtnSelection();\n        setLinkSelection();\n\n        let buttonQuals = [];\n        let linkQuals = [];\n        let buttonOptions;\n        let linkOptions;\n\n        data.map((s) => {\n            setWindowPrompt(promptRoute);\n            let dates = s['options'];\n            dates.map((d) => {\n                let locations = d['options'];\n                locations.map((l) => {\n                    let methods = l['options'];\n                    methods.map(() => {\n                        if (data.length > 1) {\n                            if (\n                                dates.length > 1 ||\n                                locations.length > 1 ||\n                                methods.length > 1\n                            ) {\n                                // Standard subject button\n                                buttonQuals.push(s.header);\n                                buttonQuals = buttonQuals.reduce(function (\n                                    a,\n                                    i\n                                ) {\n                                    a.indexOf(i) === -1 ? a.push(i) : null;\n                                    return a;\n                                },\n                                []);\n                                buttonOptions = buttonQuals.map((bq) => {\n                                    return (\n                                        <li key={bq}>\n                                            <button\n                                                onClick={(e) => {\n                                                    let btnEl = e.target.querySelector(\n                                                        'span'\n                                                    );\n                                                    let subjectVal =\n                                                        btnEl.textContent;\n                                                    let filteredData = data.filter(\n                                                        (subj) =>\n                                                            subj.header ===\n                                                            subjectVal\n                                                    );\n                                                    filterDatesData(\n                                                        filteredData[0][\n                                                            'options'\n                                                        ]\n                                                    );\n                                                }}\n                                            >\n                                                <span\n                                                    onClick={(e) => {\n                                                        let subjectVal =\n                                                            e.target\n                                                                .textContent;\n                                                        let filteredData = data.filter(\n                                                            (subj) =>\n                                                                subj.header ===\n                                                                subjectVal\n                                                        );\n                                                        filterDatesData(\n                                                            filteredData[0][\n                                                                'options'\n                                                            ]\n                                                        );\n                                                    }}\n                                                >\n                                                    {bq}\n                                                </span>\n                                            </button>\n                                        </li>\n                                    );\n                                });\n                                setBtnSelection(buttonOptions);\n                            } else {\n                                // Route as link\n                                linkQuals.push(s.header);\n                                linkQuals = linkQuals.reduce(function (a, i) {\n                                    a.indexOf(i) === -1 ? a.push(i) : null;\n                                    return a;\n                                }, []);\n                                linkOptions = linkQuals.map((lq) => {\n                                    return (\n                                        <ApplyLinks\n                                            key={lq}\n                                            data={methods}\n                                            btnText={lq}\n                                        />\n                                    );\n                                });\n                                setLinkSelection(linkOptions);\n                            }\n                        } else {\n                            // Move to dates function\n                            filterDatesData(data[0]['options']);\n                        }\n                    });\n                });\n            });\n        });\n\n        setBtnSelection(buttonOptions);\n        setLinkSelection(linkOptions);\n    }\n\n    function filterQualificationData(data) {\n        setWindowPrompt(promptQualification);\n        setDateSelection();\n        setMethodSelection();\n        setBtnSelection();\n        setLinkSelection();\n\n        let buttonQuals = [];\n        let linkQuals = [];\n        let buttonOptions;\n        let linkOptions;\n        data.length > 1\n            ? data.map((e) => {\n                  let subjectNames = e['options'];\n                  subjectNames.map((s) => {\n                      let dates = s['options'];\n                      dates.map((d) => {\n                          let locations = d['options'];\n                          locations.map((l) => {\n                              let methods = l['options'];\n                              methods.map(() => {\n                                  if (data.length > 1) {\n                                      if (\n                                          subjectNames.length > 1 ||\n                                          dates.length > 1 ||\n                                          locations.length > 1 ||\n                                          methods.length > 1\n                                      ) {\n                                          buttonQuals.push(e.header);\n                                          buttonQuals = buttonQuals.reduce(\n                                              function (a, i) {\n                                                  a.indexOf(i) === -1\n                                                      ? a.push(i)\n                                                      : null;\n                                                  return a;\n                                              },\n                                              []\n                                          );\n                                          buttonOptions = buttonQuals.map(\n                                              (bq) => {\n                                                  return (\n                                                      <li key={bq}>\n                                                          <button\n                                                              onClick={(e) => {\n                                                                  let qualBtn = e.target.querySelector(\n                                                                      'span'\n                                                                  );\n                                                                  let qualVal =\n                                                                      qualBtn.textContent;\n                                                                  let filteredQualData = data.filter(\n                                                                      (qual) =>\n                                                                          qual.header ===\n                                                                          qualVal\n                                                                  );\n                                                                  filterSubjectData(\n                                                                      filteredQualData[0][\n                                                                          'options'\n                                                                      ]\n                                                                  );\n                                                              }}\n                                                          >\n                                                              <span\n                                                                  onClick={(\n                                                                      e\n                                                                  ) => {\n                                                                      let qualVal =\n                                                                          e\n                                                                              .target\n                                                                              .textContent;\n                                                                      let filteredQualData = data.filter(\n                                                                          (\n                                                                              qual\n                                                                          ) =>\n                                                                              qual.header ===\n                                                                              qualVal\n                                                                      );\n                                                                      filterSubjectData(\n                                                                          filteredQualData[0][\n                                                                              'options'\n                                                                          ]\n                                                                      );\n                                                                  }}\n                                                              >\n                                                                  {bq}\n                                                              </span>\n                                                          </button>\n                                                      </li>\n                                                  );\n                                              }\n                                          );\n                                          setBtnSelection(buttonOptions);\n                                      } else {\n                                          linkQuals.push(e.header);\n                                          linkQuals = linkQuals.reduce(\n                                              function (a, i) {\n                                                  a.indexOf(i) === -1\n                                                      ? a.push(i)\n                                                      : null;\n                                                  return a;\n                                              },\n                                              []\n                                          );\n\n                                          // Map each unique qualification and filter data to extract correct apply links\n                                          const methodLinks = [];\n                                          linkQuals.map((lq) => {\n                                              let filteredQualData = data.filter(\n                                                  (q) => q.header === lq\n                                              );\n                                              const methodLink = {\n                                                  text: lq,\n                                                  link:\n                                                      filteredQualData[0][\n                                                          'options'\n                                                      ][0]['options'][0][\n                                                          'options'\n                                                      ][0]['options'][0][\n                                                          'options'\n                                                      ]['apply'],\n                                              };\n                                              methodLinks.push(methodLink);\n                                          });\n                                          linkOptions = (\n                                              <ApplyLinks data={methodLinks} />\n                                          );\n                                          setLinkSelection(linkOptions);\n                                      }\n                                  }\n                              });\n                          });\n                      });\n                  });\n              })\n            : // One qualification; move to subjects function\n              filterSubjectData(entryPoints[0]['options']);\n    }\n\n    const question = 'qualification',\n        // [multipleSubjects, setMultipleSubjects] = useState(true),\n        // [multipleEntryPoints, setMultipleEntryPoints] = useState(true),\n        // [multipleLocations, setMultipleLocations] = useState(true),\n        qualificationQuestion = question === 'qualification' && (\n            <>\n                <div className=\"how-to-apply--pgt--js__modal__content-wrapper\">\n                    <p>{windowPrompt}</p>\n                    {selection}\n                    <ul className=\"how-to-apply--pgt--js__options\">\n                        {dateSelection}\n                        {methodSelection}\n                        {btnSelection}\n                        {linkSelection}\n                    </ul>\n                    {/* {initialSelection} */}\n                </div>\n            </>\n        ),\n        qualificationsProgress =\n            Object.keys(entryPoints).length > 1 ? (\n                question === 'qualification' ? (\n                    <li className=\"how-to-apply--pgt--js__modal__progress__current\">\n                        <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                            <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                                <span className=\"fas fa-circle icon\"></span>\n                            </span>\n                            <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                                Qualification\n                            </span>\n                        </span>\n                    </li>\n                ) : preferences.qualification ? (\n                    <li className=\"how-to-apply--pgt--js__modal__progress__previous\">\n                        <button\n                            className=\"how-to-apply--pgt--js__modal__progress__wrapper\"\n                            onClick={() => {\n                                const newPreferences = preferences;\n\n                                newPreferences.qualification = null;\n                                newPreferences.subject = null;\n                                newPreferences.entry = null;\n                                newPreferences.location = null;\n\n                                setPreferences(newPreferences);\n                                // setQuestion(\n                                //     nextQuestion(newPreferences, entryPoints)\n                                // );\n                            }}\n                        >\n                            <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                                <span\n                                    className=\"fas fa-check icon\"\n                                    aria-label=\"Back to choose qualification\"\n                                ></span>\n                            </span>\n                            <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                                {preferences.qualification}\n                            </span>\n                        </button>\n                    </li>\n                ) : null\n            ) : null,\n        // subjectsProgress = multipleSubjects ? (\n        //     question === 'subject' ? (\n        //         <li className=\"how-to-apply--pgt--js__modal__progress__current\">\n        //             <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n        //                 <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n        //                     <span className=\"fas fa-circle icon\"></span>\n        //                 </span>\n        //                 <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n        //                     Route\n        //                 </span>\n        //             </span>\n        //         </li>\n        //     ) : preferences.subject ? (\n        //         <li className=\"how-to-apply--pgt--js__modal__progress__previous\">\n        //             <button\n        //                 className=\"how-to-apply--pgt--js__modal__progress__wrapper\"\n        //                 onClick={() => {\n        //                     const newPreferences = preferences;\n\n        //                     newPreferences.subject = null;\n        //                     newPreferences.entry = null;\n        //                     newPreferences.location = null;\n\n        //                     setPreferences(newPreferences);\n        //                     // setQuestion(\n        //                     //     nextQuestion(newPreferences, entryPoints)\n        //                     // );\n        //                 }}\n        //             >\n        //                 <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n        //                     <span\n        //                         className=\"fas fa-check icon\"\n        //                         aria-label=\"Back to choose study route\"\n        //                     ></span>\n        //                 </span>\n        //                 <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n        //                     {preferences.subject}\n        //                 </span>\n        //             </button>\n        //         </li>\n        //     ) : null\n        // ) : null,\n        entryPointsProgress =\n            // multipleEntryPoints ? (\n            question === 'entry' ? (\n                <li className=\"how-to-apply--pgt--js__modal__progress__current\">\n                    <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                        <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                            <span className=\"fas fa-circle icon\"></span>\n                        </span>\n                        <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                            Entry point\n                        </span>\n                    </span>\n                </li>\n            ) : preferences.entry ? (\n                <li className=\"how-to-apply--pgt--js__modal__progress__previous\">\n                    <button\n                        className=\"how-to-apply--pgt--js__modal__progress__wrapper\"\n                        onClick={() => {\n                            const newPreferences = preferences;\n\n                            newPreferences.entry = null;\n                            newPreferences.location = null;\n\n                            setPreferences(newPreferences);\n                            // setQuestion(\n                            //     nextQuestion(newPreferences, entryPoints)\n                            // );\n                        }}\n                    >\n                        <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                            <span\n                                className=\"fas fa-check icon\"\n                                aria-label=\"Back to choose entry point\"\n                            ></span>\n                        </span>\n                        <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                            {months[new Date(preferences.entry).getUTCMonth()]}{' '}\n                            {new Date(preferences.entry).getUTCFullYear()}\n                        </span>\n                    </button>\n                </li>\n            ) : // ) : null\n            null,\n        // locationsProgress = multipleLocations ? (\n        //     question === 'location' ? (\n        //         <li className=\"how-to-apply--pgt--js__modal__progress__current\">\n        //             <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n        //                 <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n        //                     <span className=\"fas fa-circle icon\"></span>\n        //                 </span>\n        //                 <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n        //                     Location\n        //                 </span>\n        //             </span>\n        //         </li>\n        //     ) : preferences.location ? (\n        //         <li className=\"how-to-apply--pgt--js__modal__progress__previous\">\n        //             <button\n        //                 className=\"how-to-apply--pgt--js__modal__progress__wrapper\"\n        //                 onClick={() => {\n        //                     const newPreferences = preferences;\n\n        //                     newPreferences.location = null;\n\n        //                     setPreferences(newPreferences);\n        //                     // setQuestion(\n        //                     //     nextQuestion(newPreferences, entryPoints)\n        //                     // );\n        //                 }}\n        //             >\n        //                 <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n        //                     <span\n        //                         className=\"fas fa-check icon\"\n        //                         aria-label=\"Back to choose location\"\n        //                     ></span>\n        //                 </span>\n        //                 <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n        //                     {preferences.location}\n        //                 </span>\n        //             </button>\n        //         </li>\n        //     ) : null\n        // ) : null,\n        nextStep =\n            question !== 'apply' ? (\n                <li className=\"how-to-apply--pgt--js__modal__progress__next\">\n                    <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                        <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                            <span\n                                className=\"fas fa-circle icon\"\n                                aria-hidden=\"true\"\n                            ></span>\n                        </span>\n                    </span>\n                </li>\n            ) : (\n                <li className=\"how-to-apply--pgt--js__modal__progress__current how-to-apply--pgt--js__modal__progress__last\">\n                    <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                        <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                            <span className=\"fas fa-circle icon\"></span>\n                        </span>\n                        <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                            Method of study\n                        </span>\n                    </span>\n                </li>\n            ),\n        qualificationsProgressMobile =\n            Object.keys(entryPoints).length > 1 &&\n            (question === 'qualification' || preferences.qualification) ? (\n                <li\n                    className={\n                        question === 'qualification'\n                            ? 'how-to-apply--pgt--js__modal__progress__current'\n                            : 'how-to-apply--pgt--js__modal__progress__previous'\n                    }\n                >\n                    <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                        <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                            <span\n                                className={\n                                    question === 'qualification'\n                                        ? 'fas fa-circle icon'\n                                        : 'fas fa-check icon'\n                                }\n                            ></span>\n                        </span>\n                        {question === 'qualification' && (\n                            <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                                Qualification\n                            </span>\n                        )}\n                    </span>\n                </li>\n            ) : null,\n        // subjectsProgressMobile =\n        //     multipleSubjects &&\n        //     (question === 'subject' || preferences.subject) ? (\n        //         <li\n        //             className={\n        //                 question === 'subject'\n        //                     ? 'how-to-apply--pgt--js__modal__progress__current'\n        //                     : 'how-to-apply--pgt--js__modal__progress__previous'\n        //             }\n        //         >\n        //             <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n        //                 <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n        //                     <span\n        //                         className={\n        //                             question === 'subject'\n        //                                 ? 'fas fa-circle icon'\n        //                                 : 'fas fa-check icon'\n        //                         }\n        //                     ></span>\n        //                 </span>\n        //                 {question === 'subject' && (\n        //                     <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n        //                         Subject\n        //                     </span>\n        //                 )}\n        //             </span>\n        //         </li>\n        //     ) : null,\n        // entryPointsProgressMobile =\n        // multipleEntryPoints &&\n        // question === 'entry' || preferences.entry ? (\n        //     <li\n        //         className={\n        //             question === 'entry'\n        //                 ? 'how-to-apply--pgt--js__modal__progress__current'\n        //                 : 'how-to-apply--pgt--js__modal__progress__previous'\n        //         }\n        //     >\n        //         <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n        //             <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n        //                 <span\n        //                     className={\n        //                         question === 'entry'\n        //                             ? 'fas fa-circle icon'\n        //                             : 'fas fa-check icon'\n        //                     }\n        //                 ></span>\n        //             </span>\n        //             {question === 'entry' && (\n        //                 <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n        //                     Entry point\n        //                 </span>\n        //             )}\n        //         </span>\n        //     </li>\n        // ) : null,\n        // locationsProgressMobile =\n        //     multipleLocations &&\n        //     (question === 'location' || preferences.location) ? (\n        //         <li\n        //             className={\n        //                 question === 'location'\n        //                     ? 'how-to-apply--pgt--js__modal__progress__current'\n        //                     : 'how-to-apply--pgt--js__modal__progress__previous'\n        //             }\n        //         >\n        //             <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n        //                 <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n        //                     <span\n        //                         className={\n        //                             question === 'location'\n        //                                 ? 'fas fa-circle icon'\n        //                                 : 'fas fa-check icon'\n        //                         }\n        //                     ></span>\n        //                 </span>\n        //                 {question === 'location' && (\n        //                     <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n        //                         Location\n        //                     </span>\n        //                 )}\n        //             </span>\n        //         </li>\n        //     ) : null,\n        nextStepMobile =\n            question !== 'apply' ? (\n                <li className=\"how-to-apply--pgt--js__modal__progress__next\">\n                    <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                        <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                            <span className=\"fas fa-circle icon\"></span>\n                        </span>\n                    </span>\n                </li>\n            ) : (\n                <li className=\"how-to-apply--pgt--js__modal__progress__current how-to-apply--pgt--js__modal__progress__last\">\n                    <span className=\"how-to-apply--pgt--js__modal__progress__wrapper\">\n                        <span className=\"how-to-apply--pgt--js__modal__progress__circle\">\n                            <span className=\"fas fa-circle icon\"></span>\n                        </span>\n                        <span className=\"how-to-apply--pgt--js__modal__progress__text\">\n                            Method of study\n                        </span>\n                    </span>\n                </li>\n            ),\n        alternative = props.element.dataset.otheryear &&\n            props.element.dataset.otherurl && (\n                <p className=\"how-to-apply--pgt--js__modal__alternative\">\n                    <a href={props.element.dataset.otherurl}>\n                        {props.element.dataset.otheryear} entry is also\n                        available.\n                    </a>\n                </p>\n            );\n\n    const [focusTrap, setFocusTrap] = useState({});\n\n    let modalRef = null,\n        modalContentRef = null;\n    const getModal = () => modalRef,\n        getModalContent = () => modalContentRef;\n\n    useEffect(() => {\n        if (!focusTrap.activate) {\n            setFocusTrap(\n                createFocusTrap(getModalContent(), {\n                    initialFocus: getModalContent().querySelector(\n                        '.how-to-apply--pgt--js__options button, .how-to-apply--pgt--js__options a'\n                    ),\n                    onDeactivate: () => setModalVisible(false),\n                    clickOutsideDeactivates: true,\n                })\n            );\n        }\n\n        if (modalVisible) {\n            focusTrap.activate && focusTrap.activate();\n            disableBodyScroll(getModal());\n        } else {\n            focusTrap.deactivate && focusTrap.deactivate();\n            enableBodyScroll(getModal());\n        }\n    }, [modalVisible]);\n\n    return (\n        <>\n            <ul className=\"cta-block\">\n                <li className=\"cta-block__cta\">\n                    <button\n                        className=\"primary-cta-arrow--bright\"\n                        onClick={() => {\n                            setModalVisible(true);\n                            setFirstStep(true);\n                            setDateSelection();\n                            setMethodSelection();\n                            setBtnSelection();\n                            setLinkSelection();\n                            filterQualificationData(entryPoints);\n                        }}\n                    >\n                        <span>Apply now</span>\n                    </button>\n                </li>\n            </ul>\n            <div\n                className=\"how-to-apply--pgt--js__modal\"\n                data-open={modalVisible}\n                ref={(modal) => (modalRef = modal)}\n            >\n                <div\n                    className=\"how-to-apply--pgt--js__modal__content\"\n                    ref={(modalContent) => (modalContentRef = modalContent)}\n                >\n                    <button\n                        className=\"how-to-apply--pgt--js__close\"\n                        onClick={() => {\n                            focusTrap.deactivate && focusTrap.deactivate();\n                            enableBodyScroll(getModal());\n                            setModalVisible(false);\n                        }}\n                    >\n                        <span\n                            className=\"fas fa-times icon\"\n                            aria-label=\"Close\"\n                        ></span>\n                    </button>\n                    {!firstStep ? (\n                        <div\n                            className=\"how-to-apply--pgt--js__modal__reset\"\n                            style={{ display: 'block' }}\n                        >\n                            <button\n                                onClick={() => {\n                                    // Clear options display and render what user would see if modal first opened\n                                    setSelection();\n                                    // setInitialSelection(initialModalDisplay);\n                                    setFirstStep(true);\n                                    // setWindowPrompt('Original prompt');\n                                }}\n                            >\n                                <span className=\"fas fa-redo\"></span>{' '}\n                                <span>Start again</span>\n                            </button>\n                        </div>\n                    ) : null}\n                    <ol className=\"how-to-apply--pgt--js__modal__progress\">\n                        {qualificationsProgress}\n                        {/* {subjectsProgress} */}\n                        {entryPointsProgress}\n                        {/* {locationsProgress} */}\n                        {nextStep}\n                    </ol>\n                    <ol className=\"how-to-apply--pgt--js__modal__progress--mobile\">\n                        {qualificationsProgressMobile}\n                        {/* {subjectsProgressMobile}\n                        {entryPointsProgressMobile} */}\n                        {/* {locationsProgressMobile} */}\n                        {nextStepMobile}\n                    </ol>\n                    <div className=\"how-to-apply--pgt--js__modal__content-wrapper\">\n                        <h2>Start in {props.element.dataset.year}</h2>\n                    </div>\n                    {qualificationQuestion}\n                    {/* {subjectQuestion} */}\n                    {/* {entryQuestion}\n                    {locationQuestion}\n                    {applyQuestion} */}\n                    <div className=\"how-to-apply--pgt--js__modal__content-wrapper\">\n                        {alternative}\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nHowToApply.propTypes = {\n    config: PropTypes.array,\n    element: PropTypes.object,\n};\n\nexport default HowToApply;\n","/**\n * Functions to retrieve how to apply configuration.\n *\n * @module pgt-data\n * @author Web Development\n * @copyright City, University of London 2020\n */\n\nimport { axiosRequest } from '../../util.js';\n\nconst timeout = 30000;\n\n/**\n * How to apply configuration.\n *\n * @param {string} url The HTA configuration file.\n * @return {Promise} - A promise of  configuration object.\n */\nexport function howToApplyConfig(url) {\n    const config = {\n        timeout: timeout,\n        url: url,\n    };\n\n    return axiosRequest(config);\n}\n","/**\n * Useful utility functions\n *\n * @module util\n * @author Web Development\n * @copyright City, University of London 2018-2020\n */\n\nimport axios from 'axios';\nimport React from 'react';\n\n/**\n * Turns string boolean into real boolean.\n *\n * @param {string} s - A string that may be 'true'.\n * @returns {boolean} True if 'true'.\n */\nexport function toBool(s) {\n    return s === 'true' ? true : false;\n}\n\nconst partialMatchFn = (m) => (s) => s.indexOf(m) < 0,\n    fullMatchFn = (m) => (s) => s !== m;\n\n/**\n * Remove a class name from an HTML element.\n *\n * @param {HTMLElement} elem - An HTML element.\n * @param {string} className - A string representing the class to remove.\n * @param {boolean} [removePartials] - If true, remove partially matching classes.\n */\nexport function removeClass(elem, className, removePartials) {\n    const matchFn = removePartials\n        ? partialMatchFn(className)\n        : fullMatchFn(className);\n    elem.className = elem.className\n        .split(/\\s+/)\n        .filter((s) => matchFn(s))\n        .join(' ');\n}\n\n/**\n * Detect whether reduced motion is enabled.\n *\n * If it is, you should shortcut animations, disable autoplay elements, avoid\n * smooth scrolling in favour of jump scrolling, etc.\n *\n * Currently unsupported by Chrome, but works in Safari and Firefox.\n *\n * @returns {boolean} Boolean indicating that the reduce motion media query matches.\n */\nexport function reduceMotion() {\n    const reducedMotionQuery = window.matchMedia(\n        '(prefers-reduced-motion: reduce)'\n    );\n    return reducedMotionQuery.matches ? true : false;\n}\n\n/**\n * Predicate testing whether an element is currently visible, as opposed to\n * displayed: none; or similar. Doesn't necessarily mean it's visible in the\n * window.\n *\n * @param {HTMLElement} elem - An HTML element.\n * @returns {boolean} - Is it visible?\n */\nexport function isVisible(elem) {\n    return elem.offsetHeight !== 0 && elem.offsetWidth !== 0 ? true : false;\n}\n\n/**\n * Predicate testing whether an element is positioned in the window.\n *\n *\n * @param {HTMLElement} elem - An HTML element.\n * @returns {boolean} - Is it onscreen?\n */\nexport function verticallyInWindow(elem) {\n    return elem.getBoundingClientRect().top >= 0 &&\n        elem.getBoundingClientRect().top <= window.innerHeight\n        ? true\n        : false;\n}\n\n/**\n * Turn a query string into an object.\n *\n * @param {string} parameterString - An HTML query string.\n * @returns {object} An object containing the parameters.\n */\nexport function parametersToObject(parameterString) {\n    const parameters = {};\n    parameterString\n        .substr(1)\n        .split('&')\n        .forEach((parameter) => {\n            const [k, v] = parameter.split('=');\n            parameters[k] = v;\n        });\n    return parameters;\n}\n\n/**\n * Turn an object into a query string.\n *\n * @param {object} parameterObj - An object containing the parameters and their values.\n * @returns {string} A string of the parameters.\n */\nexport function objectToParameters(parameterObj) {\n    if (Object.keys(parameterObj).length > 0) {\n        let parameters = '?';\n        for (const key in parameterObj) {\n            parameters.length !== 1 && (parameters += '&');\n            parameters += key + '=' + parameterObj[key];\n        }\n        return parameters;\n    } else {\n        return '';\n    }\n}\n\n/**\n * Track a Google Analytics event.\n *\n * @param {string} event - The event key for Tag Manager.\n * @param {string} eventCategory - The event category.\n * @param {string} eventAction - The event action.\n * @param {string} [eventLabel] - The event label.\n * @param {number} [eventValue] - The event value.\n * @param {boolean} [nonInteractionHit] - Does this count as interacting with the page?\n */\nexport function gaEvent(\n    event,\n    eventCategory,\n    eventAction,\n    eventLabel,\n    eventValue,\n    nonInteractionHit\n) {\n    window.dataLayer = window.dataLayer || [];\n    window.dataLayer.push({\n        event: event,\n        eventCategory: eventCategory,\n        eventAction: eventAction,\n        eventLabel: eventLabel,\n        eventValue: eventValue,\n        nonInteractionHit: nonInteractionHit,\n    });\n}\n\n/**\n * Append an array of elements to an element.\n *\n * @param {HTMLElement} elem - The parent element.\n * @param {HTMLElement[]} children - An array of elements to append to it.\n */\nexport function appendAll(elem, children) {\n    children.forEach((child) => elem.appendChild(child));\n}\n\n/**\n * Extract number from string, e.g. return '123' from string 'a1b2c3'.\n *\n * @param {string} string - String\n */\nexport function numberFromString(string) {\n    let number = string.replace(/\\D/g, '');\n    return number;\n}\n\n/**\n * Calculates viewport width to determinte if using mobile\n * @param {number} number - width of screen, with default value = 432.\n *\n */\nexport function isMobile(screen = 432) {\n    const viewPortWidth = window.innerWidth;\n    const mobileScreen = screen;\n\n    if (viewPortWidth < mobileScreen) {\n        return true;\n    }\n}\n\n/**\n *\n * Turn DOM elements to array e.g return [li, li, li] from DOM element selecting 'li' <ul><li></li><li></li><li></li></ul>\n *\n * @param {object} object - Object\n */\n\nexport function toArray(obj) {\n    let array = [];\n    // iterate backwards ensuring that length is an UInt32\n    for (let i = obj.length >>> 0; i--; ) {\n        array[i] = obj[i];\n    }\n    return array;\n}\n\n/**\n * Check browser user agent is IE or edge and return version number\n */\nexport function detectIE() {\n    const ua = window.navigator.userAgent,\n        versionLength = 10,\n        msie = ua.indexOf('MSIE '),\n        msieVersionOffset = 5;\n\n    if (msie > 0) {\n        // IE 10 or older => return version number\n        return parseInt(\n            ua.substring(msie + msieVersionOffset, ua.indexOf('.', msie)),\n            versionLength\n        );\n    }\n\n    const trident = ua.indexOf('Trident/'),\n        tridentVersionOffset = 3;\n\n    if (trident > 0) {\n        // IE 11 => return version number\n        let rv = ua.indexOf('rv:');\n        return parseInt(\n            ua.substring(rv + tridentVersionOffset, ua.indexOf('.', rv)),\n            versionLength\n        );\n    }\n\n    const edge = ua.indexOf('Edge/'),\n        edgeVersionOffset = 5;\n\n    if (edge > 0) {\n        // Edge (IE 12+) => return version number\n        return parseInt(\n            ua.substring(edge + edgeVersionOffset, ua.indexOf('.', edge)),\n            versionLength\n        );\n    }\n\n    // other browser\n    return false;\n}\n\n/**\n * Check if browser supports IntersectionObserver API\n *\n * @returns {Boolean} -\n */\nexport function checkIntersectionObserver() {\n    if (\n        'IntersectionObserver' in window &&\n        'IntersectionObserverEntry' in window &&\n        'intersectionRatio' in window.IntersectionObserverEntry.prototype\n    ) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n/**\n * Create elements containing classes, content and any other attributes\n *\n * @param {string} type - Type of element to create, e.g. \"div\", \"button\".\n * @param {array} attributes - Array of objects specifying which attributes to assign to the element i.e. {label : \"class\", val : \"container\"}\n */\nexport function createHTMLElement(type, attributes) {\n    let el = document.createElement(type);\n    attributes.map(function (att) {\n        att.label === 'content'\n            ? el.appendChild(document.createTextNode(att.val))\n            : el.setAttribute(att.label, att.val);\n    });\n    return el;\n}\n\nexport function uppercaseFirstLetterLowercaseRest(s) {\n    return s.charAt(0).toUpperCase() + s.slice(1).toLowerCase();\n}\n\n/**\n * Asynchronous request to Funnelback web service.\n *\n * @param {object} config An axios configuration object.\n * @return {Promise} - A promise of a Funnelback response.\n */\nexport function axiosRequest(config) {\n    const httpOK = 200;\n\n    return axios(config)\n        .then((response) => {\n            if (httpOK === response.status) {\n                return response.data;\n            } else {\n                throw `Bad response: ${response.status}`;\n            }\n        })\n        .catch((e) => {\n            if (!axios.isCancel(e)) {\n                gaEvent(\n                    'jsError',\n                    'JavaScript error',\n                    `Line ${e.lineNumber} – ${e.message}`,\n                    `axiosRequest ${e.fileName} (${window.location})`,\n                    true\n                );\n            }\n        });\n}\n\n/**\n * Returns the correct English suffix for a number.\n *\n * @param  {number} day - The day of the month.\n * @returns {string} The correct suffix.\n */\nfunction daySuffix(day) {\n    const eleventh = 11,\n        thirteenth = 13,\n        lastDigit = day.toString().slice(-1);\n\n    return day >= eleventh || day <= thirteenth\n        ? 'th'\n        : lastDigit === '1'\n        ? 'st'\n        : lastDigit === '2'\n        ? 'nd'\n        : lastDigit === '3'\n        ? 'rd'\n        : 'th';\n}\n\n/**\n * Format a date for React.\n *\n * @param {Date} date - A date object.\n * @returns {ReactFragment} The formatted date.\n */\nexport function formatReactDate(date) {\n    const months = [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December',\n        ],\n        days = [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday',\n        ];\n\n    return (\n        <time dateTime={date.toISOString().split('T')[0]}>\n            {days[date.getUTCDay()]}, {date.getUTCDate()}\n            <sup>{daySuffix(date.getUTCDate())}</sup>{' '}\n            {months[date.getUTCMonth()]} {date.getUTCFullYear()}\n        </time>\n    );\n}\n\n/**\n * Array slicer\n *\n * @param {array} arr - array to be split up into subarrays\n * @param {number} len - max number items that goes into each subarray\n */\nexport function arraySlicer(arr, len) {\n    let newArray = [],\n        i = 0,\n        n = arr.length;\n\n    while (i < n) {\n        newArray.push(arr.slice(i, (i += len)));\n    }\n    return newArray;\n}\n"],"sourceRoot":""}